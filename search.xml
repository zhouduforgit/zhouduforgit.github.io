<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/article/4a17b156.html"/>
      <url>/article/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git的push失败</title>
      <link href="/article/90ef2d9d.html"/>
      <url>/article/90ef2d9d.html</url>
      
        <content type="html"><![CDATA[<h4 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h4><p>​我把自己的blog目录连接上gitee的仓库。在Git Remotes中设置仓库路径<code>https://gitee.com/zhouduisgood/blog2source.git</code>， git push以后出现以下情况</p><div class="tip error"><p>error: failed to push some refs to ‘<a href="https://gitee.com/zhouduisgood/blog2source.git&#39;">https://gitee.com/zhouduisgood/blog2source.git&#39;</a><br>To <a href="https://gitee.com/zhouduisgood/blog2source.git">https://gitee.com/zhouduisgood/blog2source.git</a><br>!refs&#x2F;heads&#x2F;master:refs&#x2F;heads&#x2F;master[rejected] (fetch first)<br>hint: Updates were rejected because the remote contains work that you do</p></div>]]></content>
      
      
      <categories>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>玩象棋的那些事</title>
      <link href="/article/e36836d7.html"/>
      <url>/article/e36836d7.html</url>
      
        <content type="html"><![CDATA[<h3 id="为什么玩象棋"><a href="#为什么玩象棋" class="headerlink" title="为什么玩象棋"></a>为什么玩象棋</h3><p>​因为我老爸小时候教我玩过，每到过年的时候我爸就跟二伯玩，我就在那里看着。再加上放学回家路上都有一群大爷大叔围城一坨街边玩我有时也会凑热闹围观，就像这样。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E6%97%A5%E5%B8%B8/dayexiaqi1.jpg" alt="dayexiaqi1"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E6%97%A5%E5%B8%B8/dayexiaqi2.jpg" alt="dayexiaqi2"></p><h3 id="玩象棋的花的时间"><a href="#玩象棋的花的时间" class="headerlink" title="玩象棋的花的时间"></a>玩象棋的花的时间</h3><p>​我开始玩象棋的时候是大三上网课的那段时间开始的那时在家上学校的网课根本不听就在那里玩。一直玩到现在。应该2000把，假设一把7分钟。</p><p>​<code>2000 * 7</code> &#x3D;  <code>14000</code>分钟 &#x3D; <code>234</code>小时  基本是10天没日没夜的玩一直没有停过。如果用这个时间养成一个新的爱好那肯定够了。比如跑步每天跑30分钟。那么时间要468天才能消耗完这个时间。想象一下这468天每天用来干其它的事情可以变成什么样。</p><ol><li><p>跑步468天可以从现在5公里练成10公里，也能保持身材不长胖。毕业9个月长胖了5斤。125斤了</p></li><li><p>要是用来练习跳舞的话，那基本动作甩头、抖肩、甩胯、扭腰等等动作应该练熟了</p></li><li><p>要是用来练习炒菜的话，那西红柿炒鸡、炒土豆丝、炒青菜、杂鱼等等家常菜也会练熟了</p></li><li><p>要是用来练习单杠的话。大三可以12个，现在理想状态可以20个，结果现在最多11个。</p></li><li><p>要是用来穿衣搭配的话那衣品也会好一点</p></li></ol><h3 id="所以"><a href="#所以" class="headerlink" title="所以"></a>所以</h3><p>​以后用下象棋的时间来干上面几件事情。</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度收录-SEO</title>
      <link href="/article/e26c192c.html"/>
      <url>/article/e26c192c.html</url>
      
        <content type="html"><![CDATA[<h3 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h3><p>​因为我想百度搜索<code>周大嘟</code>，就会出现我滴网站。类比别人的效果，如下如所示。</p><h4 id=""><a href="#" class="headerlink" title=""></a><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220403112111562.png" alt="image-20220403112111562"></h4><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><blockquote><p>&amp;emsp;参考网站</p><p><code>https://www.bilibili.com/video/BV1W34y1o7yK?spm_id_from=333.999.0.0</code></p><p><code>https://blog.juanertu.com/archives/9013c8d8.html</code>。</p></blockquote><h4 id="Step1-添加网站"><a href="#Step1-添加网站" class="headerlink" title="Step1-添加网站"></a>Step1-添加网站</h4><p>​打开网站<code>https://ziyuan.baidu.com/linksubmit/url</code>。点击站点管理—&gt;添加网站。添加网站分为以下3步。</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1"><span class='p blue'>输入网站</span></button></li><li class="tab"><button type="button" data-href="#test4-2"><span class='p blue'>站点属性</span></button></li><li class="tab"><button type="button" data-href="#test4-3"><span class='p blue'>验证网站</span></button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><table><thead><tr><th align="center">网站类型</th><th align="center">http:&#x2F;&#x2F;  OR  https:&#x2F;&#x2F;</th></tr></thead><tbody><tr><td align="center">后面</td><td align="center">zddisgood.top</td></tr></tbody></table><p>我网站类型选择是https:&#x2F;&#x2F;  。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220403114543116.png" alt="站点属性"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p>这验证有三种方式：有文件验证、HTML标签验证、CNAME验证。我选择第二种</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220403115440491.png" alt="HTML标签验证"></p><p>然后hexo clean &amp; hexo generate &amp; hexo deploy 点击页面的”完成验证”按钮。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220403120512000.png" alt="HTML验证成功"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr><h4 id="Step2-链接推送"><a href="#Step2-链接推送" class="headerlink" title="Step2-链接推送"></a>Step2-链接推送</h4><p>现在网站验证成功了，但是只能通过浏览器输入网址的方式访问，访问方式单一。选择普通收录的API提交。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220403122210768.png" alt="PTSL-API"></p><p><code>http://data.zz.baidu.com/urls?*site*=https://zddisgood.top&amp;*token*=14TuAFgZiOAiPlNq</code>测试失败了。 以下三个url都失败了不知道什么原因，出现下图报错。</p><table><thead><tr><th><code>http://data.zz.baidu.com/urls?site=www.zddisgood.top&amp;token=14TuAFgZiOAiPlNq</code></th></tr></thead><tbody><tr><td><code>http://data.zz.baidu.com/urls?site=https://zddisgood.top&amp;token=14TuAFgZiOAiPlNq</code></td></tr><tr><td><code>http://data.zz.baidu.com/urls?site=zddisgood.top&amp;token=14TuAFgZiOAiPlNq</code></td></tr></tbody></table><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220403131209953.png" alt="API提交失败"></p><h5 id="主动推送"><a href="#主动推送" class="headerlink" title="主动推送"></a>主动推送</h5><p>​API推送不行就下载主动推送插件。打开你的博客根目录的cmd窗口。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-baidu-url-submit</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure><p>在你滴配置文件_config.yml,添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主动推送百度，被百度收录</span></span><br><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">10</span> <span class="comment"># 提交最新的10个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">https://zddisgood.top/</span> <span class="comment"># 百度站长平台中注册的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">14TuAFgZiOAiPlNq</span> <span class="comment"># 秘钥，百度站长平台 &gt; 推送接口 &gt; 接口调用地址中token字段</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment"># 文本文档的地址， 新链接会保存在此文本文档里，不用改</span></span><br></pre></td></tr></table></figure><p>最后在你的_config.yml中的deploy块中加上 - type: baidu_url_submitter</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220403133257666.png" alt="image-20220403133257666"></p><h3 id="Url持久化"><a href="#Url持久化" class="headerlink" title="Url持久化"></a>Url持久化</h3><p>​因为hexo博客文章的路径太长了,都是 【网站名称／年／月／日／文章名称】这种形式。比如<code>https://zddisgood.top/2022/03/28/Nginx的84location指令</code>。万一文章标题变了，上面url就失效了。这种链接对搜索爬虫是很不友好的，第一它的 url 结构超过了三层，太深了。如图</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220403134830557.png" alt="myURL"></p><p>在你滴博客根路径的cmd窗口要安装hexo-abbrlink插件。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-abbrlink</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure><p>然后修改_config.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://zddisgood.top/</span></span><br><span class="line"><span class="comment">## permalink: :year/:month/:day/:title/    oldCode</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">archives/:abbrlink.html</span>         <span class="comment">#newCode</span></span><br><span class="line"><span class="attr">abbrlink:</span>                                  <span class="comment">#newCode</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>  <span class="comment"># 算法：crc16(default) and crc32    newCode</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>    <span class="comment"># 进制：dec(default) and hex        newCode</span></span><br></pre></td></tr></table></figure><p>重新部署一下就看见你的文章url变短了,如图。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220403151037944.png" alt="URl变短持久化"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> seo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssl生成和https的配置</title>
      <link href="/article/29446627.html"/>
      <url>/article/29446627.html</url>
      
        <content type="html"><![CDATA[<h3 id="最终目的"><a href="#最终目的" class="headerlink" title="最终目的"></a>最终目的</h3><p>​输入zddisgood.top会自动跳转到<a href="https://zddisgood.top/">https://zddisgood.top</a></p><h3 id="SSL协议介绍"><a href="#SSL协议介绍" class="headerlink" title="SSL协议介绍"></a>SSL协议介绍</h3><p>​SSL协议是安全套接字协议，我理解http+ssl就是https。更加安全更加保密等等。</p><h3 id="Nginx配置ssl指令"><a href="#Nginx配置ssl指令" class="headerlink" title="Nginx配置ssl指令"></a>Nginx配置ssl指令</h3><p>​参考官网<a href="http://nginx.org/en/docs/http/ngx_http_ssl_module.html">Module ngx_http_ssl_module (nginx.org)</a>的说明ssl命令可写在server块和http块里面。如下表</p><table><thead><tr><th>语法</th><th>ssl on | off</th></tr></thead><tbody><tr><td>默认值</td><td>ssl off</td></tr><tr><td>位置</td><td>http\  server</td></tr></tbody></table><h4 id="ssl证书生成"><a href="#ssl证书生成" class="headerlink" title="ssl证书生成"></a>ssl证书生成</h4><p>​我是用阿里云的ssl证书。准备之前需要自己先注册域名。点击【SSL证书】—-&gt;【证书申请】，一开始每人会有20个免费证书。但是证书是有状态滴。必须是<code>已签发</code>状态。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220402111709198.png" alt="ssl证书状态"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220402111809693.png" alt="下载nginx版本"></p><p>​解压证书文件，用fxtp传输到自己的虚拟机某个路径下。我路径是<code>/usr/local/nginx/conf/cert/</code>。</p><h4 id="nginx-conf配置"><a href="#nginx-conf配置" class="headerlink" title="nginx.conf配置"></a>nginx.conf配置</h4><p>​把HTTPS server的配置解开注释</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">HTTPS server</span></span><br><span class="line">server &#123;</span><br><span class="line">         listen 443 ssl;</span><br><span class="line">         server_name  www.zddisgood.top; #需要将yourdomain替换成证书绑定的域名。</span><br><span class="line">         ssl_certificate /usr/local/nginx/conf/cert/7282808_zddisgood.top.pem;</span><br><span class="line">         ssl_certificate_key /usr/local/nginx/conf/cert/7282808_zddisgood.top.key;</span><br><span class="line">         ssl_session_timeout 5m;</span><br><span class="line">         ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">           #表示使用的加密套件的类型。</span><br><span class="line">          ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #表示使用的TLS协议的类型。</span><br><span class="line">          ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line">          location / &#123;</span><br><span class="line">                  root /home/www/website;  #Web网站程序存放目录。</span><br><span class="line">                  index index.html index.htm;</span><br><span class="line">           &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>并开放防火墙443端口重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=443/tcp --permanent </span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure><p>并重启nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(iZbp1801okrz74913rnwj5Z)/usr/local/nginx/sbin&gt;./nginx -t</span><br><span class="line">nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /usr/local/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">(iZbp1801okrz74913rnwj5Z)/usr/local/nginx/sbin&gt;./nginx -s reload</span><br></pre></td></tr></table></figure><p>​此时浏览器输入<a href="https://zddisgood.top可以访问成功;输入zddisgood.top也能访问成功【但是会显示不安全标记,不符合我的最终目的】如图./">https://zddisgood.top可以访问成功；输入zddisgood.top也能访问成功【但是会显示不安全标记，不符合我的最终目的】如图。</a></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220402114806415.png" alt="image-20220402114806415"></p><p>所以要用rewrite命令重定向请求。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  zddisgood.top;</span><br><span class="line">        location / &#123;</span><br><span class="line">            #root   /home/www/website;      oldCode</span><br><span class="line">            #index  index.html index.htm;   oldCode</span><br><span class="line">            rewrite ^(.*)$ https://zddisgood.top$1;  #newCode</span><br><span class="line">        &#125;</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   /home/www/website;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>经过上述配置大功告成。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220406183656718.png" alt="nginx的https配置成功"></p><ol start="3"><li><code>flat</code> 样式</li></ol><div class="note icon flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><ol start="5"><li><code>no-icon</code> 样式</li></ol><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了….</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>]]></content>
      
      
      <categories>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git的提交失败及解决</title>
      <link href="/article/90ef2d9d.html"/>
      <url>/article/90ef2d9d.html</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>​今天在提交博客源码到仓库的时候，输入正确的账号和密码发现提交失败并提示</p><div class="tip error"><p>remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.remote: Please see <a href="https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/">https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/</a> for more information </p></div><p>大概意思是从2021年8月13号开始。使用个人令牌代替密码登录。于是参考以下帖子解决<a href="https://blog.csdn.net/weixin_41010198/article/details/119698015%E3%80%82">https://blog.csdn.net/weixin_41010198/article/details/119698015。</a></p><h3 id="问题的解决"><a href="#问题的解决" class="headerlink" title="问题的解决"></a>问题的解决</h3><ol><li>打开github的<code>settings</code>的<code>deveploer settings</code>。</li><li>点击<code>Personal access tokens</code></li><li>这个Personal access tokens只出现一次要保存起来。 </li><li>把这个token替换在hexo的_config.yml文件 部署模块中的repo</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="comment">## repo: https://github.com/zhouduforgit/zhouduforgit.github.io.git   oldCode</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">https://zhouduforgit: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@github.com/zhouduforgit/zhouduforgit.github.io.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">git@118.31.250.190:/home/git/blog.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_url_submitter</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx的Gzip模块</title>
      <link href="/article/109bbda.html"/>
      <url>/article/109bbda.html</url>
      
        <content type="html"><![CDATA[<h3 id="Nginx的Gzip模块"><a href="#Nginx的Gzip模块" class="headerlink" title="Nginx的Gzip模块"></a>Nginx的Gzip模块</h3><p>​Gzip是压缩文件大小用的。首先把一个演示文件jquery-3.3.1.js放在<code>/usr/local/nginx/html</code>下面。使用ll可以看到压缩之前的大小【单位字节— byte】。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(localhost.localdomain)/usr/local/nginx/html&gt;ll</span><br><span class="line">总用量 288</span><br><span class="line">-rw-r--r--. 1 root root    589 3月  25 20:06 50x.html</span><br><span class="line">-rw-r--r--. 1 root root    131 3月  25 20:04 haha.html</span><br><span class="line">drwxr-xr-x. 2 root root   4096 3月  28 18:29 images</span><br><span class="line">-rw-r--r--. 1 root root    676 3月  25 22:07 index.html</span><br><span class="line">drwxr-xr-x. 2 root root   4096 3月  29 11:23 jquery-3.3.1</span><br><span class="line">-rw-r--r--. 1 root root 271751 3月  29 11:24 jquery-3.3.1.js </span><br></pre></td></tr></table></figure><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220329115220372.png" alt="fanfgwen"></p><p>​此时想压缩jquery.js的大小就需要修改配置nginx.conf。让gzip功能开放并指定压缩的文件类型，默认是文本文件text&#x2F;plain。而这时是js类型【application&#x2F;javascript 】。参考官网<a href="https://nginx.org/en/docs/http/ngx_http_gzip_module.html%E9%85%8D%E7%BD%AE%E3%80%82%E6%88%91%E6%BB%B4%E4%BF%AE%E6%94%B9%E5%A6%82%E4%B8%8B">https://nginx.org/en/docs/http/ngx_http_gzip_module.html配置。我滴修改如下</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gzip  on;</span><br><span class="line">gzip_types application/javascript text/plain ;</span><br></pre></td></tr></table></figure><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220329120951471.png" alt="压缩后"></p>]]></content>
      
      
      <categories>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx的location指令</title>
      <link href="/article/65a94833.html"/>
      <url>/article/65a94833.html</url>
      
        <content type="html"><![CDATA[<h3 id="Nginx的location的用法"><a href="#Nginx的location的用法" class="headerlink" title="Nginx的location的用法"></a>Nginx的location的用法</h3><p>​location可以用&#x3D;号，也可以不加&#x3D;号。</p><p>​不加&#x3D;号配置如下。是模糊匹配查询只要前三个字母是abc就行了。</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.200.141/abc?p1=tom</span><br><span class="line">http://192.168.200.141/abc</span><br><span class="line">http://192.168.200.141/abcdsa</span><br><span class="line">这些情况都可以访问</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    location /abc &#123;</span><br><span class="line">        default_type text/plain;</span><br><span class="line">        return 200 &quot;access success~~&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220328175605148.png" alt="没加="></p><p>​加&#x3D;号的情况,必须按照&#x3D;后面一模一样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">      listen       80;</span><br><span class="line">      server_name  localhost;</span><br><span class="line">      location =/abc &#123;</span><br><span class="line">          default_type text/plain;</span><br><span class="line">          <span class="built_in">return</span> 200 <span class="string">&quot;access success~~&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      location = /50x.html &#123;</span><br><span class="line">          root   html;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.200.141/abc   可以匹配</span><br><span class="line">http://192.168.200.141/abc/  不能访问 </span><br></pre></td></tr></table></figure><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220328180718961.png" alt="加了="></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>​在nginx,conf中location关键字后面加上&#x3D;。浏览器输入的网址必须和&#x3D;号后面的内容【包括斜杠】</p>]]></content>
      
      
      <categories>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx自定义日志</title>
      <link href="/article/2934b5ed.html"/>
      <url>/article/2934b5ed.html</url>
      
        <content type="html"><![CDATA[<h3 id="Nginx的访问记录查看"><a href="#Nginx的访问记录查看" class="headerlink" title="Nginx的访问记录查看"></a>Nginx的访问记录查看</h3><p>​默认的nginx的访问记录在<code>/usr/local/nginx/logs/access.log</code>中查看</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220327092056550.png" alt="nginx的访问记录"></p><p>​自定义的日志文件可以改变文件名和路径，原始的access_log的配置在nginx.conf中注释掉了。在nginx.conf中新增以下命令【access_log logs&#x2F;my.log; 】就会出现新的日志记录文件</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220327095818953.png" alt="新指定的nginx访问文件和路径"></p><p>​Nginx服务器支持对服务日志的格式、大小、输出等进行设置，需要使用到两个指令，分别是access_log和log_format指令。</p><p>（1）access_log:用来设置用户访问日志的相关属性。</p><table><thead><tr><th>语法</th><th>access_log path[format[buffer&#x3D;size]]</th></tr></thead><tbody><tr><td>默认值</td><td>access_log logs&#x2F;access.log combined;</td></tr><tr><td>位置</td><td><code>http</code>, <code>server</code>, <code>location</code></td></tr></tbody></table><p>（2）log_format:用来指定日志的输出格式。</p><table><thead><tr><th>语法</th><th>log_format name [escape&#x3D;default|json|none] string….;</th></tr></thead><tbody><tr><td>默认值</td><td>log_format combined “…”;</td></tr><tr><td>位置</td><td>http</td></tr></tbody></table><p>​配置log_format的内容会，改变访问日志的输出的内容和格式，如下图</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220327104022963.png" alt="nginx日志内容变化"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line">    log_format myformat <span class="string">&#x27;========&gt; lalalalala woshimaibaodexiaohangjia~~&#x27;</span>;</span><br><span class="line">    access_log logs/my.log myformat;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        location / &#123;</span><br><span class="line">            <span class="comment">#root   html;# 原始的html路径是/usr/local/nginx/html文件夹</span></span><br><span class="line">            <span class="comment">#root /root/html;</span></span><br><span class="line">            <span class="comment">#root /home/www/html;</span></span><br><span class="line">            root /home/tom/html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​可是nginx日志内容是瞎写的，怎么才能又看到自定义的信息又能看到以前默认的信息呢【就是 log_format   main】。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220327110453741.png" alt="image-20220327110453741"></p><p>​其实浏览器的User-Agent的内容就nginx的内置变量【http_user_agent】。可以在myformat中加入$http_user_agent变量就能是日志文件完成一些了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log_format myformat &#x27;========&gt; lalalalala woshimaibaodexiaohangjia~~:$http_user_agent&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220327111707733.png" alt="加入http_user_agent变量"></p><p>​因为access_log不仅在http块中，也写在server块和location块中。设置不同区域的access_log，在tail日志文件的时候就有不同的反应。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">access_log logs/my.log myformat;</span><br><span class="line">   server &#123;</span><br><span class="line">       listen       8080;</span><br><span class="line">       server_name  localhost;</span><br><span class="line">       access_log logs/serverKuai.<span class="built_in">log</span> myformat;</span><br><span class="line">       location / &#123;</span><br><span class="line">           <span class="comment">#root   html;# 原始的html路径是/usr/local/nginx/html/index.html</span></span><br><span class="line">           <span class="comment">#root /root/html;</span></span><br><span class="line">           <span class="comment">#root /home/www/html;</span></span><br><span class="line">           root /home/tom/html;</span><br><span class="line">           index  index.html index.htm;</span><br><span class="line">       &#125;</span><br><span class="line">       location /get_text&#123;</span><br><span class="line">           access_log logs/locaKuai.<span class="built_in">log</span> myformat;</span><br><span class="line">           default_type text/html; </span><br><span class="line">           <span class="built_in">return</span> 200 <span class="string">&quot;&lt;h1&gt;this is nginx text &lt;/h1&gt;&quot;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       location /get_json &#123;</span><br><span class="line">           default_type application/json;</span><br><span class="line">           <span class="built_in">return</span> 200 <span class="string">&quot;&#123; 。。。。</span></span><br></pre></td></tr></table></figure><p>​保存nginx.conf然后重启nginx。进入logs文件夹发现多了2个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(localhost.localdomain)/usr/local/nginx/logs&gt;nginx -s reload</span><br><span class="line">(localhost.localdomain)/usr/local/nginx/logs&gt;ll</span><br><span class="line">总用量 24</span><br><span class="line">-rw-r--r--. 1 root root 5420 3月  27 08:48 access.log</span><br><span class="line">-rw-r--r--. 1 root root 6348 3月  27 12:20 error.log</span><br><span class="line">-rw-r--r--. 1 root root    0 3月  27 12:20 locaKuai.<span class="built_in">log</span>  ---&gt;newCreate</span><br><span class="line">-rw-r--r--. 1 root root 1293 3月  27 11:58 my.log</span><br><span class="line">-rw-r--r--. 1 root root    5 3月  27 11:52 nginx.pid</span><br><span class="line">-rw-r--r--. 1 root root    0 3月  27 12:20 serverKuai.<span class="built_in">log</span>  ---&gt;newCreate</span><br></pre></td></tr></table></figure><p>​当输入192.168.200.140:8080&#x2F;get_text时，tail -f serverKuai.log时</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/serverKuai.log.png" alt="serverKuai.log"></p><p>；当输入192.168.200.140:8080&#x2F;get_text  ，tail -f locaKuai.log时</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220327124552216.png" alt="locaKuai.log"></p><h3 id="Nginx的include的用法"><a href="#Nginx的include的用法" class="headerlink" title="Nginx的include的用法"></a>Nginx的include的用法</h3><p>​前面我们已经对Nginx服务器默认配置文件的结构和涉及的基本指令做了详细的阐述。通过这些指令的合理配置，我们就可以让一台Nginx服务器正常工作，并且提供基本的web服务器功能。</p><p>&amp;emsp;需求如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">（1）有如下访问：</span><br><span class="line">http://192.168.200.140:8081/server1/location1</span><br><span class="line">访问的是：index_sr1_location1.html</span><br><span class="line">http://192.168.200.140:8081/server1/location2</span><br><span class="line">访问的是：index_sr1_location2.html</span><br><span class="line">http://192.168.200.140:8082/server2/location1</span><br><span class="line">访问的是：index_sr2_location1.html</span><br><span class="line">http://192.168.200.140:8082/server2/location2</span><br><span class="line">访问的是：index_sr2_location2.html</span><br><span class="line">（2）如果访问的资源不存在，</span><br><span class="line">返回自定义的404页面</span><br><span class="line">（3）将/server1和/server2的配置使用不同的配置文件分割</span><br><span class="line">将文件放到/home/www/conf.d目录下，然后使用include进行合并</span><br><span class="line">（4）为/server1和/server2各自创建一个访问日志文件</span><br></pre></td></tr></table></figure><p>​我滴思路：现在&#x2F;home&#x2F;www&#x2F;目录conf.d文件夹和myweb文件夹。conf.d文件夹里存放配置信息【理解成application.properties 或者 application.yml 或者 pom.xml】，而myweb里面存在资源和创建404.html文件【myweb可以理解成java的web项目的web资源】。如下</p><table><thead><tr><th>server1</th><th>location1</th><th>index_sr1_location1.html</th></tr></thead><tbody><tr><td>server1</td><td>location2</td><td>index_sr2_location2.html</td></tr><tr><td>server2</td><td>location1</td><td>Index_sr1_location2.html</td></tr><tr><td>server2</td><td>location2</td><td>Index_sr2_location2.html</td></tr></tbody></table><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220328103543286.png" alt="www目录结构"></p><p>输入以下命令更新一下nginx.conf配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">user  www;</span><br><span class="line">worker_processes  2;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line">    #                  规定日志的内容和形式 只能在http块中</span><br><span class="line">    #access_log  logs/access.log  main; 规定日志的作用域  可以写在http\server\location 中</span><br><span class="line">    log_format server1 &#x27;this is ser1 1111:$http_user_agent&#x27;;</span><br><span class="line">    log_format server2 &#x27;this is ser2 2222:$http_user_agent&#x27;;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    include /home/www/conf.d/*.conf;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        #charset koi8-r;</span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        #error_page  404              /404.html;</span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>home/www/conf.d/</code>目录下的server11.conf 和server22.conf代码如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server11.conf</span><br><span class="line">=============================================</span><br><span class="line">server &#123;</span><br><span class="line">     listen       8081;</span><br><span class="line">     server_name  localhost;</span><br><span class="line">     access_log  /home/www/myweb/server1/logs/server1.log  server1;</span><br><span class="line">     location /server1/location1 &#123; </span><br><span class="line">         root  /home/www/myweb/ ;</span><br><span class="line">         index  index_sr1_location1.html;</span><br><span class="line">     &#125;</span><br><span class="line">     location /server1/location2 &#123;</span><br><span class="line">         root /home/www/myweb/ ;</span><br><span class="line">         index index_sr1_location2.html;</span><br><span class="line">     &#125;</span><br><span class="line">     error_page  404              /404.html;</span><br><span class="line">     # redirect server error pages to the static page /50x.html</span><br><span class="line">     #error_page   500 502 503 504 404 /50x.html;</span><br><span class="line">     location = /404.html &#123;</span><br><span class="line">         root   /home/www/myweb;</span><br><span class="line">         index 404.html;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">server22.conf</span><br><span class="line">==============================================</span><br><span class="line">  server &#123;</span><br><span class="line">        listen       8082;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        access_log  /home/www/myweb/server2/logs/server2.<span class="built_in">log</span>  server2;</span><br><span class="line">        location /server2/location1 &#123; </span><br><span class="line">        //代表浏览器输入的地址 192.168.200.141:8082/server2/location1/</span><br><span class="line">            root  /home/www/myweb/ ;</span><br><span class="line">            //</span><br><span class="line">            index  index_sr2_location1.html;</span><br><span class="line">        &#125;</span><br><span class="line">        location /server2/location2 &#123;</span><br><span class="line">            root /home/www/myweb/ ;</span><br><span class="line">            index index_sr2_location2.html;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        error_page   500 502 503 504 404 /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   /home/www/myweb/404.html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220328114408972.png" alt="server1路径"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220328114622442.png" alt="server2路径"></p>]]></content>
      
      
      <categories>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx的Http块的设置</title>
      <link href="/article/71278834.html"/>
      <url>/article/71278834.html</url>
      
        <content type="html"><![CDATA[<h3 id="Nginx配置http块的include和default-type"><a href="#Nginx配置http块的include和default-type" class="headerlink" title="Nginx配置http块的include和default_type"></a>Nginx配置http块的include和default_type</h3><p>​在配置文件中include是mime.type; default_type是application&#x2F;octet-stream;按照我滴理解mime.type就是规定浏览器展示内容的类型和对应的后缀。default_type是mime.type的其中一种就是二进制数据流。default_type可以写在http块中，也可写在server块中，也可以写在location块中。</p><p>​default_type用来配置Nginx响应的前端的请求的默认的MIME类型。</p><table><thead><tr><th>语法</th><th>default_type mime-type</th></tr></thead><tbody><tr><td>默认值</td><td>default_type  text&#x2F;plain</td></tr><tr><td>位置</td><td>http\ server\ location</td></tr></tbody></table><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220326104259782.png" alt="nginx的location中default—type"></p><p>​所以default_type的类型不同，浏览器看到的效果就不同。text&#x2F;plain是纯文本类型，而text&#x2F;html 是html类型，application&#x2F;json是json类型。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220326110108636.png" alt="text/plain"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220326110244548.png" alt="text/html类型"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220326114408532.png" alt="json类型"></p>]]></content>
      
      
      <categories>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx配置成服务</title>
      <link href="/article/6a9bf988.html"/>
      <url>/article/6a9bf988.html</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>​经过前几次的操作发现每一次检测和重启都要进入<code>/usr/local/nginx/sbin</code>目录下很麻烦，那有什么方法解决【在任意的路径下都能使用.&#x2F;nginx -t 和 .&#x2F;nginx -s reload等命令】。问题二每次开机都要手动启动nginx服务，那有什么方式可以nginx服务开机自启动，就像我的window系统的MySQL服务的。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220326145929005.png" alt="MySQL服务开机自启动"></p><h3 id="Nginx配置成系统服务"><a href="#Nginx配置成系统服务" class="headerlink" title="Nginx配置成系统服务"></a>Nginx配置成系统服务</h3><blockquote><p>1、在<code>/usr/lib/systemd/system</code>目录下添加nginx.service,内容如下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/nginx.service</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nginx web service</span><br><span class="line">Documentation=http://nginx.org/en/docs/</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">nginx pid文件位置</span></span><br><span class="line">PIDFile=/usr/local/nginx/logs/nginx.pid</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-t 测试nginx配置文件  -c 指定nginx配置文件位置</span></span><br><span class="line">ExecStartPre=/usr/local/nginx/sbin/nginx -t -c /usr/local/nginx/conf/nginx.conf</span><br><span class="line">ExecStart=/usr/local/nginx/sbin/nginx</span><br><span class="line">ExecReload=/usr/local/nginx/sbin/nginx -s reload</span><br><span class="line">ExecStop=/usr/local/nginx/sbin/nginx -s stop</span><br><span class="line">PrivateTmp=true</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=default.target</span><br></pre></td></tr></table></figure><blockquote><p>2、添加完成后如果权限有问题需要进行权限设置</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 755 /usr/lib/systemd/system/nginx.service</span><br></pre></td></tr></table></figure><blockquote><p>3、使用系统命令来操作Nginx服务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">启动: systemctl start nginx</span><br><span class="line">停止: systemctl stop nginx</span><br><span class="line">重启: systemctl restart nginx</span><br><span class="line">重新加载配置文件: systemctl reload nginx</span><br><span class="line">查看nginx状态: systemctl status nginx</span><br><span class="line">开机启动: systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure><h3 id="Nginx命令配置成环境变量"><a href="#Nginx命令配置成环境变量" class="headerlink" title="Nginx命令配置成环境变量"></a>Nginx命令配置成环境变量</h3><p>​只需要的在&#x2F;etc&#x2F;profile中的最下面配置环境变量才行。输入nginx的sbin目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br><span class="line">在最后一行加上</span><br><span class="line">export PATH=$PATH:/usr/local/nginx/sbin</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运营的分类</title>
      <link href="/article/c8e0d872.html"/>
      <url>/article/c8e0d872.html</url>
      
        <content type="html"><![CDATA[<h4 id="运营的分类"><a href="#运营的分类" class="headerlink" title="运营的分类"></a>运营的分类</h4><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/%E8%BF%90%E8%90%A5%E7%9A%84%E5%88%86%E7%B1%BB-%E5%89%AF%E6%9C%AC.jpg" alt="运营的分类-副本"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 运营 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx全局块的user指令</title>
      <link href="/article/10915962.html"/>
      <url>/article/10915962.html</url>
      
        <content type="html"><![CDATA[<h3 id="Nginx全局块的user指令"><a href="#Nginx全局块的user指令" class="headerlink" title="Nginx全局块的user指令"></a>Nginx全局块的user指令</h3><p>​首先把配置文件的<code>/usr/local/nginx/conf/nginx.conf</code>中的第一句改成user nobody —&gt;user www。再在sbin目录下检查配置。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325203148020.png" alt="没有www用户"></p><p>​就要添加www用户，然后重启nginx看看worker进程的用户是否改变。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325215029979.png" alt="worker进程的改变"></p><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>​<strong>前提条件</strong>当nginx.conf的 usr设置成 user www; 时</p><table><thead><tr><th>nginx.conf的配置路径</th><th>访问效果</th></tr></thead><tbody><tr><td>在nginx.conf中写root  html【其实是&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html&#x2F;】</td><td>√</td></tr><tr><td>在nginx.conf中写root  &#x2F;root&#x2F;html</td><td>×</td></tr><tr><td>在nginx.conf中写root  &#x2F;home&#x2F;www&#x2F;html</td><td>√</td></tr></tbody></table><p>​在配置文件中root后面的html是代表&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html&#x2F;index.html路径下成功访问。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325221241555.png" alt="nginx配置原始"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325221139705.png" alt="image-20220325221139705">若写成root  &#x2F;root&#x2F;html&#x2F;index.html就会报错，先在nginx的sbin验证配置然后再然后重启，发现配置没问题重启也没有问题就是访问不了。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325231646232.png" alt="image-20220325231646232"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325232510641.png" alt="nginx访问失败"></p><h4 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h4><p>​执行<code>su www</code>进入&#x2F;home&#x2F;www&#x2F;目录，再把&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html&#x2F;文件夹复制到此目录。重新修改nginx.conf中的root路径写成<code> root /home/www/html</code>重启就好了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost www]# su www</span><br><span class="line">[www@localhost ~]$ cp -r /usr/local/nginx/html/ ./</span><br><span class="line">[www@localhost ~]$ ll</span><br><span class="line">总用量 12</span><br><span class="line">-rw-r--r--. 1 www www 589 3月  25 23:39 50x.html</span><br><span class="line">-rw-r--r--. 1 www www 131 3月  25 23:39 haha.html</span><br><span class="line">-rw-r--r--. 1 www www 676 3月  25 23:39 index.html</span><br><span class="line">[www@localhost html]$ vim index.html</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    body &#123;</span><br><span class="line">        width: 35em;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        font-family: Tahoma, Verdana, Arial, sans-serif;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.&lt;/p&gt;</span><br><span class="line">&lt;p&gt;For online documentation and support please refer to</span><br><span class="line">&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">Commercial support is available at</span><br><span class="line">&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;em&gt;I am zhoududd&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;em&gt;Nice to meet you for www lujing &lt;/em&gt;&lt;/p&gt;// 这里修改了和原始文件做区分</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325234502691.png" alt="www用户的配置"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325234659277.png" alt="www用户访问成功"></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>​配置文件nginx.conf中user要和root对应才行。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220326093137833.png" alt="nginx.conf的user和root的对应关系"></p>]]></content>
      
      
      <categories>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx服务信号控制</title>
      <link href="/article/a27fdada.html"/>
      <url>/article/a27fdada.html</url>
      
        <content type="html"><![CDATA[<h3 id="Nginx的信号类型"><a href="#Nginx的信号类型" class="headerlink" title="Nginx的信号类型"></a>Nginx的信号类型</h3><p>​使用<code>ps -ef | grep nginx</code>命令能看到nginx的命令的进程。结果如下。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325113655004.png" alt="nginx的信号类型">有master和worker进程。worker进程是打工的，master进程是管家。一个master进程可以控制多个worker进程。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325112141643.png" alt="nginx的master和worker进程"></p><h3 id="Nginx平滑升级"><a href="#Nginx平滑升级" class="headerlink" title="Nginx平滑升级"></a>Nginx平滑升级</h3><p>​nginx平滑升级的场景是当服务器升级更新的时候，不能停止服务。现在我的新的服务器的&#x2F;opt&#x2F;nginxPackage&#x2F;中有2个nginx的压缩包【nginx-1.14.2.tar.gz；nginx-1.16.1.tar.gz】，现在已经用简单的源码安装了nginx-1.14.2。所在目录如下<code>/usr/local/nginx/sbin</code>。并且能够成功访问。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325145105846.png" alt="nginx的成功访问"></p><p>​此时就需要从1.14版本升级到1.16版本。在解压1.16版本时不需要<code> make install</code> 只需要 <code>./configure </code>和<code>make</code>这就会在解压目录。会多出objs文件夹<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325145839656.png" alt="image-20220325145839656"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325145950213.png" alt="image-20220325145950213"></p><p>​在objs中会有一个nginx的二进制文件，是16版本的</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325150204222.png" alt="objs目录"></p><h4 id="用Nginx服务信号升级"><a href="#用Nginx服务信号升级" class="headerlink" title="用Nginx服务信号升级"></a>用Nginx服务信号升级</h4><p>​总之就是把1.16版本的nginx替换到1.14版本的sbin目录下。如下图</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325150821998.png" alt="image-20220325150821998"></p><p>执行kill -USER2 <code>cat /usr/local/nginx/logs/nginx.pid</code> 会产生2个master和worker进程。而我的没有不知道怎么回事。所以这个方法失败了。提示 <strong>-bash: kill: USER2: 无效的信号声明</strong>。平滑升级失败。需要手动的在&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin下 执行 .&#x2F;nginx -s reload </p><h4 id="用Nginx的升级命令"><a href="#用Nginx的升级命令" class="headerlink" title="用Nginx的升级命令"></a>用Nginx的升级命令</h4><p>​准备过程上述的图一样才行。不同点在于在执行执行make upgrade在1.16的安装目录下。先nginx -t检测，在睡1秒再kill -USER2开启新的master和worker进程。关闭老的master进程。但为什么单独的kill -USER2 <code>cat /usr/local/nginx/logs/nginx.pid</code>语句会报错呢？不知道</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220325153231907.png" alt="nginx升级成功"></p>]]></content>
      
      
      <categories>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识Nginx</title>
      <link href="/article/e7ce0129.html"/>
      <url>/article/e7ce0129.html</url>
      
        <content type="html"><![CDATA[<h3 id="我为什么要学习Nginx"><a href="#我为什么要学习Nginx" class="headerlink" title="我为什么要学习Nginx"></a>我为什么要学习Nginx</h3><h4 id="第一"><a href="#第一" class="headerlink" title="第一"></a>第一</h4><p>​想让博客网站的更加安全使用<code>https:zddisgood.top</code>而不是<code>http:zddisgood.top</code>。以方便。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220320162338604.png" alt="百度收录失败"></p><h4 id="第二"><a href="#第二" class="headerlink" title="第二"></a>第二</h4><p>​因为网站提交到百度收录但是上图不是我要的效果，而我想要的效果是红色框框里的变成<code>https:zddisgood.top</code>也可以用<code>site:zddisgood.top</code>这种方式来验证，不过大多数人都不会这种方式。说的专业一点就是做SEO。</p><h3 id="Nginx介绍"><a href="#Nginx介绍" class="headerlink" title="Nginx介绍"></a>Nginx介绍</h3><p>nginx是web服务器是，有代理的功能。</p><h3 id="nginx安装"><a href="#nginx安装" class="headerlink" title="nginx安装"></a>nginx安装</h3><p>安装前的准备。有GCC编译器,PCRE库,zlib库,Openssl开发库。</p><h4 id="通过yum方式安装"><a href="#通过yum方式安装" class="headerlink" title="通过yum方式安装"></a>通过yum方式安装</h4><p>​通过官网资料一步步安装<a href="http://nginx.org/en/linux_packages.html#RHEL-CentOS%E3%80%82%E7%AC%AC%E4%B8%80%E7%A7%8Dyum%E6%96%B9%E5%BC%8F%E4%B8%8B%E8%BD%BD%E7%9A%84%E4%BC%9A%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84%E5%B9%B6%E4%B8%94%EF%BC%8Cconf%E7%9B%AE%E5%BD%95%E5%92%8Chtml%E7%9B%AE%E5%BD%95%E4%B8%8D%E5%9C%A8%E5%90%8C%E4%B8%80%E4%B8%AA%E8%B7%AF%E5%BE%84%E4%B8%8B%EF%BC%8C%E9%80%9A%E8%BF%87nginx">http://nginx.org/en/linux_packages.html#RHEL-CentOS。第一种yum方式下载的会自动配置环境变量的并且，conf目录和html目录不在同一个路径下，通过nginx</a> -V可以看出了。而第二种方式是解压tar包。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220317103843494.png" alt="第一种yum方式下载"></p><p>​yum方式的html展示的路径是在<code>/etc/nginx/conf.d</code>的default.conf 中定义的。所以关于nginx的页面跳转都在<code>/usr/share/nginx/html</code>目录下。如下图所示</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220317110419171.png" alt="yum方式下载的nginx的html展示路径"></p><h4 id="通过nginx源码解压的方式"><a href="#通过nginx源码解压的方式" class="headerlink" title="通过nginx源码解压的方式"></a>通过nginx源码解压的方式</h4><ol><li>首先去官网下载tar压缩包<a href="https://nginx.org/download/nginx-1.20.2.tar.gz%E3%80%82">https://nginx.org/download/nginx-1.20.2.tar.gz。</a></li><li>新建一个目录存放这个压缩包并解压，我的习惯放在&#x2F;opt&#x2F;nginxPackage下。使用tar -zxf nginx-1.20.2.tar.gz压缩</li></ol><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220320171525176.png" alt="nginx压缩包路径"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220320171846017.png" alt="解压后文件情况"></p><p>第三点在&#x2F;opt&#x2F;nginxPackage&#x2F;nginx-1.20.2。执行配置命令.&#x2F;configure</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220321094223987.png" alt="./configure执行以后"></p><p>​第四点执行编译和安装 make &amp; make install ，编译成功以后的nginx目录默认放在&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;下。所以nginx的解压目录<code>/opt/nginxPackage/nginx-1.20.2</code>和nginx的安装目录<code>/usr/local/nginx/</code>不在同一个地方不习惯。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220321121007219.png" alt="image-20220321121007219"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220321123933927.png" alt="简单安装缺少环境变量"></p><h4 id="不同"><a href="#不同" class="headerlink" title="不同"></a>不同</h4><p>​最主要的不同是简单源码安装的时候执行<code>./configure</code>时候没有配置全局变量，执行<code>./configure --help</code>可以看出来nginx相关配置</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220321125823462.png" alt="nginx的相关配置"></p><h3 id="Nginx复杂源码安装"><a href="#Nginx复杂源码安装" class="headerlink" title="Nginx复杂源码安装"></a>Nginx复杂源码安装</h3><p>​和上面简单源码安装不同的地方在于.&#x2F;configure的语句不一样。在配置时指向Nginx的安装目录；指向(执行)程序文件(nginx)的路径；指向Nginx动态模块安装目录；指向配置文件(nginx.conf)的路径；指向配置文件(nginx.conf)的路径；指向错误日志文件的路径；指向访问日志文件的路径；指向Nginx启动后进行ID的文件路径；指向Nginx锁文件的存放路径。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/nginx \</span><br><span class="line">--sbin-path=/usr/local/nginx/sbin/nginx \</span><br><span class="line">--modules-path=/usr/local/nginx/modules \</span><br><span class="line">--conf-path=/usr/local/nginx/conf/nginx.conf \</span><br><span class="line">--error-log-path=/usr/local/nginx/logs/error.log \</span><br><span class="line">--http-log-path=/usr/local/nginx/logs/access.log \</span><br><span class="line">--pid-path=/usr/local/nginx/logs/nginx.pid \</span><br><span class="line">--lock-path=/usr/local/nginx/logs/nginx.lock  --with-http_ssl_module</span><br></pre></td></tr></table></figure><p>但是查看nginx配置信息必须在&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;目录下执行<code>./nginx -v</code>和<code>./nginx -V</code> 查看信息。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220321223023086.png" alt="编译前设置了相关路径"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220321223540482.png" alt="编译没有配置"></p>]]></content>
      
      
      <categories>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux小技巧</title>
      <link href="/article/9a6ac4ff.html"/>
      <url>/article/9a6ac4ff.html</url>
      
        <content type="html"><![CDATA[<h3 id="Liunx小技巧"><a href="#Liunx小技巧" class="headerlink" title="Liunx小技巧"></a>Liunx小技巧</h3><h4 id="命令框左边显示路径"><a href="#命令框左边显示路径" class="headerlink" title="命令框左边显示路径"></a>命令框左边显示路径</h4><p>​效果如图所示，显示用户名和当前的目录</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220321221828948.png" alt="linux小技巧"></p><p>&amp;emsp;代码如下，在&#x2F;etc&#x2F;profile文件里的最下面增加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">ccd</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">cd</span> <span class="variable">$1</span></span><br><span class="line">  PS1=<span class="string">&quot;(`uname -n`)`pwd`&gt;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">cd</span>=ccd</span><br><span class="line"><span class="built_in">cd</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rich Dad &amp; Poor Dad-2为什么要教授财务知识</title>
      <link href="/article/1c5dc3a6.html"/>
      <url>/article/1c5dc3a6.html</url>
      
        <content type="html"><![CDATA[<h3 id="故事内容"><a href="#故事内容" class="headerlink" title="故事内容"></a>故事内容</h3><p>​1990年迈克接管了富爸爸的商业国王，“我”退休47岁退休了，因为资产已经可以自动升值了。发财致富只需要遵循一个简单的原则要明白【资产和负债的区别，并且不断买入资产】。而大部分成年人都会觉得这个道理太简单不想去学，其实自己也并不知道资产和负债的区别，以为自己的负债就是资产。比如房子、车子等事情。可以用现金流的方式画出资产和负债的流向，和收入、支出的流向。有一个简单的理解方式<span class='p red'>资产就是能把钱放进我口袋里的东西，不关我事工作与否; 负债是把钱从我口袋里取走的东西</span>。</p><h4 id="发财梦为什么变噩梦"><a href="#发财梦为什么变噩梦" class="headerlink" title="发财梦为什么变噩梦"></a>发财梦为什么变噩梦</h4><p>​下面列举了一对年轻的夫妻财务状况和消费习惯。这对夫妻嫌住的公寓太小准备存钱买一份自己的房子并且决定要一个孩子。当房子买了以后和小宝宝出生以后就必须更加努力工作，收入增加了同时支出也增加了进入新一轮的”老鼠赛跑游戏“。这对夫妻以为房子是ta们最大”资产“。其实是负债ta们再也不用支付高额的消费贷款因为房债把债务分散到30年以后，其实ta们不懂怎么管理钱缺乏财务知识，只懂怎么赚钱。当“我”还小时富爸爸经常告诉我们有三件事情需要重视，剑；宝石；镜子。其中镜子最重要代表着自知，如果人们有自知的意识就会问问自己的内心”这样做还有意义吗？“随波逐流。</p><h4 id="富人不为钱工作"><a href="#富人不为钱工作" class="headerlink" title="富人不为钱工作"></a>富人不为钱工作</h4><p>​爸爸接着说“大部分人都想安安稳稳的赚钱，对钱没有激情只有恐惧，你们学着不为钱工作，让钱为自己工作。如果你们想继续跟我学习这门赚钱从现在开始你们继续给马丁太太干活而我一分钱也不会给你们。”<span class='p red'>房子就是你最大的资产;"欠债可以抵税";"找个稳定的工作"</span>。其实大分部人热衷于”稳定”是出于恐惧，害怕变动害怕面对挑战。所以有时候需要照照镜子问问自己内心相信自己的智慧不要被恐惧支配。在”我”和迈克16岁的时候放学经常去听富爸爸和他的律师 、银行经理、经纪人、投资商。富爸爸是个有自己想法的人他讨厌”我们必须这么做因为其它人都这么做”，也讨厌”不能“这个词。于是我们有了自己的想法经常对老师说的僵化教条感到反感，比如”如果你得不到好成绩、你就在社会上也干不好”。我们看到学校扼杀了学生的创建性。在我16岁时曾和穷爸爸激烈的讨论“房子到底资产还是负债”还画出了现金流来讲解金钱的流向。投资房子不是最好的选择，你可能错失其它的投资机会，没有积累投资经验。</p><h4 id="为什么富人越来越富"><a href="#为什么富人越来越富" class="headerlink" title="为什么富人越来越富"></a>为什么富人越来越富</h4><p>​富人不断的买入资产。</p><h4 id="为什么中产阶级无法摆脱财务问题"><a href="#为什么中产阶级无法摆脱财务问题" class="headerlink" title="为什么中产阶级无法摆脱财务问题"></a>为什么中产阶级无法摆脱财务问题</h4><p>​中产阶级主要的收入是工资，工资增长了税收也增长了，大家都帮着买房子为小孩上大学攒钱，根本不没有机会研究怎么投资。一旦失去了工作就没有了收入来源。你努力工作会使老板更加富有，自己也可能升值加薪。所以在好好工作的同事也应该研究证明获取资产。财富这个词有个简单的定义，<span class='p red'>财富就是支撑一个人生存多长时间的能力。或者说如果我今天停止工作，我还能活多久？</span></p><h3 id="请你说出对下面的话的理解"><a href="#请你说出对下面的话的理解" class="headerlink" title="请你说出对下面的话的理解"></a>请你说出对下面的话的理解</h3><blockquote><p>切记，这个模块的设计是为了凸显讨论与合作的重要性。毕竟两个人智慧大于一个人的智慧。如果你不理解罗伯特所说的内容请不要害羞和回避。你可以向别人请教。花点时间讨论下面的每一段引述，知道你真的理解了。</p></blockquote><h5 id="P1"><a href="#P1" class="headerlink" title="P1"></a>P1</h5><blockquote><p>重要的不是你挣了对少钱而是你能留下多少钱。</p></blockquote><p>​挣的钱多少不代表保留下来的有多少，如果消费习惯不好那么是存不下多少钱的。</p><h5 id="P2"><a href="#P2" class="headerlink" title="P2"></a>P2</h5><blockquote><p>如果你要去建造帝国大厦，你要做的第一件事就是挖个深坑，打牢地基。如果你只想在郊区盖个小屋，你只需用混凝土打15厘米的地基就够了。大多数人在努力致富时总是试图在15厘米的混一图上建造帝国大厦。</p></blockquote><p>​需要挣更多的钱就必须打好坚实的财务知识，和管理钱财的习惯。要有自己的思考</p><h5 id="P3"><a href="#P3" class="headerlink" title="P3"></a>P3</h5><blockquote><p>&amp;emsp;80%的家庭的财务报表表现的是衣服拼命工作、努力争光的景象，而然他们的努力都打水漂了，因为人们购买的是负债而非资产</p></blockquote><p>​家庭都认为房子是资产，其实房子是负债因为它让人们的口袋里的钱持续减少。当然也可以先学习怎么购买资产【当然不是一件容易的事情】，用资产创造的钱去买房子这样就更好，更加轻松了。前提是要有正确的财务知识和遵从自己内心的选择。</p><blockquote><p>说到钱大多数人都希望稳稳妥妥的挣钱这样他们才感到安全;关于钱人们没有激情只有恐惧</p></blockquote><h3 id="附加问题"><a href="#附加问题" class="headerlink" title="附加问题"></a>附加问题</h3><blockquote><p>现在是时候将这一章故事和你对罗伯特的话运用到生活中去了。问问自己下面这些问题，并和自己小伙伴讨论。一定要对自己和伙伴真诚。如果你不喜欢自己给出的答案，问问自己是否愿意接受改变或者接受自己想法和心态的挑战</p></blockquote><h4 id="T1"><a href="#T1" class="headerlink" title="T1"></a>T1</h4><blockquote><p>你的财务教育是从什么时候开始的？是从这本书开始的，还是其它地方？</p></blockquote><p>​我的财务教育是从大三的时候一个10块钱网课开始的，那是并没有真正体会到管理钱财的重要性。真正觉得理财重要时候是工作以后。《穷爸爸和富爸爸》这本书给我了很大的启发、</p><h4 id="T2"><a href="#T2" class="headerlink" title="T2"></a>T2</h4><blockquote><p>当罗伯特说道房子不是资产时你是什么反应？你是否把自己的房子视为资产？当他进行充分论证后，你是否改变了想法？</p></blockquote><p>​我感到很惊讶，虽然房子可能是必需品，以后房价长了还可以挣钱，但是从现金流的角度来说一直还房贷其它就是负债。我曾经以为房子资产现在认知改变了。我能想到的资产有版权费、知识产权、有潜力的股票、优秀的短视频作品，自己花时间整理总结的付费网课知识星球。这些资产都有一个特性就是一对多的关系没用自己管为多人服务然后赚钱。</p><h4 id="T3"><a href="#T3" class="headerlink" title="T3"></a>T3</h4><blockquote><p>那种现金流更加贴近你的生活？</p></blockquote><p>​是穷人的现金流模式。我的唯一收入来源是工资，支出全部都是衣食住行玩。没有负债【花呗不算负债】算支出。</p><h4 id="T4"><a href="#T4" class="headerlink" title="T4"></a>T4</h4><blockquote><p>除了房子还有什么东西你开始以为是资产后来觉证明是负债的？</p></blockquote><p>​有啊，比如小桥车我以前觉得是资产，其实车子是负债，你要给她上保险买牌照支付停车费等等。</p><h4 id="T5"><a href="#T5" class="headerlink" title="T5"></a>T5</h4><blockquote><p>你是否同意这个观点：“多数人的教育不是缺少如何挣钱，而是如何处理挣的的钱?”</p></blockquote><p>​是的我同意这个观点。有好多人刚工作的朋友不知道怎么处理钱包括我自己，全部花掉不是一个好的选择。可以选择有计划的分配工资。如下表</p><table><thead><tr><th align="left">基本生活费（衣食住行）</th><th>30%</th></tr></thead><tbody><tr><td align="left">投资理财</td><td>30%</td></tr><tr><td align="left">购物（网购啊、逛街啊）+玩</td><td>20%</td></tr><tr><td align="left">存起来</td><td>20%</td></tr></tbody></table><h4 id="T6"><a href="#T6" class="headerlink" title="T6"></a>T6</h4><blockquote><p>富爸爸告诉孩子们，在会计上关键的不是数字而是数字要告诉你的东西。你生活中的数字有告诉你什么？</p></blockquote><p>​我可以查看支付宝和微信上的账单记录【有年度的还有月度的】。看看我的收入和支出情况。分析自己的消费习惯和模式。看看自己哪些方面消费【是吃的；还是玩的；还是买网课；还是房租等等】最多并分析原因。</p><h4 id="T7"><a href="#T7" class="headerlink" title="T7"></a>T7</h4><blockquote><p>你的生活是否有某个时刻看起来是取得了一个小小的成就，比如晋升或者加薪，然而又没有带来资产负债表上你想要的结果？</p></blockquote><p>​我没有升值加薪。但是改变资产负债表就需要弄清楚什么是资产什么事负债并且买入资产。【有时候资产和负债可以互相转换比如房子升值了卖掉就赚20%，这种情况不算。以自己为中心资金持续流入自己是资产、资金持续流出就是负债】</p><h4 id="T8"><a href="#T8" class="headerlink" title="T8"></a>T8</h4><blockquote><p>如果你今天停止工作了你还能生存多少天？这和数字是否让你感到恐慌或惊讶?</p></blockquote><p>​我还可以生存4个月，这个数字我并不怎么感到恐慌但是感到惊讶，因为我以前从来没有这么想过。</p><p>T9</p><blockquote><p>既然负债和支出都是让你的钱减少的？那这两个有什么区别呢？</p></blockquote><p>​我理解负债是长期的持续的资金流出，比如房子、车子的贷款需要长期偿还。而支出是暂时的比如你在网购买的衣服和裤子和好吃的。</p>]]></content>
      
      
      <categories>
          
          <category> 读后感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 穷爸爸和富爸爸 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工作总结2022-1-11</title>
      <link href="/article/c9001293.html"/>
      <url>/article/c9001293.html</url>
      
        <content type="html"><![CDATA[<h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><p>&amp;emsp;今天的遇到的问题是，问题场景：1个menu里面有3个form不能查询出数据【输入uu ed01用ops$ed01登录menu界面H110。可以看到数据，输入uu qg01 用ops&amp; qg01登录看不到数据。】</p><h4 id="分析问题"><a href="#分析问题" class="headerlink" title="分析问题"></a>分析问题</h4><p>&amp;emsp;这3个界面的数据都来自1个公共视图。找到这个视图的定义的源码，发现查询的规定用户组，而ops$qg 01用户没有加入。所以qg01用戶沒有权限查询这个view的数据</p>]]></content>
      
      
      <categories>
          
          <category> 工作总结 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>《遇见你之前》观后感</title>
      <link href="/article/9219eeaa.html"/>
      <url>/article/9219eeaa.html</url>
      
        <content type="html"><![CDATA[<h4 id="故事内容"><a href="#故事内容" class="headerlink" title="故事内容"></a>故事内容</h4><p>​讲的是一个高富帅和一个普通女孩相爱的故事。这个高富帅以前喜欢玩极限运动热爱生活没有想到一次意外他被摩托车撞了导致高位截瘫。故事女主在一家咖啡店上班了6年被无故辞退了。女主Clark找到了照顾男主的工作。</p><p>​第一次见面Clark穿的土里土气的，一开始男主对她不友好慢慢地开始产生好感了。Clark得知男主想去瑞士安乐死后她很伤心。决定帮助男主重拾生活的信心带着他游山玩水，去看赛马、听音乐会。Clark也在男主的帮助下尝试了很多人生第一次的事情比如潜水<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/00BFB2E3.gif" alt="img"></p><p>​2个人在小岛上爱的很热烈，突然男主说“虽然我很爱你，但是我一心求死你改变不了我的决心，我已经回不去从前的生活了”男主已经偷偷给Clark留下一笔财产</p><h4 id="印象深刻的时刻"><a href="#印象深刻的时刻" class="headerlink" title="印象深刻的时刻"></a>印象深刻的时刻</h4><p>​男主偷偷记住Clark最喜欢最想要的连体裤，虽然他觉得这大黄蜂连体裤很丑。但是等到女主过生日了把这当做礼物给了Clark。Clark收到以后非常非常开心。这让我明白了喜欢一个人可以记住ta不经意间说出的喜好然后找个机会带ta去玩或者送给ta。其它的场景虽然很感人但是令我印象最深的就是这一幕。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E9%81%87%E8%A7%81%E4%BD%A0%E4%B9%8B%E5%89%8D/%E5%A4%A7%E9%BB%84%E8%9C%82%E8%BF%9E%E4%BD%93%E8%A3%A4%E8%A2%9C.jpg"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E9%81%87%E8%A7%81%E4%BD%A0%E4%B9%8B%E5%89%8D/%E4%BD%A0%E7%9A%84%E5%93%81%E4%BD%8D%E7%9C%9F%E7%8B%AC%E7%89%B9.jpg"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/kaixin1.png"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E9%81%87%E8%A7%81%E4%BD%A0%E4%B9%8B%E5%89%8D/%E5%BC%80%E5%BF%832.png"></p>]]></content>
      
      
      <categories>
          
          <category> 观后感 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>工作总结2022-01-06</title>
      <link href="/article/d01390aa.html"/>
      <url>/article/d01390aa.html</url>
      
        <content type="html"><![CDATA[<h4 id="今天发生的事件"><a href="#今天发生的事件" class="headerlink" title="今天发生的事件"></a>今天发生的事件</h4><p>​这个星期领导给我布置了4个任务今天为止完成了三个。今天下午因为我没有按照流程规范【先复制&#x2F;u1&#x2F;forms&#x2F;inp&#x2F;的inp文件到自己目录，再修改自己目录下的inp文件，最后提交工单】操作导致修改后的文件没有生效。</p><p>可以参考其它的文件，就是在baseTable后面加上@ho01，要搞清除一个inp文件有几个baesTable。</p><p>领导给我讲解过一遍没有记住，当时在想怎么写SQL语句。第二天就忘了要参考哪个文件。以后在讲解的时候来一只笔记录一下【有时候讲的东西我其实不理解知道在哪个界面，先把哪个界面记下来然后找到对应的源码看看是怎么出现的】。免得忘记。menu的修改要先备份但menu不用提交工单。</p><p>拿到一个工单先找到对应的人理解清楚需求。碰到没有权限查看的界面要对方截图出来，看看menu的名字或者对应inp文件。</p><p>报表名称或格式</p><p>部门名称&#x2F;课别&#x2F;区域&#x2F;账号&#x2F;货号&#x2F;品名</p><p>用途</p><p>列印附件中中超厂编商品建档明细</p><table><thead><tr><th>部门名称</th><th>divisions.name</th></tr></thead><tbody><tr><td>课别</td><td>sections.section_no</td></tr><tr><td>区域</td><td>items.code</td></tr><tr><td>账号</td><td>substr(items.usr,5,4)</td></tr><tr><td>货号</td><td>nvl(store_items.item_no,items.item_no)</td></tr><tr><td>品名</td><td>items.name</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span>(ho04db)<span class="operator">&gt;</span><span class="keyword">desc</span> divisions</span><br><span class="line"> Name                            <span class="keyword">Null</span>?    Type</span><br><span class="line"> <span class="comment">------------------------------- -------- ----</span></span><br><span class="line"> DIVISION_NO                     <span class="keyword">NOT</span> <span class="keyword">NULL</span> NUMBER(<span class="number">1</span>)</span><br><span class="line"> NAME                            <span class="keyword">NOT</span> <span class="keyword">NULL</span> VARCHAR2(<span class="number">8</span>)  <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"> CREATED_DATE                             <span class="type">DATE</span></span><br><span class="line"> CHANGED_DATE                             <span class="type">DATE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span>(ho04db)<span class="operator">&gt;</span><span class="keyword">desc</span> sections</span><br><span class="line"> Name                            <span class="keyword">Null</span>?    Type</span><br><span class="line"> <span class="comment">------------------------------- -------- ----</span></span><br><span class="line"> SECTION_NO                      <span class="keyword">NOT</span> <span class="keyword">NULL</span> NUMBER(<span class="number">2</span>) <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"> NAME                            <span class="keyword">NOT</span> <span class="keyword">NULL</span> VARCHAR2(<span class="number">16</span>)</span><br><span class="line"> DIVISION_NO                     <span class="keyword">NOT</span> <span class="keyword">NULL</span> NUMBER(<span class="number">1</span>) </span><br><span class="line"> CREATED_DATE                             <span class="type">DATE</span></span><br><span class="line"> CHANGED_DATE                             <span class="type">DATE</span></span><br><span class="line"> </span><br><span class="line"> <span class="keyword">SQL</span>(ho04db)<span class="operator">&gt;</span><span class="keyword">desc</span> store_items</span><br><span class="line"> Name                            <span class="keyword">Null</span>?    Type</span><br><span class="line"> <span class="comment">------------------------------- -------- ----</span></span><br><span class="line"> STORE_NO                        <span class="keyword">NOT</span> <span class="keyword">NULL</span> NUMBER(<span class="number">3</span>)</span><br><span class="line"> ITEM_NO                         <span class="keyword">NOT</span> <span class="keyword">NULL</span> NUMBER(<span class="number">7</span>) <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span>(ho04db)<span class="operator">&gt;</span><span class="keyword">desc</span> items</span><br><span class="line"> Name                            <span class="keyword">Null</span>?    Type</span><br><span class="line"> <span class="comment">------------------------------- -------- ----</span></span><br><span class="line"> ITEM_NO                         <span class="keyword">NOT</span> <span class="keyword">NULL</span> NUMBER(<span class="number">7</span>) <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"> SUP_NO                          <span class="keyword">NOT</span> <span class="keyword">NULL</span> NUMBER(<span class="number">6</span>)</span><br><span class="line"> GRP_NO                          <span class="keyword">NOT</span> <span class="keyword">NULL</span> NUMBER(<span class="number">3</span>)</span><br><span class="line"> SUBGRP_NO                       <span class="keyword">NOT</span> <span class="keyword">NULL</span> NUMBER(<span class="number">3</span>)</span><br><span class="line"> USR                             <span class="keyword">NOT</span> <span class="keyword">NULL</span> VARCHAR2(<span class="number">10</span>) <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"> NAME                            <span class="keyword">NOT</span> <span class="keyword">NULL</span> VARCHAR2(<span class="number">33</span>) <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"> CODE                                     NUMBER(<span class="number">1</span>)  <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"> </span><br><span class="line">  <span class="keyword">SQL</span>(ho04db)<span class="operator">&gt;</span><span class="keyword">desc</span> <span class="keyword">groups</span></span><br><span class="line"> Name                            <span class="keyword">Null</span>?    Type</span><br><span class="line"> <span class="comment">------------------------------- -------- ----</span></span><br><span class="line"> GRP_NO                          <span class="keyword">NOT</span> <span class="keyword">NULL</span> NUMBER(<span class="number">3</span>)</span><br><span class="line"> NAME                            <span class="keyword">NOT</span> <span class="keyword">NULL</span> VARCHAR2(<span class="number">30</span>)</span><br><span class="line"> SECTION_NO                      <span class="keyword">NOT</span> <span class="keyword">NULL</span> NUMBER(<span class="number">2</span>) <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"> CREATED_DATE                             <span class="type">DATE</span></span><br><span class="line"> CHANGED_DATE                             <span class="type">DATE</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接下来是整理SQL 要查询 部门名称，课别，区域，账号，货号，品名。涉及到5张表。而且有限制条件就是厂编。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> c.name  部门名称 ,</span><br><span class="line">           d.section_no 课别 ,</span><br><span class="line">           a.code 区域 ,</span><br><span class="line">           substr(a.usr,<span class="number">5</span>,<span class="number">4</span>) 账号 ,</span><br><span class="line">           nvl(b.item_no, a.item_no) 货号 ,</span><br><span class="line">           a.name 品名</span><br><span class="line">      <span class="keyword">from</span> items a,</span><br><span class="line">           store_items b,</span><br><span class="line">           divisions c,</span><br><span class="line">           sections  d,</span><br><span class="line">           <span class="keyword">groups</span> e ,</span><br><span class="line">           items_stat f  <span class="operator">/</span><span class="operator">/</span>这个表是准确的</span><br><span class="line">     <span class="keyword">where</span> f.item_no <span class="operator">=</span> a.item_no</span><br><span class="line">       <span class="keyword">and</span> f.item_no <span class="operator">=</span>b.item_no(<span class="operator">+</span>)</span><br><span class="line">       <span class="keyword">and</span> f.store_no <span class="operator">=</span> b.store_no(<span class="operator">+</span>)</span><br><span class="line">       <span class="keyword">and</span> c.division_no <span class="operator">=</span> d.division_no</span><br><span class="line">       <span class="keyword">and</span> d.section_no <span class="operator">=</span> e.section_no   </span><br><span class="line">       <span class="keyword">and</span> e.grp_no <span class="operator">=</span> a.grp_no</span><br><span class="line">       <span class="keyword">and</span>  nvl(b.sup_no,a.sup_no) <span class="operator">=</span> <span class="number">406097</span>  </span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">  <span class="comment">--- 第二种SQL</span></span><br><span class="line">  <span class="keyword">select</span> c.name  部门名称 ,</span><br><span class="line">           d.section_no 课别 ,</span><br><span class="line">           a.code 区域 ,</span><br><span class="line">           substr(a.usr,<span class="number">5</span>,<span class="number">4</span>) 账号 ,</span><br><span class="line">           nvl(b.item_no, a.item_no) 货号 ,</span><br><span class="line">           a.name 品名</span><br><span class="line">      <span class="keyword">from</span> items a,</span><br><span class="line">           store_items b,</span><br><span class="line">           divisions c,</span><br><span class="line">           sections  d,</span><br><span class="line">           <span class="keyword">groups</span> e ,</span><br><span class="line">           store f  <span class="operator">/</span><span class="operator">/</span>这个表是准确的</span><br><span class="line">     <span class="keyword">where</span> f.item_no <span class="operator">=</span> a.item_no</span><br><span class="line">       <span class="keyword">and</span> f.store_no <span class="operator">=</span> b.store_no(<span class="operator">+</span>)</span><br><span class="line">       <span class="keyword">and</span> c.division_no <span class="operator">=</span> d.division_no</span><br><span class="line">       <span class="keyword">and</span> d.section_no <span class="operator">=</span> e.section_no   </span><br><span class="line">       <span class="keyword">and</span> e.grp_no <span class="operator">=</span> a.grp_no</span><br><span class="line">       <span class="keyword">and</span>  nvl(b.sup_no,a.sup_no) <span class="operator">=</span> <span class="number">406097</span>  </span><br></pre></td></tr></table></figure><p>查询结果为空。目前还不知道原因，商品信息存在商品主档和分店档，分店档的数据是准确的【因为商品时放在具体的商店里面的】比如items表里面商品A【item_no&#x3D;123】来自厂商A【sup_no&#x3D;43321】，但是商品A在store_items里其sup_no&#x3D;32451，所以这个商品A在某个店里的厂商来自sup_no&#x3D;43321。联系生活中的例子在家乐福和中百超市中同一个可口可乐可能是不同厂家生产的。</p><p>为什么要查询部门名称啊，查询部门编号不好吗。查询部门名称就必须用到【divisions表】divisions.name，会导致。如果是部门编号就可以在sections里面，就减少了一张关联表。</p><p>怎么样是反向查询我不理解。</p><blockquote><p>首先在where后增加一个限制条件，看看没有数据，再增加一个限制条件看看没有数据。直到把限制条件全部加上看看在加入哪个限制条件是会导致数据缺失。</p><p>或者是表没有用对，但是上述SQL不存在表缺少的问题。到底是哪个限制条件没有用对呢？</p></blockquote><p>我发现最后一个限制条件有错误  and  nvl(b.sup_no,a.sup_no) &#x3D; 406097  ，加上这个就查询不到结果了，原因还不知道。因为有一个部门名称字段，就必须让disivion.divisiono_no&#x3D;sections.section_no &amp;&amp; sections.section_no &#x3D; groups.section_no。</p><p>还有查询的货号item_no到底是主档的呢还是分店档的呢还是items_stat里的呢。现在想怎么感觉是item_stat里的呢，明天写成 nvl(f.item_no,nvl(b.item_no,a.item_no))试试</p><p>还有这课别是groups.section_no还是 sections.seciton_no</p>]]></content>
      
      
      <categories>
          
          <category> 工作总结 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>网速升级日记</title>
      <link href="/article/36fa0f6b.html"/>
      <url>/article/36fa0f6b.html</url>
      
        <content type="html"><![CDATA[<p>​不知道什么原因，老爸升级电信套餐网速从500Mbps升级到1000Mbps。但是我知道b和B是有区别的。b&#x3D;bit，而B&#x3D;byte。1B&#x3D;8b。而电信商所说的1000兆是说的小b。理想状态下1000兆就对应125MB。</p><blockquote><p>在光猫下我老爸电脑插网线测速97MB，而在路由器下插网线网速缺失37MB。为什么网速测得不同呢？</p><p>电信小哥说一下两个原因</p><p>&amp;emsp;你这路由器永久了会影响网速。</p><p>&amp;emsp;因为我老爸是老电脑。网卡很老。没有1Gb全双工模式</p></blockquote><p>​于是我查了一下百度，发现路由器确实会影响网速。但是“链接速度和双工模式”的选项会影响网速的上限吗？这不一定吧。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220330214859691.png" alt="链接速度和双工频率"></p><p>​我突然发现我滴的wifi连接不到5g的信号以前在宿舍里可以连接。原因是自己的笔记本接收不到5g的信号。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/nginx%E7%9B%B8%E5%85%B3/image-20220330220252485.png" alt="查看网卡频段"></p><p>原来我记错了。555！~~</p>]]></content>
      
      
      <categories>
          
          <category> 网络协议 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>静态路由</title>
      <link href="/article/6d2f32a9.html"/>
      <url>/article/6d2f32a9.html</url>
      
        <content type="html"><![CDATA[<h3 id="例子1"><a href="#例子1" class="headerlink" title="例子1"></a>例子1</h3><p>​下面有PC1的ip地址是192.168.0.10，子网掩码24位。PC2的ip地址是192.168.10.10，子网掩码是16位。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PC1  </span><br><span class="line">ip地址      11111111,10101000,00000000,00001010</span><br><span class="line">子网掩码    11111111,11111111,11111111,00000000</span><br><span class="line">----------------------------------------------</span><br><span class="line">网络地址    11111111,10101000,00000000,00000000  依然是192.168.0.0/24</span><br><span class="line"></span><br><span class="line">PC2  </span><br><span class="line">ip地址      11111111,10101000,00001010,00001010</span><br><span class="line">子网掩码    11111111,11111111,00000000,00000000</span><br><span class="line">----------------------------------------------</span><br><span class="line">网络地址    11111111,10101000,00000000,00000000  依然是192.168.0.0/16</span><br><span class="line">既然2台主机的网络地址一样那能通信吗？</span><br><span class="line">不能</span><br></pre></td></tr></table></figure><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-MAC-ip%E5%9C%B0%E5%9D%80/image-20220514222339805.png" alt="PC0PingPC1"></p><p>虽然网络地址一样但是网段不一样，<strong>在PC0 ping PC1过程中会把自己的掩码&amp;PC1的IP地址</strong></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PC1的IP地址    192.168.10.10/16     </span><br><span class="line">               </span><br><span class="line">               192.168.10.10</span><br><span class="line">             <span class="built_in">&amp;</span> 255.255.255.0</span><br><span class="line">             ------------------</span><br><span class="line"> 理想中的ip    192.168.10.0/24  和  PC0的IP地址 192.168.10.10/16  不一样，所以ping不同</span><br></pre></td></tr></table></figure><h3 id="例子2"><a href="#例子2" class="headerlink" title="例子2"></a>例子2</h3><p>​下面有一组网络拓扑图有如下，其中PC2、PC3、PC4、PC5都不在同一个网段内。PC3和PC2可以通信因为PC2的IP地址和Route2Fa0&#x2F;0端口的网关在同一个网段内【192.168.2.0&#x2F;24】然后通过路由器转发。同理PC4和PC5之间也可以通信。那么问题来了PC2和PC5能通信吗？PC3和PC4能通信吗？在没有设置Route1和Route2之前是不能通信的。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1/%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B11.png" alt="静态路由"></p><p>​默认情况下路由器只能连接与它直连的网段，现在试一下PC3pingPC4。因为此时router2不知道目标PC4所在的网段所以通信失败，非直连的网段需要通过静态路由或者动态路由。所以信息到Router2就报错了。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1/PC3-ping-pc4.png" alt="pc3Pingpc4"></p><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p>​让PC3和PC4之间能够通信，默认情况下路由器只知道直连的网段，非直连的网段需要静态路由或者动态路由告诉路由器。</p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><h4 id="下一跳"><a href="#下一跳" class="headerlink" title="下一跳"></a>下一跳</h4><p>两个直接相连的路由器的地址</p><p>​<strong>给Router1和Router2配置静态路由</strong>，在这之前需要给这2个路由器的Se2&#x2F;0端口设置ip地址<strong>并且要在同一个网段内</strong>。首先设置Router2的静态路由</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1/Router2-static.png" alt="Router2的静态路由"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1/Router1Static.png" alt="Router1的静态路由"></p><p>​现在2个路由器已经配置好了可以通信了。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1/PC3-ping-PC4-seuccs.png" alt="pc3PingPc4-seccess"></p><p>但是此时PC3只能和PC4通信，如果想和PC5通信就必须再次配置静态路由。</p>]]></content>
      
      
      <categories>
          
          <category> 网络协议 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Rich Dad &amp; Poor Dad-1富人不为钱工作</title>
      <link href="/article/70450de6.html"/>
      <url>/article/70450de6.html</url>
      
        <content type="html"><![CDATA[<h3 id="故事内容"><a href="#故事内容" class="headerlink" title="故事内容"></a>故事内容</h3><h4 id="计划失败"><a href="#计划失败" class="headerlink" title="计划失败"></a>计划失败</h4><p>​罗伯特和他的好朋友迈克是他们小学里面的穷孩子，他们被拒绝邀请到基米家的海边别墅去玩。自尊心受到打击于是罗伯特回家问他爸爸怎么样才能变成富人【他爸爸是个学历高的人工资也不错，但是欠下很多债，简称穷爸爸】，穷爸爸说要用脑子。于是罗伯特和迈克想出了造硬币的方法收集废旧的牙膏皮然后烧融化倒进磨具里面，最后以失败告终。</p><h4 id="星期六的等候"><a href="#星期六的等候" class="headerlink" title="星期六的等候"></a>星期六的等候</h4><p>​穷爸爸告诉他们可以去迈克爸爸学习这门赚钱【迈克爸爸学习不高但是思想独特能力出众开办了好几家连锁超市，简称富爸爸】星期六他们去富爸爸那里请教如何赚钱，富爸爸说你们给马丁太太干活每小时10美分每周六工作3个小时，只有去或者不去两个选择，于是他们开始了打工生涯，迈克为了每周的30美分牺牲了周六上午看球赛的时间，况且觉得工资很低。三个星期后他终于忍不住了找富爸爸理论，说“我是来想你请教怎么样赚钱的，结果一个月过去了你什么都没有跟我说，反倒要我打工简直是压榨童工”富爸爸严厉的说“教你东西一定要说吗，<strong>生活是最好的老师</strong>，生活推动着每个人有些人在过程在抗争有些人放弃了，去抱怨家人朋友。帮我干活的150人中没有一个想着想我请教怎么赚钱，而是想着干活拿钱。或者有人像你一样跑来和我讲道理说工资太低了。在抱怨别人的时候说明问题在别人哪里不想想自己的问题。<strong>改变自己比改变别人容易</strong>，我想说的就是你们要研究前的运动规律让钱帮自己做事”</p><h4 id="富人不为钱工作"><a href="#富人不为钱工作" class="headerlink" title="富人不为钱工作"></a>富人不为钱工作</h4><p>​富爸爸接着说“大部分人都想安安稳稳的赚钱，对钱没有激情只有恐惧，你们学着不为钱工作，让钱为自己工作。如果你们想继续跟我学习这门赚钱从现在开始你们继续给马丁太太干活而我一分钱也不会给你们。”</p><h4 id="避开一生中最大的陷阱"><a href="#避开一生中最大的陷阱" class="headerlink" title="避开一生中最大的陷阱"></a>避开一生中最大的陷阱</h4><p>​他们和富爸爸他草坪上坐着聊天，富爸爸说今天我要告诉你们一个现象。【一开始没钱的恐惧促使人们努力工作得到回报后又想买更多更好的东西，于是又努力工作】就形成一种循环起床、上班、付账、再起床。。。生活永远被恐惧和贪婪控制着。<strong>感情代替他们思考</strong> 只顾着避免恐惧的感情去工作没有思考怎么样能消除恐惧。以为钱能消除人们的恐惧。所以在面对恐惧时不妨想想工作是不是消除我们内心的恐惧最好办法。富爸爸又说<strong>我希望你们能够避开恐惧和欲望组成的陷阱，按照你们喜欢的方式利用恐惧和欲望，而不要它们控制你们</strong>，  。富爸爸解释说富人其实上是在造钱。</p><h4 id="看见别人看不见的"><a href="#看见别人看不见的" class="headerlink" title="看见别人看不见的"></a>看见别人看不见的</h4><p>​富爸爸又说【不计回报的工作，继续用你们的头脑思考你们会发现很多比拿工资更赚钱的方法，机会商机就摆在人们面前，但大多数人看不到这些机会因为人们只追求金钱和安定】，于是他们开始思考怎么样能不用拿工资的方式赚钱。后来他们发现超时里破旧的卖不出去的连环画可以收集起来找场地做图书馆每个小朋友来看一次就要10美分能在图书室里呆上三个小时。10美分只能买一本连环画，三个小时能看好几本连环画了并花了一美元工资请了迈克妹妹做图书室管理员。</p><h3 id="罗伯特说了什么"><a href="#罗伯特说了什么" class="headerlink" title="罗伯特说了什么"></a>罗伯特说了什么</h3><h4 id="请你说出对下面的话的理解"><a href="#请你说出对下面的话的理解" class="headerlink" title="请你说出对下面的话的理解"></a>请你说出对下面的话的理解</h4><blockquote><p>切记，这个模块的设计是为了凸显讨论与合作的重要性。毕竟两个人智慧大于一个人的智慧。如果你不理解罗伯特所说的内容请不要害羞和回避。你可以向别人请教。花点时间讨论下面的每一段引述，知道你真的理解了。</p></blockquote><h5 id="P1"><a href="#P1" class="headerlink" title="P1"></a>P1</h5><blockquote><p>穷人和中产阶级为钱而工作。富人让钱为自己工作</p></blockquote><p>​穷人和中产阶级可能是缺乏理财观念，害怕没有钱用就努力工作，可能努力工作就可以多一些钱但是忽略其它的商机注意力都在工作上面了。富人可能更加留意商机发现除了打工以外其它的赚钱门道，雇佣别帮自己赚钱。顺便大家一起赚钱</p><h5 id="P2"><a href="#P2" class="headerlink" title="P2"></a>P2</h5><blockquote><p>生活推动着我们所有的人，有些放弃了，有些在抗争。少数人学会了这门课程去的进步，欢迎生活推动自己。</p></blockquote><p>​生活生存的压力逼迫着人们工作，有些人工作是被动的害怕没有钱用，有些人是积极的寻找商机</p><h5 id="P3"><a href="#P3" class="headerlink" title="P3"></a>P3</h5><blockquote><p>停止责备我不要认为是我的问题。如果你认为是我的问题，你就会想改变我;如果你认为问题在你这里你就会改变自己学习一些东西让自己变得更聪明</p></blockquote><p>​当自己责备别人的时候认为错误是别人的，这解决不了问题。改变自己的想法可能会有不一样的心态毕竟改变自己比改变别人容易</p><h5 id="P4"><a href="#P4" class="headerlink" title="P4"></a>P4</h5><blockquote><p>说到钱大多数人都希望稳稳妥妥的挣钱这样他们才感到安全;关于钱人们没有激情只有恐惧</p></blockquote><p>​安安稳稳的赚钱可以是人们感到安心，等钱到手了可以买一些东西满足自己就开心了。我经常听到别人说某某职业赚钱稳当，某某投资风险很高，可能大家都有想着一边安稳赚钱一边赖得想其它赚钱方法。</p><h5 id="P5"><a href="#P5" class="headerlink" title="P5"></a>P5</h5><blockquote><p>正是出于恐惧心理人们才想找一份安稳的工作。害怕付不起账单，害怕被解雇，害怕重新开始。为了寻求保障人们会学习某一种专业或者是做生意拼命为钱工作。大多数人成了钱的奴隶，然后把愤怒发泄在老板上</p></blockquote><p>​就比如我毕业害怕找不到工作于是选择了比较火热的互联网行业，听说这个行业啊挣钱比较多。选择一个专业练习，其实更好的方法多多尝试多多分析自己的兴趣爱好和优势然后再选择某一种职业。没有根据自身情况就选择当程序员其实是一种懒惰和不负责任。</p><h5 id="p6"><a href="#p6" class="headerlink" title="p6"></a>p6</h5><blockquote><p>大多数人并不知道是自己感情代替思考</p></blockquote><p>​比如在生气吵架的时候说出的话就是感情代替了思考</p><h5 id="p7"><a href="#p7" class="headerlink" title="p7"></a>p7</h5><blockquote><p>工作只是试图用暂时的办法解决长期的问题</p></blockquote><p>​工作可以换取钱，钱能解决焦虑。但要思考焦虑的源头【可能因为没钱，可能是其它原因如感情问题】。</p><h5 id="P8"><a href="#P8" class="headerlink" title="P8"></a>P8</h5><blockquote><p>就像一幅画表现的，驴子拉车因为主人在它面前挂了一个胡萝卜。主人知道自己去哪里而驴子不知道所以驴子一直在追逐一个幻影</p></blockquote><p>​有人上班是为了下班以为钱能解决焦虑。追逐金钱就想驴子追逐胡萝卜，主人知道自己的目标拿着钱诱惑驴子帮自己做事情</p><h3 id="附加问题"><a href="#附加问题" class="headerlink" title="附加问题"></a>附加问题</h3><blockquote><p>现在是时候将这一章故事和你对罗伯特的话运用到生活中去了。问问自己下面这些问题，并和自己小伙伴讨论。一定要对自己和伙伴真诚。如果你不喜欢自己给出的答案，问问自己是否愿意接受改变或者接受自己想法和心态的挑战</p></blockquote><h4 id="T1"><a href="#T1" class="headerlink" title="T1"></a>T1</h4><blockquote><p>罗伯特的穷爸爸对钱的处理方法是不是很普遍?</p></blockquote><p>​是的非常普遍、穷爸爸对赚钱只有恐惧只想安安稳稳的拿钱，并且还说自己爱教师这份职业对钱没有兴趣。让我想起自己的妈妈她也说过也想安安稳稳的赚钱。省略多字。。。</p><h4 id="T2"><a href="#T2" class="headerlink" title="T2"></a>T2</h4><blockquote><p>罗伯特的富爸爸说的真正的学习需要精力、激情和热切的愿望。你的人生中有什么例子可以证明吗？让你最难忘的一课是什么？为什么？</p></blockquote><p>​我觉得真正需要激情和热切、精力去学习和探索的事情就是了解自己，探索自己想要什么，找到自己感兴趣又擅长的工作或者事业然后一直坚持下去。我今生最难忘的一课是有好多。</p><p>​比如我大四面试的时候跟面试官说了与权限管理有关的练习，这个练习是我看网课自己照着打的。觉得老师讲的很好，用户-角色-权限这些关系讲的很明白。自己也准备思路整理了过程巴拉巴拉根面试官讲了一大堆，结果面试官跟我说【你知道shiro框架吗】，我说不知道最后没有通过。后来才知道shiro框架是专门处理用户权限问题的。就发现自己太依赖网课了没有主动去权限有关的背景条件和使用场景可能我跟面试官所说的就是把网课的老师说的话重新复述了一遍没有体现一点自己思考，没有主动性后来才知道shiro和springSecurity是专门处理权限问题的。1.网课老师有所保留；2.自己没有主动去了解权限有关的信息我感到很生气和难过。</p><p>​还有一件印象深刻的事就是，和朋友逛街的时候谈论到某件事情刚好我又知道一点，于是巴拉巴拉说了一大堆而然没有注意到朋友对这件事情不感兴趣只顾自己说的痛快先开始我还没有意识到后来几个月之后才听到朋友说你说话的方式想给学生讲课。</p><h4 id="T3"><a href="#T3" class="headerlink" title="T3"></a>T3</h4><blockquote><p>如果支付你10美分每小时然后一分钱都不给，你还会和罗伯特一样的反应吗?</p></blockquote><p>​付出了自己劳动获得报酬这是应该的事情，如果没有工钱那肯定是接受不了。而罗伯特想要更多的赚钱的方法除了打工所以他一边工作一边发现商机。</p><h4 id="T4"><a href="#T4" class="headerlink" title="T4"></a>T4</h4><blockquote><p>是恐惧驱使大部分人工作吗？还有没有其它因素？</p></blockquote><p>​有的人上班是为了下班，有的人喜欢自己的工作认为这工作能发挥自己的才能。</p><h4 id="T5"><a href="#T5" class="headerlink" title="T5"></a>T5</h4><blockquote><p>你是否强烈地感觉更多的钱可以平复恐惧？为什么人们会有这样常见的反应</p></blockquote><p>​我现在还没有这种感觉可能是我还单身一个人没有什么经济压力，或者我有些兴趣爱好做没有想这么多。或者说有些人负债多有房贷还换急需用钱。</p><h4 id="T6"><a href="#T6" class="headerlink" title="T6"></a>T6</h4><blockquote><p>你生活中有没有追随情感做出反应的列子？什么时候你才观察自己的情感，选择自己的想法？</p></blockquote><p>​有啊有很多，我一般是冲动之后说了一些伤害人的话的时候就会仔细分析自己的情感，怎么样选择自己的想法我还不知道，不过我知道有一个方法可以更好的观察自己的情绪。比如我的好朋友小白走在路上没有跟我打招呼这时要怎么分析自己情绪呢？</p><table><thead><tr><th></th><th>积极</th><th>消极</th></tr></thead><tbody><tr><td>想法</td><td>小白走路的时候没有看到我就没有和我打招呼</td><td>小白没有和我打招呼是不是我有说吗地方得罪ta了</td></tr><tr><td>情绪</td><td>平静、好奇</td><td>纳闷、难过</td></tr><tr><td>行为</td><td>下次见到ta主动和ta讲话</td><td>下次见到ta假装没有看见</td></tr></tbody></table><h4 id="T7"><a href="#T7" class="headerlink" title="T7"></a>T7</h4><blockquote><p>你是否觉得大多数人都意识到自己已陷入“老鼠赛跑”的陷阱中？为什么？</p></blockquote><p>​我觉得有些人意识到“老鼠赛跑”的陷阱有些人没有。自己关注了某些技术公众号有些是卖网课打广告的，有些是真正分享技术和经验的。我知道那些分享的技术知识点和面试题目没什么用，要自己实践理解才行。这样技术能力就有提升了。就有机会升值加薪就可能赚钱更多。</p>]]></content>
      
      
      <categories>
          
          <category> 读后感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 穷爸爸和富爸爸 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MAC地址—IP地址—子网掩码</title>
      <link href="/article/a0ce1964.html"/>
      <url>/article/a0ce1964.html</url>
      
        <content type="html"><![CDATA[<h3 id="路由器的引入"><a href="#路由器的引入" class="headerlink" title="路由器的引入"></a>路由器的引入</h3><p>​由于交换机只能在同一网段中传输信息，传输的范围有限。如图2中PC0和PC1不在同一个网段中不能通信。所以引入交换机来解决此问题</p><table><thead><tr><th align="center">图1<br /><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211219103220159.png" alt="image-20211219103220159"></th></tr></thead><tbody><tr><td align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211219110524880.png" alt="image-20211219110524880"></td></tr></tbody></table><h4 id="路由器的示例"><a href="#路由器的示例" class="headerlink" title="路由器的示例"></a>路由器的示例</h4><h5 id="1-PC0通信PC1在同一网段"><a href="#1-PC0通信PC1在同一网段" class="headerlink" title="1.PC0通信PC1在同一网段"></a>1.PC0通信PC1在同一网段</h5><p>   pc0的ip是192.168.3.10；pc1的ip地址是196.168.3.11。具体过程如下表</p><table><thead><tr><th><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-MAC-ip%E5%9C%B0%E5%9D%80/image-20211219103220159.png" alt="image-20211219120752461"></th></tr></thead><tbody><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-MAC-ip%E5%9C%B0%E5%9D%80/image-20211219110524880.png" alt="image-20211219121227193"></td></tr><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-MAC-ip%E5%9C%B0%E5%9D%80/image-20211219121951740.png" alt="image-20211219121951740"></td></tr><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-MAC-ip%E5%9C%B0%E5%9D%80/image-20211219122606088.png" alt="image-20211219122606088"></td></tr><tr><td></td></tr></tbody></table><h5 id="2-PC0通信PC2不在同一网段，流程图如下表"><a href="#2-PC0通信PC2不在同一网段，流程图如下表" class="headerlink" title="2.PC0通信PC2不在同一网段，流程图如下表"></a>2.PC0通信PC2不在同一网段，流程图如下表</h5><table><thead><tr><th><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-MAC-ip%E5%9C%B0%E5%9D%80/image-20211219150556356.png" alt="image-20211219150556356"></th></tr></thead><tbody><tr><td>然后从Router0 的Fa1&#x2F;0端口发出arp信号找目标ip地址。</td></tr><tr><td>找到PC2是目标地址后会发送arp告诉Swith1我的mac地址什么</td></tr><tr><td>Switch1再发送arp告诉Router0【PC2的MAC地址是什么】</td></tr><tr><td>然后arp路径是  ROuter0的Fa0&#x2F;0—-&gt;Switch0—-&gt;PC0.</td></tr><tr><td>最后PC0 再发送真正的IMCP</td></tr></tbody></table><p>​补充每个设备都有自己的arp缓存记录和自己连接成功的设备的mac地址和ip地址。用arp -a查看用arp -d 删除缓存。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-MAC-ip%E5%9C%B0%E5%9D%80/image-20211219165451068.png" alt="image-20211219165451068"></p><h3 id="MAC地址"><a href="#MAC地址" class="headerlink" title="MAC地址"></a>MAC地址</h3><p>​就是物联地址是由6个字节的16进制数组成的。可以通过cmd输入ipconfig &#x2F;all 命名。查看本地连接中的物理地址。或者进入网络和共享中心点击【连接】在点击【详细信息】可以看到。</p><h3 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h3><p>​IP地址默认说的是ipv4.有两个组成部分。第一个是网络标识【网段】第二个是主机标识【网段内的第x台机器】。以PC0为例其ip地址是192.168.3.10，而子网掩码是255.255.255.0</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-MAC-ip%E5%9C%B0%E5%9D%80/image-20211219171730783.png" alt="image-20211219171730783"></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">IP地址 = 网络ID + 主机ID </span><br><span class="line">IP地址:           130.168.1.10</span><br><span class="line">子网掩码:         255.255.0.0</span><br><span class="line">网段OR网络地址    130.168.0.0</span><br><span class="line">两台机器在通讯前要判断是否在同一个网段，不同的要用路由器</span><br></pre></td></tr></table></figure><h4 id="ip地址的类别"><a href="#ip地址的类别" class="headerlink" title="ip地址的类别"></a>ip地址的类别</h4><h5 id="A类地址"><a href="#A类地址" class="headerlink" title="A类地址"></a>A类地址</h5><p>&amp;emsp;A类地址只有前8位是网络地址，而且第一位必须是0开头max&#x3D;01111111【2进制】&#x3D;127，其中0和127不可用，一共有126个可用的网络地址，所以网络ID的范围是<code>[1,126]</code>。而主机地址一共用<code>2^24-2</code>&#x3D;256* 256 *256个。主机地址&#x3D;从<code>0</code>一直到<code>2^0</code>+……+<code>2^23=2^24-1</code>范围。其中2^24-1是广播地址【11111111,11111111,11111111】。0是【00000000,00000000,00000000】</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-MAC-ip%E5%9C%B0%E5%9D%80/A%E7%B1%BB%E5%9C%B0%E5%9D%80.png" alt="A类地址"></p><p>因为A类网段有8个网络位，1-126都可以克表示。而每一个网段中的主机个数是<code>256*256*256-2</code>个，比如120.0.0.0就有<code>256*256*256-2=16777214</code>个主机</p><h5 id="B类地址"><a href="#B类地址" class="headerlink" title="B类地址"></a>B类地址</h5><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-MAC-ip%E5%9C%B0%E5%9D%80/B%E7%B1%BB%E5%9C%B0%E5%9D%80.png" alt="B地址"></p><p>​B类地址的网络id的范围值是<code>10000000,00000000</code>到<code>10111111,11111111</code>所以是<code>[128,255]</code>，主机地址最小值min&#x3D;<code>00000000,00000000</code>&#x3D;0； 最大值是<code>11111111,11111111</code>&#x3D;<code>2^16 - 1</code>&#x3D;65536-1&#x3D;65535【是广播地址】</p><h5 id="C类地址"><a href="#C类地址" class="headerlink" title="C类地址"></a>C类地址</h5><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-MAC-ip%E5%9C%B0%E5%9D%80/C%E5%9C%B0%E5%9D%80.png" alt="C类地址"></p><h3 id="子网掩码的表示方法"><a href="#子网掩码的表示方法" class="headerlink" title="子网掩码的表示方法"></a>子网掩码的表示方法</h3><p>​要是搞不清楚可以通过 <a href="https://www.sojson.com/convert/subnetmask.html">https://www.sojson.com/convert/subnetmask.html</a> 计算，</p><h3 id="为什么要IP地址划分"><a href="#为什么要IP地址划分" class="headerlink" title="为什么要IP地址划分"></a>为什么要IP地址划分</h3><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p>​如果要让500台主机在同一个网段内，那就分配一个B类网段，比如191.100.0.0&#x2F;16。这就不能分开放到2个C类网段里去。比如<code>191.100.0.1/24 和 191.100.0.2/24</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">IP地址   191.100.0.0                      11000000  01100100 | 00000000  00000000       掩码     255.255.0.0                      11111111  11111111 | 00000000  00000000</span><br><span class="line">                                       &amp; ---------------------------------------</span><br><span class="line">网络地址 191.100.0.0                      11000000  01100100  |00000000  00000000</span><br><span class="line">广播地址 是竖线后面全部为1</span><br><span class="line">         191.100.255.255                  11000000  01100100 | 11111111  11111111     在`191.100.0.0 ~ 191.100.255.255`这个网段内有  `191.100.0.1 ~ 191.100.255.254` ==`65534`个可用地址，这么多个主机数来放置500各主机属于极大的浪费，所以需要子网划分。</span><br><span class="line">              </span><br></pre></td></tr></table></figure><h4 id="子网划分的定义"><a href="#子网划分的定义" class="headerlink" title="子网划分的定义"></a>子网划分的定义</h4><p>借用主机位当做网络位，这样网段数增加，但每个网段中的主机数减少了。一般是等长子网划分。</p><p>子网划分可以提高IP地址的利用率，比如在192.168.0.0&#x2F;24的网段内要存储100个主机，而次网段可以容纳192.168.0.1 ~~ 192.168.0.254一共254个主机。那么多出来154个主机没有使用造成网段的浪费，现在怎么划分子网才能让网段利用率高。</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">本来有一个C类网段  192.168.0.0/24</span><br><span class="line">先把原来的主机数分成2段，掩码就要往后移动一位变成25位   192.168.0.0</span><br><span class="line">     原ip地址    192.168.0.0     -------------&gt;  11111111,10101000,00000000,00000000</span><br><span class="line">    子网掩码    255,255,255,128   -------------&gt;  11111111,11111111,11111111,10000000</span><br><span class="line">             ----------------------------------------------------------------------</span><br><span class="line">     第一个网络地址            -------------&gt;  11111111.10100000,00000000,00000000   192.168.0.0/25 </span><br><span class="line">     第一个网段A   可用的主机地址的范围是192.168.0.1  到  192.168.0.127 </span><br><span class="line">     第二个网络地址            -------------&gt;  11111111.10100000,00000000,10000000   192.168.0.128/25</span><br><span class="line">     第二个网段B   可用的主机地址的范围是192.168.0.129  到  192.168.0.254</span><br><span class="line">     </span><br></pre></td></tr></table></figure><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.co1m/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-MAC-ip%E5%9C%B0%E5%9D%80/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86.png" alt="子网划分"></p><h4 id="超网"><a href="#超网" class="headerlink" title="超网"></a>超网</h4><p>超网是多个连续的子网合并的最大网段</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-MAC-ip%E5%9C%B0%E5%9D%80/image-20220515152133519.png" alt="超网"></p><h4 id="合并四个网段"><a href="#合并四个网段" class="headerlink" title="合并四个网段"></a>合并四个网段</h4><p>​需要合并一下四个网段192.168.0.0&#x2F;24 ； 192.168.1.0&#x2F;24   ；192.168.2.0&#x2F;24 ；192.168.3.0&#x2F;24 。网段数变成原来的四倍，所以主机位要向网络位借2位。变成192.168.0.0&#x2F;22  </p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-MAC-ip%E5%9C%B0%E5%9D%80/image-20220515153129436.png" alt="4个合并"></p><p>但是必须要连续的2个网段才能合并</p>]]></content>
      
      
      <categories>
          
          <category> 网络协议 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1-初识集线器_网桥_交换机</title>
      <link href="/article/7456dd43.html"/>
      <url>/article/7456dd43.html</url>
      
        <content type="html"><![CDATA[<p>​先讲讲为什么要学网络协议，一开始学java的时候根本不觉这重要就从最基本的语法规范学起，后来学习javaweb时候就开始接触到各种各样的网络请求也不管为什么先记住特点再说，后来找实习工作发现面试官好喜欢考这方面的知识点。【然后面试多了就发现基本每个面试官都会问网络协议的内容】，慢慢滴我察觉到自己不重视这块内容。但是还没是没有体会到网络协议的重要性。直到后来搭建博客的时候经常遇到部署错误，github登不上，ssh连接不上，nginx配置出错，防火墙端口权限问题，hexo deploy报错如443或者10054等问题。这些都是网络问题。</p><h3 id="简单例子"><a href="#简单例子" class="headerlink" title="简单例子"></a>简单例子</h3><p>​先用CiscoPacketTracr模拟2台电脑相互连接可够相互通信。先要设置2台电脑的ip地址和子网掩码。2个ip地址要在同一个网段。让一个简单的PUD包从PC1传送到PC2如图</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211206202952582.png" alt="image-20211206202952582"></p><p>​这个两个电脑之间的ping，传输的udp包是以ICMP协议传输的，但是在ICMP协议之前是arp协议【大概是发送广播到局域网上获取目标的物理地址】。发送的广播地址全是FFFF。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211206204739463.png" alt="image-20211206204739463"></p><h3 id="集线器"><a href="#集线器" class="headerlink" title="集线器"></a>集线器</h3><p>​集线器就是sb只要连接到它的所有设备都发送，不会选择发送。而且是半双工形式，一台机器发送消息其它机器必须等待，会导致信息传递效率下降。从PC9传递在PC11。所以pc9先传递Hub1在传到，Hub1传递PC11和PC10，pc10拒接接收，pc11可以接收，于是PC11发送信息给Hub1，Hub1有发送给PC9和PC10，PC10拒绝接受。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211206212628318.png" alt="image-20211206212628318"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211206212655525.png" alt="image-20211206212655525"></p><h3 id="网桥"><a href="#网桥" class="headerlink" title="网桥"></a>网桥</h3><p>​网桥相比集线器最大的优点就是可以记录，网桥两个接口中的mac地址，根据目标地址在哪个接口中而从选择性传发信息。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211206214248711.png" alt="image-20211206214248711"></p><p>​所以网桥可以有隔绝冲突域的作用。 但是网桥只有2个接口</p><h3 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a>交换机</h3><p>​交换机是全双工形式相当于有多个接口的网桥，可以记录每个接口的mac的。如果交换机记录完每个接口的mac地址，发送信息时就很精准了。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211206220542119.png" alt="image-20211206220542119"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211206220743154.png" alt="image-20211206220743154"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211206220812600.png" alt="image-20211206220812600"></p><p>​但是交换机也有局限性。如果全世界的网络设备【电脑、手机都用交换机连接起来】，当机器A发给机器B信息时，只知道机器B的ip地址不知道机器B的mac地址，这是就会全球范围内发送广播。一般情况下集线器、网桥、交换机所连接的机器在同一个网段里面。</p><h3 id="吐槽："><a href="#吐槽：" class="headerlink" title="吐槽："></a>吐槽：</h3><p>​packetTracer软件不会用啊特别是这debug功能simulation怎么玩不转呢，操作的和视频的不一样。直接截图视频的图，好难整理语言啊。555，我看看有什么软件可以生成动态图片，packetTracer下载还要官网注册账号，全是英文有点麻烦。总有一天我会用熟这个软件。参考资料<a href="https://www.bilibili.com/video/BV1Fy4y1Y7n6?p=2">https://www.bilibili.com/video/BV1Fy4y1Y7n6?p=2</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络协议 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络设备 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解忧杂货店-来自天上的祈祷</title>
      <link href="/article/426ed5ee.html"/>
      <url>/article/426ed5ee.html</url>
      
        <content type="html"><![CDATA[<h3 id="故事描述"><a href="#故事描述" class="headerlink" title="故事描述"></a>故事描述</h3><p>​这时翔太、敦也、信平还在浪矢杂货店里，天快亮了。他们已经解答了好几个忧愁，有月兔的姑娘的恋人和训练的困惑【他们要月兔放弃训练陪伴男友，却被她理解成自己的意思下定决心训练最后感谢浪矢的回信】；还有一个鱼店老板的儿子一心相当音乐家【他们最后建议鱼店音乐人坚持自己的音乐梦想知道生命的最后一刻，最后在丸光园孤儿院救出水原芹弟弟，水原芹长大以后是流行音乐家演唱会经常唱《重生》来纪念救命恩人，《重生》是鱼店音乐人的原创】；他们从网上得知浪矢杂货店今晚【9月13号】复活所以能和过去时空的人来回写信。他们在纠结是否在天亮前最后一个小时离开杂货店，因为敦也说我们是下三滥的小偷有什么资格给别人解答烦恼。</p><p>​后来他们忍不住打开信箱发现一位叫迷途的小狗的19岁姑娘的来信。信中说道这姑娘白天上班打杂晚上在就把陪酒，她很纠结自己要不要辞去白天的工作专心干陪酒这样就有更多的钱了。他们看到后很是气愤，翔太回信到【别被容易赚钱的职业迷惑了，小姑娘陪酒是个危险的行业是青春饭，在公司找个男人嫁了赚点正规钱报答父母】。姑娘回信到【你们不懂情况，我从小父母双亡，我想快点赚钱报答养育我的代秀婆婆，只要我答应做一个客人的情人就可以得到一笔费用那客人还会帮我开一家酒店】。他们回信说【不要信那客人的鬼话，他是有妻子的人不靠谱，你要学习金融股票相关知识并在1988年之前疯狂的做房地产投资，然后在21世纪初进入互联网行业，到时候电脑手机普及】</p><p>​信中迷途的小狗名字叫晴美，晴美小时候在丸光园孤儿院里呆了6年，因为代秀婆婆女儿一家有巨额债务所以住进代秀家然后晴美就送就丸光园了。6年后晴美回到代秀家遇到小时候的大姐姐静子【就是那时叫月兔的击剑运动员】，静子告诉她浪矢杂货店可以解决烦恼，自己的烦恼也听取浪矢店的意见。并说浪矢爷爷回信从来不含糊其辞说话态度明确强硬，是为了激发你的真实想法。于是就有了迷途的小狗的烦恼咨询信。</p><p>​后来多年里晴美努力学习房地产和金融知识，并不停的投资房地产。事业成功并开了公司承保策划运营和it开发业务。并在代秀婆婆死后买下代秀婆婆的住房当做别墅【这房子在她心里就是她的家，靠近丸光园孤儿院】，有一天她正常上班进过公司大门时候发现一个穿着POLO衫的男人乞求他给一次机会，让他的甜品店继续开下去【但是按照合同规定每个季度的业绩最差的店就没有资格开张】。</p><p>​晴美一直默默关注着丸光园，在丸光园起火后她捐资捐物的。这时的她已经51岁事业有成在网上看到9月13号浪矢杂货店仅此一夜复活的消息，她决定写一封感谢信去，于是在9月12日晚上开车去代秀婆婆的家然后去浪矢杂货店投递感谢信，结果遭到信平、翔太、敦也的抢劫。抢劫完了之后碰巧躲进一个破旧的没人的老房子，这老房子就是浪矢杂货店。哈哈哈!上一秒在抢劫，现在却干起排忧解难的的事情哈哈。他们抢劫到晴美的钱包里有一个感谢信，后来他们发现现在的晴美原来就是迷途的小狗就瞬间蒙了。上一秒还给30年前的妙龄少女排忧解难这一秒就抢劫事业成功后的晴美。【他们既写信告诉30年前的晴美发财致富的方法，然后晴美事业成功已经51岁了，又在躲进浪矢杂货店的的前一天晚上抢劫晴美】</p><h3 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h3><p>​翔太、敦也、信平他们三个虽然是小偷，但是不妨碍给别人排忧解难。因为他们和过去时空里的人写信告诉信中人未来时空发生的事情指引人们方向。他们知道自己的回信给过去的人带来影响又亲眼看见这些影响。</p><h3 id="故事时间线"><a href="#故事时间线" class="headerlink" title="故事时间线"></a>故事时间线</h3><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211218221513216.png"></p>]]></content>
      
      
      <categories>
          
          <category> 读后感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解忧杂货店 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解忧杂货店-听着批头骑士默祷</title>
      <link href="/article/6d54d2dc.html"/>
      <url>/article/6d54d2dc.html</url>
      
        <content type="html"><![CDATA[<h3 id="故事描述"><a href="#故事描述" class="headerlink" title="故事描述"></a>故事描述</h3><p>​浩介来到阔别多年的从小生长的小镇，靠着模糊的回忆找到了浪矢杂货店，小店招牌已经发黑但看上去一点没变，然后看到了一个叫BarFab4的酒吧进去了，喝着酒随便想起了他小时候在镇上的事情，浩劫从小出生在一个富人家庭，衣穿住行都是上等货，他迷上了一个叫披头士的乐队组合，他爸爸给他买了一套最好的音响设备而且所有披头士的专辑应有尽有，引来了不少好朋友的羡慕<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/000F9D6F.jpg" alt="img">，后来家里没钱了再也不能大手大脚的花，忽然有一天他妈妈纪美子跟他说要带着他连夜逃跑，那段时间纪美子和他爸爸贞幸经常吵架，后来才得知是贞幸公司欠下巨额贷款无法还上，渐渐的对父亲信心，贞幸答应他去日本世博会的事情已经没有下文。浩劫偶然经过浪矢杂货店萌生了写信的想法。他在信上说父亲公司欠下巨款要带着全家逃跑，走向逃亡生涯想阻止父母的计划。浪矢爷爷给他回信分析他家的情况并要浩劫回答一个问题【你是怎么看待你父母的是信任还是不信任了】。浩介回信说讨厌父母也不那么信任了。浪矢爷爷回信说既然改变不了父母的决定那就跟着父母一起逃跑，毕竟一家人风雨共济最重要的。浩介的朋友说披头士乐队要解散了你看了《顺其自然》电影就会知道。他在逃跑之前就跑就去东京看<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/002E5C39.png" alt="img">那电影。</p><p>​看完后觉得披头士四人人在一起心却不在一起，演唱也没激情和互动。他心中的无比珍视的东西崩塌了，人和人的恩断义绝是不需要什么理由的。他不在迷恋披头士最后以一万人员的价格买了他的全部专辑给他的朋友。逃跑的日子到了，在逃跑的路上的货车<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/003A4396.png" alt="img">里基本没有什么交流，到了服务区浩介和贞幸一起上厕所，父亲对他说今后不会给你零花钱了你已经有一万块了。此时他心中的一根弦锻炼，只想快点离开父母。</p><p>于是他拼命想反方向逃跑，他跑到另外一个停车场的大货车里面，从此开始一个人的漂泊之旅，大货车把他带到东京。他想买个车票看看世博会，不料却被刑警阻止【刑警看他孤身一人身旁没有家长】，把他拉进警局询问他的姓名和来历，没想到浩介不开口说出身份害怕说出后会连累到父母，警察<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/00EB76CF.png" alt="img">没有办法，只好把他送进孤儿院，他不常跟人讲话而是自己在旁边刻木雕有时还会送给小伙伴，后来他在一个木雕师傅下学习并拿到了藤川博的户籍，浩介长大后听说孤儿院起火了就回去看看院长，没有想到遇见小时候玩伴晴美，晴美现在开了一家公司还投资房地产赚了很多钱，并跟浩介说“这都是浪矢杂货店的老爷爷给的意见”。浩介极力表现出惊讶的样子其实他小时候也想浪矢爷爷咨询过。</p><p>​此时浩介在点了一杯酒，他发现这就把的女老板很懂披头士，每一张专辑她都有。经过一番沟通他发现这些专辑就是小时候他卖给他的朋友的，而酒吧的女老板正是他朋友的妹妹。女老板谈起从前的往事，说她哥哥的朋友因为欠债逃跑一家人都自杀了。浩介震惊了没有想到自己的离开给父母造成了自杀的悲剧，自己还一度觉得离开父母是正确的选择，对浪矢爷爷的建议没有感激之情还说这一切都是自己努力的结果。此时他充满内疚和自责。他是看到网上有留言浪矢杂货店复活的消息准备回信。本来已经写好内容【自己离开父母是对的并没有按照浪矢爷爷的建议和父母同舟共济】，现在他改变信的内容【听了浪矢爷爷的意见，和父母共度难关，现在和父母过着幸福的生活】。写好信之后走向浪矢杂货店，他发现有个女子也向卷帘门里投递信件<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/01141936.png" alt="img">，不用说这些人都给浪矢杂货店回信的，曾经都咨询过浪矢杂货店。</p>]]></content>
      
      
      <categories>
          
          <category> 读后感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解忧杂货店 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解忧杂货店-在思域车上等天亮</title>
      <link href="/article/a803c286.html"/>
      <url>/article/a803c286.html</url>
      
        <content type="html"><![CDATA[<h3 id="故事描述"><a href="#故事描述" class="headerlink" title="故事描述"></a>故事描述</h3><p>​浪矢贵之收到他姐姐的得知【自从妈妈去世以后独自生活的爸爸雄治的精神状态越来越好了，原因是干起了帮人解决烦恼的事情】，贵之很迷惑下班后带着红豆面包去浪矢杂货店看望父亲，一进店就看到桌上的咨询信。贵之想不通父亲为什么回答每一封信都很认真。就连别人投递的恶作剧的信也真正回答。雄治说不管是骚扰还是恶作剧都是内心破了一个洞，人的心声是绝能不能无视的。后来投递恶作剧信封<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/002624F4.png" alt="img">的人回信说【对不起，谢谢你】。收到回信雄治脸上骄傲的表情。一开始雄治只是一群孩子问些稀奇古怪的问题。根本算不上咨询信，比如“我想不学习，怎么样考试能打满分”等等。雄治都认证机智的回答了。经不住孩子们闹腾就硬着头皮干下去，没想到颇受好评。渐渐的有人开始咨询真正的烦恼。雄治此时正在为如何回信而发愁，并把信的内容和儿子贵之讲明白。一个女人怀了孩子但是孩子的爸爸已经和别的女人结婚了，孤独一人考虑要不要打掉孩子。贵之听后说“那肯定是打掉啊”你一个带孩子很辛苦的。雄治听了很生气说【你懂什么，这是她最后一次生孩子的机会了】。贵之说“从信的口气判断这女人决定生下这孩子，那我们说什么都没有用”。接着贵之又说想把父亲接到新房子里住，没想到被父亲拒绝了说去了新房子就干不了解忧的事情了，第二天贵之起来上班是发现父亲已经写好会信了，他很好奇信中的内容。</p><p>​一个星期后姐姐赖子到电话<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/002493E4.png" alt="img">说爸爸的杂货店关门了，贵之马上去看望爸爸查看情况，一进店就发现爸爸神情痛苦的躺在沙发上并向贵之提议想住进他的新房子里。雄治进入新房子后就每天看看书散散步最开心的是可以见到他孙子。然而快乐的时光总是短暂的一年后雄治查出是肝癌晚期进如医院治疗，有一天雄治说自己的时间不多了一定要回去杂货店里看看，贵之不理解也不同意。父亲说这是他最后的心愿了。</p><p>​到店以后父亲把遗嘱交给他并告诉他写信回信的秘密。并让他发誓不会告诉任何人。因为这件很神奇这些回信有些是来自未来时空的。其中一封信写到“谢谢浪矢爷爷小时候给我的建议，我曾经问过怎么样不学习也能考满分<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/00361391.png" alt="img">你回答说只要试卷的内容是关于自己的。这个答案让我很意外我至今还记得他，后来我当老师以后用思考了这句话的含义并把机智的做法运用到实践，成功活跃了班级的气氛”。看完信后贵之明白了这果然是未来时空的来信。父亲关闭杂货店重要的原因是他怕自己的回信给别人带来不好的影响，耿耿于怀这件事情就关闭杂货店。并让贵之看看其它的信封。信封的主人公是那个纠结自己要不要生孩子的女人的女儿，她长大后给浪矢杂货店写的感谢信。信中讲述了她的身世，从小生活在孤儿院里对自己的母亲为什么要抛弃她耿耿于怀，她的朋友小芹告诉她的身世说“她妈妈很爱她，为了生下她下了很大的决心，在生命的最后一刻救了她”。小芹还把她妈妈保存的信封叫给她。信中是一个叫浪矢杂货店的人给她提出宝贵的意见并给了她妈妈生孩子的勇气，现在写信来感谢浪矢杂货店。“</p><p>​贵之看完后明白了父亲认真对待每一封信的原因，这是父亲在做好事。父亲非常在意他认真回复的内容没有没给别人带来影响，所以在遗嘱里吩咐在死后33年纪念日把一段文字发在网上【虽然此时雄治和贵之都不知道网上和手机是什么意思】，2012年贵之godie之前吩咐他的孙子俊吾把这段内容发在网上。内容如下【九月十三日凌晨到现在的时间段，浪矢杂货店的咨询窗口已经重新开放，所以我想问一下各位朋友，当时的回信没有没对你的人生造成影响。没有忙上各位的忙，希望各位直言相告请投递到店铺卷帘门的信口里，拜托了<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/00555C0D.png" alt="img">】。</p><h3 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h3><p>​正式因为雄治老爷爷真正的回答问题，才能让女运动员带着男朋友的梦想继续坚持训练，让松冈克郎的追求自己的音乐梦想，直到生命的最后一刻救了小女孩小芹的弟弟，并成就以后时间的成为流行音乐人的小芹，他的原创歌曲《重生》就文明于世。而小芹的音乐经纪人是孤儿院的好朋友【如果没有浪矢店的回答，绿河也不会鼓起勇气生下这个音乐经纪人】，这几个人物的命运都浪矢杂货店的联系起来了。</p>]]></content>
      
      
      <categories>
          
          <category> 读后感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解忧杂货店 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解忧杂货店-深夜的口琴声</title>
      <link href="/article/1a4ee3b0.html"/>
      <url>/article/1a4ee3b0.html</url>
      
        <content type="html"><![CDATA[<h2 id="故事描述"><a href="#故事描述" class="headerlink" title="故事描述"></a>故事描述</h2><p>​讲述了一个叫松冈克郎的男人追求音乐的故事。故事以现在—回忆—现在的时间线展开。克朗在福利院给小朋友表演圣诞节晚会的歌曲，他的最后一首歌《重生》深深的吸引了一个小女孩。表演结束女孩问他最后一首表演的是什么歌曲，克朗说这是原创歌曲《重生》并单独表演给小女孩听，小女孩一下子记得旋律并且自己哼起来。并问克朗“你怎么不当职业歌手？”，此时克朗的思绪回到8年前。那时他为了音乐梦想从大学辍学并和家里闹掰了【他的父母想让他毕业后继承家里的鱼店】。他一直默默无闻创作歌曲，参加各种小型比赛。每一次名词都有进步但是仅此而已没有受到更多的赏识。也罢自己的作品投递给音乐社确了无音讯。他姐姐荣美子告诉他奶奶过世了。终于有机会回家看看想着肯定被父母和亲戚朋友数落，放着好好的学不上偏要走上音乐的道路，刚回家时就和父亲建夫吵嘴，但是父亲心理还是希望克朗回家的，在奶奶的守夜结束后所有亲戚在房间里吃寿司和啤酒<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/0083F186.png" alt="img">此时喝醉酒的叔叔和建夫为了鱼店的继承权争吵起来。叔叔多了一句嘴<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/008438F0.png" alt="img">说“放着大学不上偏要当歌手，这种荒唐的事情你也同意”。父亲建夫说“闭嘴”<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/0054115C.jpg" alt="img">别人家的事你少管。听到这句话，克朗心里很安慰心想【看来父亲没有吧自己当歌手的事情告诉亲戚朋友们】，克朗母亲加奈子对他说【其实你爸爸是支持你的】。守夜结束后克朗在小镇里闲逛，走到了小时候经常来的 “浪矢杂货店”，想起小时候“浪矢杂货店”的老爷爷经常给各种人回信解决人们的烦恼。各种各种稀奇古怪的问题都有，但是老爷爷总是认证回答。此时克朗看见一个骑自行车的女子<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/005CADF3.png" alt="img">投递一封信到杂货店里【从窗户里丢进去】，经过一番交谈后克朗得知这家杂货店任然有解答疑惑的功能。于是克朗将信将疑地写了一封信丢进杂货店的窗子里，除了名字他现在的烦恼情况全部说明了。没想到第二天收到回信，回信披头盖面第教育他一顿，说“你还是放弃音乐<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/0063508F.png" alt="img">的梦想吧，安安心心的继承鱼店”。克朗很生气<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/00642D33.png" alt="img">然后回信解释情况，说“这个鱼店不大，接收鱼店不代表高枕无忧的生活腰围音乐梦想坚持一个，说不定我的才华没有被人发现”。结果回信还是让他面对现实，并说父母开这家店不容易，有了这家店才能供你上学读书。回信的内容直击克朗心里，说克朗确实没有才华不然早就被音乐家发现了。这斩钉截铁的态度和准确的分析让克朗重新审视自己。守夜后三天父亲建夫就开鱼店上班了，结果因为身心疲惫心脏病发作晕倒了。此时克朗想放弃音乐继承鱼店随便有人照顾爸爸。建夫听了后非常生气说“以你现在的心态是干不好鱼店的，没准过几年又心神不定的想，要是继续搞音乐就好了，现在放弃也太轻松，‘因为我爸病倒了没有办法只能继承了’，‘都是为了这个家做出的牺牲’，怎么样我没说错吧，总之一点责任都不想负，全是别人的错”最后说“所以你要想这些有的没的再去全力拼搏一次，在东京奋战一场，就算最后打了败仗也无所谓，至少你留下足迹了”。在离开家之前克朗又去杂货店里取出回信，此时信中内容完全和前两次不同，说“你一定会成功的，请一直努力奋斗到生命的最后一刻”。克朗到东京以后以更大的热情投入到音乐上，终于有人要他去各个福利院托儿所演出。此时他的思绪被嘈杂的声音打断，原来此刻托儿所起火了，他撒腿就跑连吉他<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/00798909.png" alt="img">都不要了，此时他遇到刚才的小女孩小芹，小芹待在原地不动说她弟弟可能在二楼被大火困住了，于是他救出了小芹弟弟自己却死在了大火里。</p><p>​小芹长大了成立流行音乐家，每次演唱会的最后一首歌曲就会唱《重生》一次来纪念唯一的亲人，救出她的弟弟的男人克朗。</p><h3 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h3><p>​克朗一直坚持着自己的音乐梦想，最后以生命延续生命的方式让他的原创歌曲《重生》文明。克朗为了音乐放弃大学和父母安排的工作是个狠人啊。克朗也经历了热情—怀疑—坚持的这几个阶段。也感受到他父亲母亲默默支持他。</p>]]></content>
      
      
      <categories>
          
          <category> 读后感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解忧杂货店 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解忧杂货店-答案在牛奶箱里</title>
      <link href="/article/fb37dc6d.html"/>
      <url>/article/fb37dc6d.html</url>
      
        <content type="html"><![CDATA[<h3 id="故事描述"><a href="#故事描述" class="headerlink" title="故事描述"></a>故事描述</h3><p>​答案在牛奶箱里是第一章，主要讲述三个人在一家很老旧的杂货店里和过去时空的人互相写信对话的故事。翔太、幸平、敦也三个半夜做坏事偷车子，车子忽然报废了就躲进附近无人的老旧的杂货里等待第二天到来混进人群。他们的这杂货店的牛奶箱里突然收到一个叫月兔的姑娘的来信，他们觉得很奇怪三更半夜怎么会有人写信给杂货店呢？打开信一看，上面写着【一个叫月兔的女运动员正在全力准备奥运会的训练，和她的男朋友是同样的运动员一起准备训练，男友突然身患癌症不能训练，她想放弃训练照顾她男友，然而她男友坚决让他坚持训练带着两个人的梦想奋斗下去，她陷入了纠结和痛苦就写信息请教杂货店老板】。这时敦也从沾满灰尘的杂志中看到，这家杂货店在四十年前就是专门解决人们的烦恼的，顿时他们意识到他们收到过去时空的人的烦恼咨询。他们觉得这种事情一辈子很难碰到并且感觉倾听别人的烦恼是件很幸运的事情就抱着疑惑和好奇的心情给月兔回了信说【可以带着男朋友一起训练】。不料回信投进牛奶箱很快就有回信，月兔说【这不现实，她男朋友卧病在床而且医院旁边也没有训练场地，并希望有个像动画里的可视电话就好了】。他们就知道了在月兔那个时代没有手机不能视频聊天后来也得知她将要参加1980年的奥运会查看手机后发现1980年的奥运会取消了，并回信【不要参加什么奥运会了，奥运会就是大型的运动会，如果你真的爱你的男友就要陪着他，并且出主意让她男朋友换个梦想不要纠结于参加奥运会的事情，叫她撒谎说自己会怀孕了】。月兔表示感激并回信说自己不会撒谎。最后月兔带着两个人的梦想积极训练期间男友死了。奥运会后的半年他回信感谢解忧杂货店并且解释为什么不按照信中的建议去做。说【男朋友是爱着她积极训练的样子，自己也很喜欢这项运动，好好训练才是给自己给男友最大的安慰】</p><h3 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h3><p>​第一次读到这种跨时空对话的小说，觉得很新奇。尽管解忧杂货店的三人想尽办法让她放弃训练专心照顾男友，但是她依旧坚持自己的想法尊重初心尊重男友的想法。中途也因为自己训练没有成效和男友的病情想过放弃。也看到了三个好基友的心态变化从好奇迷惑–&gt;到好心劝告–&gt;到想尽办法–&gt;到恼羞成怒的有趣过程。觉得有幸听别人倾诉烦恼并出谋划策是一件幸运幸福的事情，最后歪打正着的获得别人衷心的感谢。</p>]]></content>
      
      
      <categories>
          
          <category> 读后感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解忧杂货店 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis相关报错</title>
      <link href="/article/c677dcf2.html"/>
      <url>/article/c677dcf2.html</url>
      
        <content type="html"><![CDATA[<h3 id="报错场景一"><a href="#报错场景一" class="headerlink" title="报错场景一"></a>报错场景一</h3><p>​我写的是一个简单的购物商城页面，当某个用户成功登陆以后，点击某个商品的【商品】详情按钮，就会出现500错误，具体信息如下</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211114161230808.png" alt="image-20211114161230808"></p><p>​大概意思是原因：java.sql.SQLDataException:不支持从LONG到java.sql.Timestamp的转换不支持从LONG到java.sql.Timestamp的转换；嵌套异常为java.sql.SQLDataException：不支持从LONG到java.sql.Timestamp的转换。是buy_count这个字段转换错误。</p><h4 id="过程如下"><a href="#过程如下" class="headerlink" title="过程如下"></a>过程如下</h4><table><thead><tr><th><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211114162102898.png" alt="image-20211114162102898"></th></tr></thead><tbody><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211114162628412.png" alt="image-20211114162628412"></td></tr><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211114163400740.png" alt="image-20211114163400740"></td></tr><tr><td>经过一番检查发现并不是sql语句写错了，于是我把报错信息百度一下，发现而是我的GoodsCart实体类没有加无参构造，具体原因我不知道，这是第一次碰到这情况。</td></tr></tbody></table><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>​可以在GoodsCart实体类里加上无参构造，或者修改SQL语句中，gc.buy_count和gc.add_date的位置，别问我为什么，我也不知道。参考帖子上说【一旦我们手动添加了带参数的构造方法，编译器就不会给我们添加默认的无参构造方法。导致mybatis无法new这个实体类。也就无法做映射。】<a href="https://blog.csdn.net/weixin_38067745/article/details/105287980">https://blog.csdn.net/weixin_38067745/article/details/105287980</a></p>]]></content>
      
      
      <categories>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat源码部署运行</title>
      <link href="/article/94163d5c.html"/>
      <url>/article/94163d5c.html</url>
      
        <content type="html"><![CDATA[<h4 id="Tomcat简介"><a href="#Tomcat简介" class="headerlink" title="Tomcat简介"></a>Tomcat简介</h4><p>​按我的理解Tomcat是一个容器，存储一些jsp，servlet类。同时负责客户端发送的http请求转发到servlet容器（jsp的本质就是servlet，servlet类可以理解成为controller层的Java类）。</p><h4 id="Tomcat的安装"><a href="#Tomcat的安装" class="headerlink" title="Tomcat的安装"></a>Tomcat的安装</h4><p>​进入官网。如tomcat8.5.72，点击64位的window压缩包下载64-bit Windows zip。连接如下<code>https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.72/bin/apache-tomcat-8.5.72-windows-x64.zip</code>，然后解压即可。也可以下载源码<code>https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.72/src/apache-tomcat-8.5.72-src.zip</code></p><h4 id="Tomcat服务的启动"><a href="#Tomcat服务的启动" class="headerlink" title="Tomcat服务的启动"></a>Tomcat服务的启动</h4><blockquote><p>1.可以直接点击startup.bat。【在你的tomcat目录\bin】</p><p>2.也可以把tomcat源码下载下来，导入maven工程，配置启动类运行。</p></blockquote><p>​下面我使用第二种方式启动tomcat容器，我的文件结构是如图1。首先在idea中创建一个空的项目tomcatTest11，再把源码的解压包放在空目录tomcatTest11，然后在apache-tomcat-8.5.42-src下新建一个pom.xml文件，点击File，在点击Project from existing source，选择pom.xml文件就可以导入工程了，然后添加启动类Application。具体流程如下图</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--pom.xml--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Tomcat8.5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Tomcat8.5<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>Tomcat8.5<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sourceDirectory</span>&gt;</span>java<span class="tag">&lt;/<span class="name">sourceDirectory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">testSourceDirectory</span>&gt;</span>test<span class="tag">&lt;/<span class="name">testSourceDirectory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">testResources</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">testResource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>test<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">testResource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">testResources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.easymock<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easymock<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ant<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ant<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>wsdl4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>wsdl4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.xml<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxrpc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jdt.core.compiler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ecj<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211019141430115.png"></th></tr></thead><tbody><tr><td align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211019142156684.png" alt="image-20211019142156684"></td></tr><tr><td align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211019142351818.png" alt="image-20211019142351818"></td></tr><tr><td align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211019142853769.png" alt="image-20211019142853769"></td></tr><tr><td align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211019142946728.png" alt="image-20211019142946728"></td></tr><tr><td align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211019143241325.png" alt="image-20211019143241325"></td></tr><tr><td align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211019143512175.png"></td></tr><tr><td align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211019150410688.png" alt="image-20211019150410688"></td></tr><tr><td align="center">此时点击debug运行boostrap启动类启动tomcat，可能会报错误，若出现了，CookieFilter类找不到，请参照此链接<code>https://blog.csdn.net/sun54429552/article/details/69666315</code>；若tomcat没有报错就在页面上输入localhost：8080。若此时页面上出现org.apache.jasper.servlet.JasperInitializer</td></tr><tr><td align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211019145303163.png" alt="image-20211019145303163"></td></tr><tr><td align="center">上图的原因是我们直接启动org.apache.catalina.startup.Bootstrap的时候没有加载org.apache.jasper.servlet.JasperInitializer，从而无法编译JSP。解决办法是在tomcat的源码org.apache.catalina.startup.ContextConfig中的configureStart函数中手动将JSP解析器初始化：</td></tr><tr><td align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211019145709217.png" alt="image-20211019145709217"></td></tr><tr><td align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211019145928605.png" alt="image-20211019145928605"></td></tr></tbody></table><h4 id="为什么启动类是Bootstrap-java"><a href="#为什么启动类是Bootstrap-java" class="headerlink" title="为什么启动类是Bootstrap.java"></a>为什么启动类是Bootstrap.java</h4><p>​在tomcat的解压包下，有个bin目录，其中startup.bat脚本的是启动tomcat的，可以点开一摊究竟。</p><table><thead><tr><th><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211019160137344.png" alt="image-20211019160137344"></th></tr></thead><tbody><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211019160249504.png" alt="image-20211019160249504"></td></tr></tbody></table><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>​可能出现问题的有两种情况，第一个是没有找到CookieFilter类，请在test包下的util包中添加CookieFilter，第二种情况是tomcat启动不报错但是访问localhost:8080出现空指针异常org.apache.jasper.servlet.JasperInitializer，解决方法是倒数第二个图。</p><p>​参考视频 <a href="https://www.bilibili.com/video/BV1dJ411N7Um?p=5">https://www.bilibili.com/video/BV1dJ411N7Um?p=5</a></p>]]></content>
      
      
      <categories>
          
          <category> Tomcat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web应用服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>resetPwdByMsgAndEmail</title>
      <link href="/article/a2ffc0e3.html"/>
      <url>/article/a2ffc0e3.html</url>
      
        <content type="html"><![CDATA[<h4 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述"></a>任务描述</h4><div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>通过发送短信和邮箱重置密码</p></div><h4 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h4><p>​有一天领导给我布置了一个任务，要我完成一个功能“通过发送短信和邮箱重置密码”。前端页面css已经写好但是HTML代码在蓝湖上面需要我自己拼成html页面。但是发送短信、邮箱按钮失效，刷新图形验证码失效，只给我一个页面的空壳。页面分成三个阶段，</p><ol><li>第一个是选择重置密码方式页面，</li><li>第二个是通过发送邮箱、发送短信重置密码的页面，</li><li>第三个是重置密码页面。如图所示。其中黄色的是按钮，黑色框的是填写的内容</li></ol><table><thead><tr><th align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211005093503259.png" alt="image-20211005093503259"></th></tr></thead><tbody><tr><td align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211005093537444.png" alt="image-20211005093537444"></td></tr><tr><td align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211005093552408.png" alt="image-20211005093552408"></td></tr><tr><td align="center"><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211005093607354.png" alt="image-20211005093607354"></td></tr></tbody></table><h4 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h4><p>​因为前端只给我了一个网站的空壳，大部分事情是我一个做【页面的跳转，短信、邮箱验证码的发送，密码一致性判断】，首先给上图4个页面取一个简单易懂的名字。再规定页面上每一个按钮发送的url。这样整体的流程框架就出来了。如下图</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211005133315726.png" alt="image-20211005133315726"></p><h5 id="发送手机验证码按钮分析"><a href="#发送手机验证码按钮分析" class="headerlink" title="发送手机验证码按钮分析"></a>发送手机验证码按钮分析</h5><p>​点击“发送手机验证码”按钮页面不会跳转到下个页面。此时若发送成功这按钮会变成倒计时状态，若发送手机验证码失败就在验证码输入框下提示具体原因。要给“获取手机验证码”按钮一个点击事件<code>onclick=&quot;sendResetPwdMsg&quot;</code>俩控制验证发送的前提和结果展示。大概流程如下</p><blockquote><ul><li><p>判断是否能够发送手机验证码</p><p>​    1. 当员工号没有填写时不能发送【并提示请填写员工号】</p><p>​    2. 当手机号没有填写时不能发送【并提示请填写手机号】</p></li><li><p>发送手机验证码是个ajax请求，参数是员工号和手机号</p><p>​    1. 发送sendResetPwdMsg请求，</p><p>​    2. controller层ResetPwdAction类的sendResetPwdMsg()接收到此请求会判断手机号是否匹配和员工是否存在，只有这2个条件成立才会发送邮箱。并把发送短信成功失败的结果返回。并展示在toResetPwdPageBySendTextMsg.ftl页面</p></li></ul></blockquote><p>流程图如下</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211005153631122.png" alt="image-20211005153631122"></p><div class="note pink no-icon flat"><p>短信倒计时和动态图验证码我忘记怎么实现了</p></div><h5 id="在toResetPwdPageBySendTextMsg页面点击“下一步”分析"><a href="#在toResetPwdPageBySendTextMsg页面点击“下一步”分析" class="headerlink" title="在toResetPwdPageBySendTextMsg页面点击“下一步”分析"></a>在toResetPwdPageBySendTextMsg页面点击“下一步”分析</h5><p>​此时已经能接收到手机验证码了，可以从2个方面分析“下一步”按钮。</p><blockquote><ul><li>点击“下一步”按钮的前提<ul><li>因为form表单中包含了员工号、手机号、手机验证码、图形验证码、这4个填写框和一个“下一步”按钮，点击此按钮，form表单的所有参数都以post请求发送了。<code>url=&quot;checkResetPwdMsg.htm&quot;</code>,所以规定4个输入框里必须填写好内容才能点击“下一步”。</li></ul></li><li>表单发送成功后的checkResetPwdMsg（）方法<ul><li>方法的参数是form表单里4个input输入框里面的值还是Model记录错误信息站在toResetPwdPageBySendTextMsg.ftl页面，返回值是string，若验证通过跳转到输入新密码页面。</li></ul></li></ul></blockquote><p>流程图如下</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211005165321025.png" alt="image-20211005165321025"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211005171627409.png" alt="image-20211005171627409"></p>]]></content>
      
      
      <categories>
          
          <category> 工作总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 重置密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>13-Shiro的rememberMe</title>
      <link href="/article/49cb1f93.html"/>
      <url>/article/49cb1f93.html</url>
      
        <content type="html"><![CDATA[<h4 id="权限分类"><a href="#权限分类" class="headerlink" title="权限分类"></a>权限分类</h4><table><thead><tr><th>用户访问页面分为3中级别</th><th></th></tr></thead><tbody><tr><td>未认证可以访问的页面</td><td>比如登录、注册页面</td></tr><tr><td>“记住我”（曾登录过）访问的页面</td><td>index.html</td></tr><tr><td>以认证可访问的页面</td><td>转账页面等</td></tr></tbody></table><h5 id="记住密码的流程"><a href="#记住密码的流程" class="headerlink" title="记住密码的流程"></a>记住密码的流程</h5><p>​第一次登录login.html页面时，点击“登录”会把用户的username和password存入cookie中，第二次登录login.html页面时输入username后，会调用js方法获取cookie里的密码并自动把密码填写到input标签里。</p><h5 id="shiro的“记住我”流程"><a href="#shiro的“记住我”流程" class="headerlink" title="shiro的“记住我”流程"></a>shiro的“记住我”流程</h5><p>​现在上述功能交给shiro的SecurityManager实现，只需要告诉shiro把UsernamePasswordToekn类型token传入SecurityManager中，就会自动检测。</p><h5 id="流程示意图"><a href="#流程示意图" class="headerlink" title="流程示意图"></a>流程示意图</h5><p>​<img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/4FzFV1.png" alt="avatar"></p><h4 id="rememberMe实现"><a href="#rememberMe实现" class="headerlink" title="rememberMe实现"></a>rememberMe实现</h4><p>​在ShiroConfig中设置过滤器的权限，让访问index.html页面是以登录或曾登录用户的才能访问。设置过滤filterMap规则。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filterMap.put(<span class="string">&quot;/index.html&quot;</span>,<span class="string">&quot;user&quot;</span>);</span><br></pre></td></tr></table></figure><p>​并且设置cookie管理器，设置cookie的名字和存在时间。并且把rememberMe管理器传送给shiro的SecurityManager</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> CookieRememberMeManager <span class="title function_">getCookieRememberMeManager</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">CookieRememberMeManager</span> <span class="variable">rememberMeManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CookieRememberMeManager</span>();</span><br><span class="line">       <span class="type">SimpleCookie</span> <span class="variable">simpleCookie</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleCookie</span>(<span class="string">&quot;rememberMe&quot;</span>);</span><br><span class="line">       simpleCookie.setMaxAge(<span class="number">5</span>*<span class="number">60</span>);</span><br><span class="line">       rememberMeManager.setCookie(simpleCookie);</span><br><span class="line">       <span class="keyword">return</span> rememberMeManager;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> DefaultWebSecurityManager <span class="title function_">getDefaultWebSecurityManager</span><span class="params">(MyRealm myRealm, EhCacheManager ehCacheManager)</span> &#123;</span><br><span class="line">       <span class="type">DefaultWebSecurityManager</span> <span class="variable">defaultWebSecurityManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultWebSecurityManager</span>();</span><br><span class="line">       defaultWebSecurityManager.setRealm(myRealm);</span><br><span class="line">       defaultWebSecurityManager.setCacheManager(ehCacheManager);</span><br><span class="line">       defaultWebSecurityManager.setRememberMeManager(getCookieRememberMeManager());</span><br><span class="line">       <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>​并设置当subject.login(token)时，不仅要传username和password还要穿rememberMe</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkLogin</span><span class="params">(String username, String pwd, <span class="type">boolean</span> rememberMe)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordToken</span>(username, pwd);</span><br><span class="line">        <span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> SecurityUtils.getSubject();</span><br><span class="line">        token.setRememberMe(rememberMe);</span><br><span class="line">        subject.login(token);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检测</p><p>​login.html页面，填写好了username和password后点击“记住我”，进入index.html后，关闭所有页面，重新打开浏览器登录localhost:8080&#x2F;index.html。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/4EA0oD.png" alt="avatar"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/4EAoWj.png" alt="avatar"></p>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12-Shiro的缓存管理</title>
      <link href="/article/1af96f8f.html"/>
      <url>/article/1af96f8f.html</url>
      
        <content type="html"><![CDATA[<h4 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h4><p>​现在再添加量Shiro标签后，以HTML形式进行权限管理。是否每一次点击页面的某个菜单，都要经过MyRealm的授权方法，从数据库里查数据。在MyRealm的doGetAuthorizationInfo打印一行sout（“———-查询用户权限—-”）；看看登录成功后，引入index.html这句话打印了几次。现在用户zhoudu登录。</p><h5 id="检测结果"><a href="#检测结果" class="headerlink" title="检测结果"></a>检测结果</h5><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/4phdbt.png" alt="avatar"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/4p4CxH.png" alt="avatar"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/4pIFEt.png" alt="avatar"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/4pI35V.png" alt="avatar"></p><p>​由上图所示，在初始index.html时一共16个shiro标签，所以执行了16次授权方法。并且每次点击一个菜单又会调用授权方法。如点击“客户查询”，虽然没有用shiro标签修饰但是加上了权限判断的注解，也会打印”———-查询用户权限—-&#x3D;&#x3D;&#x3D;”)。如下图。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/4pTemj.png" alt="avatar"></p><p>​说明无论是初始化，还是点击某个菜单都会查询数据库的数据，而且这些查询是同样的重复的操作，当用户很多时用户点击量很大时会频繁的访问数据库，非常消耗数据库的性能，所以在初始化界面时把数据从数据库里读出来存入缓存中，下次点击某个菜单直接从缓存里寻找，这样性能提高很多。</p><h4 id="使用缓存"><a href="#使用缓存" class="headerlink" title="使用缓存"></a>使用缓存</h4><h5 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h5><p>​首页springboot要支持缓存，在引入第三方缓存，然后shiro支持缓存</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.ehcache<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="设置缓存策略"><a href="#设置缓存策略" class="headerlink" title="设置缓存策略"></a>设置缓存策略</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">updateCheck</span>=<span class="string">&quot;false&quot;</span> <span class="attr">dynamicConfig</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--持久化磁盘路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">&quot;java.io.tmpdir&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">&quot;users&quot;</span> <span class="attr">timeToLiveSeconds</span>=<span class="string">&quot;300&quot;</span> <span class="attr">maxEntriesLocalHeap</span>=<span class="string">&quot;1000&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defaultCache</span>    <span class="attr">maxElementsInMemory</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">eternal</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">timeToIdleSeconds</span>=<span class="string">&quot;3600&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">timeToLiveSeconds</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">overflowToDisk</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">maxElementsOnDisk</span>=<span class="string">&quot;10000&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">diskPersistent</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">diskExpiryThreadIntervalSeconds</span>=<span class="string">&quot;120&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">&quot;LRU&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="配置ShiroConfig"><a href="#配置ShiroConfig" class="headerlink" title="配置ShiroConfig"></a>配置ShiroConfig</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> EhCacheManager <span class="title function_">getEhCacheManager</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">EhCacheManager</span> <span class="variable">ehCacheManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EhCacheManager</span>();</span><br><span class="line">        ehCacheManager.setCacheManagerConfigFile(<span class="string">&quot;classpath:ehcache.xml&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> ehCacheManager;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DefaultWebSecurityManager <span class="title function_">getDefaultWebSecurityManager</span><span class="params">(MyRealm myRealm, EhCacheManager ehCacheManager)</span> &#123;</span><br><span class="line">        <span class="type">DefaultWebSecurityManager</span> <span class="variable">defaultWebSecurityManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultWebSecurityManager</span>();</span><br><span class="line">        defaultWebSecurityManager.setRealm(myRealm);</span><br><span class="line">        defaultWebSecurityManager.setCacheManager(ehCacheManager);</span><br><span class="line">        <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>11-Shiro的授权管理</title>
      <link href="/article/2098328f.html"/>
      <url>/article/2098328f.html</url>
      
        <content type="html"><![CDATA[<h4 id="权限管理的方式"><a href="#权限管理的方式" class="headerlink" title="权限管理的方式"></a>权限管理的方式</h4><h5 id="HTML页面限制"><a href="#HTML页面限制" class="headerlink" title="HTML页面限制"></a>HTML页面限制</h5><p>​方式有两种，第一种是基于HTML页面展示的形式。在登录时查询到用户权限结合shiro标签库展示，展示出该用户所有的权限菜单。此方法有缺点，比如wangtaiwen用户是HR职务只有修改、查询客户这两个权限，在登录页面只能看到这两个菜单，但是ta无意间知道了“入库”权限的url，只要wangtaiwen是登录状态可以不用点击菜单直接输入url—&gt;”localhost:8080&#x2F;repoAdd.html”，就能越级访问。所以要在ShiroConfig中加入限制条件。只有改用户有sys:repo:save时才能访问“入库”</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filterMap.put(<span class="string">&quot;/repoAdd.html&quot;</span>,<span class="string">&quot;perms[sys:repo:save]&quot;</span>);</span><br></pre></td></tr></table></figure><h5 id="注解限制"><a href="#注解限制" class="headerlink" title="注解限制"></a>注解限制</h5><p>​此方式不依赖shiro标签，在进入index.html页面后不管用户身份是什么，展示全部的菜单。但是用户只能点击ta有权限的那些菜单，其它菜单看得见但是点不进去。这需要在每个菜单的a标签的href&#x3D;url对应的controller方法上加上注解，说明此方式是具有某个权限才能访问。比如”查询客户“菜单没有用户都可以看到，不用加《shiro:hasPermission name&#x3D;”sys:customer:find”》标签。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;dd&gt;&lt;a href=<span class="string">&quot;customer/customerfind&quot;</span> target=<span class="string">&quot;myFrame&quot;</span>&gt; 查询客户&lt;/a&gt;&lt;/dd&gt;</span><br></pre></td></tr></table></figure><p>在CustomerController中加上注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;customer&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomerController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;customerfind&quot;)</span></span><br><span class="line">    <span class="meta">@RequiresPermissions(&quot;sys:customer:find&quot;)</span> <span class="comment">// 当此用户有sys:customer:find是才能有客户查询权限</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">cFind</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;customerFind&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="未授权处理"><a href="#未授权处理" class="headerlink" title="未授权处理"></a>未授权处理</h4><p>​使用注解方式授权时，用户可以看到某个菜单，单点击就报错443。是因为缺少某个权限。比如用户yangtian是库管，ta有库存的增删改查权限。没有“查询客户”权限，此时点击就报错，就可以弹出页面提示用户，缺少权限lackpermission.html弹出。需要在ShiroConfig中设置未授权url链接。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filter.setUnauthorizedUrl(<span class="string">&quot;/lackpermission.html&quot;</span>);</span><br></pre></td></tr></table></figure><p>​还在PageController中处理次请求，跳转到lackpermision.html页面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/lackpermission.html&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">lackpermission</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;lackpermission&quot;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>​弹出页面lackpermission.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    缺少权限</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10-Shiro的密码加密加盐</title>
      <link href="/article/ccdb3234.html"/>
      <url>/article/ccdb3234.html</url>
      
        <content type="html"><![CDATA[<h4 id="密码加密"><a href="#密码加密" class="headerlink" title="密码加密"></a>密码加密</h4><p>​一般加密的方式有2种，一种是base64加密是可以双向破解的。另一种的md5码加密只能由明文转成密文，不能有密文转成明文。这种单向转换更加安全，即使黑客进入数据库了无法根据密文密码登录。特别注意在注册时密码加密规则是什么就在shiro认证是告诉MyRealm密码匹配规则。myRealm最终匹配的是密文（先把input的密码转换成密文再和数据库的密文比对）代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">在ShiroConfig类中</span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> HashedCredentialsMatcher <span class="title function_">getHashedCredentialsMatcher</span> <span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 设置密码匹配规则</span></span><br><span class="line">       <span class="type">HashedCredentialsMatcher</span> <span class="variable">matcher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashedCredentialsMatcher</span>();</span><br><span class="line">       matcher.setHashAlgorithmName(<span class="string">&quot;md5&quot;</span>);</span><br><span class="line">       matcher.setHashIterations(<span class="number">1</span>);</span><br><span class="line">       <span class="keyword">return</span> matcher;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> MyRealm <span class="title function_">getMyRealm</span><span class="params">(HashedCredentialsMatcher matcher)</span> &#123;</span><br><span class="line">       <span class="type">MyRealm</span> <span class="variable">myRealm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyRealm</span>();</span><br><span class="line">       myRealm.setCredentialsMatcher(matcher);</span><br><span class="line">       <span class="keyword">return</span> myRealm;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="加密测试"><a href="#加密测试" class="headerlink" title="加密测试"></a>加密测试</h4><p>​现在数据库数据里username&#x3D;zhoudu存的是123456的32位md5码，现在登录访问localhost：8080&#x2F;输入username&#x3D;zhoudu,password&#x3D;123456。流程如下图。</p><table><thead><tr><th><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hx0mu9.png" alt="avatar"></th></tr></thead><tbody><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hxBnxg.png" alt="avatar"></td></tr><tr><td></td></tr><tr><td></td></tr></tbody></table><h4 id="密码加盐"><a href="#密码加盐" class="headerlink" title="密码加盐"></a>密码加盐</h4><h5 id="注册时加密加盐规则"><a href="#注册时加密加盐规则" class="headerlink" title="注册时加密加盐规则"></a>注册时加密加盐规则</h5><p>​加盐是让密码更安全的手段，可以生成随机数加密码前面后面等等。关键是在注册时规定密码加密规则和加盐规则。加盐加密后密码需要存入数据库。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"><span class="meta">@RequestMapping(&quot;/register&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">register</span><span class="params">(String username, String pwd)</span> &#123;</span><br><span class="line">        <span class="type">Md5Hash</span> <span class="variable">md5</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Md5Hash</span>(pwd);</span><br><span class="line">        System.out.println(<span class="string">&quot;单纯加密后 md5---》&quot;</span>+md5);</span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(<span class="number">100</span>)+<span class="number">100</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">salt</span> <span class="operator">=</span> num+<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">Md5Hash</span> <span class="variable">md5_salt</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Md5Hash</span>(pwd,salt);</span><br><span class="line">        System.out.println(<span class="string">&quot;md5_salt-----&gt;&quot;</span>+md5_salt); </span><br><span class="line">        <span class="comment">// 不能把单纯加密后 md5存入数据库，</span></span><br><span class="line">        <span class="comment">// 因为在MyRealm中的认证里写入加盐参数</span></span><br><span class="line">  <span class="comment">// AuthenticationInfo info = new SimpleAuthenticationInfo(username,users.getPwd(),ByteSource.Util.bytes(users.getPwdSalt(),getName());</span></span><br><span class="line">        <span class="comment">// 所以必须把密码加盐加密的md5码存入数据库，</span></span><br><span class="line">        userService.insertOneUser(username, md5_salt.toString(), salt);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还需要增加insert方法在service，dao，mapper里。并添加register.html</p><h5 id="注册页面register-html"><a href="#注册页面register-html" class="headerlink" title="注册页面register.html"></a>注册页面register.html</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;/user/register&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">      &lt;p&gt;账号&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> /&gt;&lt;/p&gt;</span><br><span class="line">      &lt;p&gt;密码&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;pwd&quot;</span>/&gt;&lt;/p&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="UserService，UserDao，UserMapper-xml一套"><a href="#UserService，UserDao，UserMapper-xml一套" class="headerlink" title="UserService，UserDao，UserMapper.xml一套"></a>UserService，UserDao，UserMapper.xml一套</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">UserServiceImpl</span><br><span class="line"><span class="comment">// 注册</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertOneUser</span><span class="params">(String username, String pwd, String salt)</span> &#123;</span><br><span class="line">        userDao.insertOneUser(username,pwd,salt);</span><br><span class="line">    &#125;</span><br><span class="line">    ------------------------------------</span><br><span class="line"> UserDao</span><br><span class="line"> <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">insertOneUser</span><span class="params">(String username, String password, String salt)</span> ;</span><br><span class="line"> ------------------------------------</span><br><span class="line"> UserMapper.xml</span><br><span class="line"> &lt;insert id=<span class="string">&quot;insertOneUser&quot;</span> &gt;</span><br><span class="line">        insert into <span class="title function_">users</span> <span class="params">(username,password,password_salt)</span> values(#&#123;username&#125;, #&#123;password&#125;, #&#123;salt&#125;);</span><br><span class="line">    &lt;/insert&gt;</span><br></pre></td></tr></table></figure><h4 id="MyRealm认证规则"><a href="#MyRealm认证规则" class="headerlink" title="MyRealm认证规则"></a>MyRealm认证规则</h4><p>​因为注册时对密码加密加盐看，所以MyRealm认证时要查询数据库的password_salt，并存入AuthenticationInfo对象里。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRealm</span> <span class="keyword">extends</span> <span class="title class_">AuthorizingRealm</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"><span class="keyword">protected</span> AuthenticationInfo <span class="title function_">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> (UsernamePasswordToken) authenticationToken;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> token.getUsername();</span><br><span class="line">        <span class="type">Users</span> <span class="variable">users</span> <span class="operator">=</span> userDao.queryUserByUsername(username);</span><br><span class="line">        <span class="comment">// 用户名，密码，salt,realm.</span></span><br><span class="line">        <span class="type">AuthenticationInfo</span> <span class="variable">info</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthenticationInfo</span>(</span><br><span class="line">                username,users.getPwd(),</span><br><span class="line">                ByteSource.Util.bytes(users.getPwdSalt()),</span><br><span class="line">                getName());</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="加盐测试"><a href="#加盐测试" class="headerlink" title="加盐测试"></a>加盐测试</h4><p>​先注册新账号、密码。laowang14 ，112233。注册成功后登陆</p><table><thead><tr><th><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hx5F5F.png" alt="avatar"></th></tr></thead><tbody><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hx5V29.png" alt="avatar"></td></tr><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hx5tKI.png" alt="avatar"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>9-引入layui实现Shiro后台管理页面</title>
      <link href="/article/dafe26a3.html"/>
      <url>/article/dafe26a3.html</url>
      
        <content type="html"><![CDATA[<h4 id="引入layui"><a href="#引入layui" class="headerlink" title="引入layui"></a>引入layui</h4><p>​因为自己写的index.html页面简单难看，就要引入现成的框架Layui，可以去官网下载也可以引入SDN。把下载好的layui文件放入static中。</p><table><thead><tr><th>引入方式</th></tr></thead><tbody><tr><td>本地引入</td></tr><tr><td>在head标签里 添加《link rel&#x3D;”stylesheet” href&#x3D;”layui&#x2F;css&#x2F;layui.css》</td></tr><tr><td>在底部 body的上方添加《script src&#x3D;”layui&#x2F;layui.js”&gt;&lt;&#x2F;script》</td></tr><tr><td>SDN引入</td></tr><tr><td>在head标签里 添加《link rel&#x3D;”stylesheet” href&#x3D;”&#x2F;&#x2F;unpkg.com&#x2F;<a href="mailto:&#x6c;&#x61;&#x79;&#117;&#105;&#64;&#50;&#46;&#x36;&#x2e;&#x38;">&#x6c;&#x61;&#x79;&#117;&#105;&#64;&#50;&#46;&#x36;&#x2e;&#x38;</a>&#x2F;dist&#x2F;css&#x2F;layui.css”》</td></tr><tr><td>在底部 body的上方添加《script src&#x3D;”&#x2F;&#x2F;unpkg.com&#x2F;<a href="mailto:&#x6c;&#97;&#121;&#117;&#105;&#64;&#x32;&#x2e;&#x36;&#x2e;&#x38;">&#x6c;&#97;&#121;&#117;&#105;&#64;&#x32;&#x2e;&#x36;&#x2e;&#x38;</a>&#x2F;dist&#x2F;layui.js”》</td></tr></tbody></table><h4 id="页面布局"><a href="#页面布局" class="headerlink" title="页面布局"></a>页面布局</h4><p>​直接在官网上找到管理布局页面复制粘贴，原始模板页面如下</p><table><thead><tr><th>原始页面</th></tr></thead><tbody><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hXdd1A.png" alt="avatar"></td></tr><tr><td>需要修改左侧导航栏为权限列表</td></tr><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hXBPld.png" alt="avatar"></td></tr><tr><td>改变右上角的用户信息,只用用户登录了，才会显示用户名，若是游客状态就不显示用户名</td></tr><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hXrNQJ.png" alt="avatar"></td></tr></tbody></table><h4 id="index-html代码"><a href="#index-html代码" class="headerlink" title="index.html代码"></a>index.html代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:shiro</span>=<span class="string">&quot;http://pollix.at/themeleaf/shiro&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>shiro后台 - Layui<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;layui/css/layui.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入 layui.css --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;link rel=&quot;stylesheet&quot; href=&quot;//unpkg.com/layui@2.6.8/dist/css/layui.css&quot;&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-layout layui-layout-admin&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-header&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-logo layui-hide-xs layui-bg-black&quot;</span>&gt;</span>权限菜单<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 头部区域（可配合layui 已有的水平导航） --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav layui-layout-left&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>控制台<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>商品管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>用户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>其它系统<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>邮件管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>消息管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>授权管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav layui-layout-right&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--登录状态--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:user</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item layui-hide layui-show-md-inline-block&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://z3.ax1x.com/2021/08/08/fQDPht.png&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-img&quot;</span>&gt;</span></span><br><span class="line">                        用户<span class="tag">&lt;<span class="name">shiro:principal</span>/&gt;</span>欢迎你,当前用户职位是</span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;admin&quot;</span>&gt;</span>超级管理员<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;HR&quot;</span>&gt;</span>人事<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;seller&quot;</span>&gt;</span>销售<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;repoManager&quot;</span>&gt;</span>库管<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;planner&quot;</span>&gt;</span>策划<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>基本资料<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>设置<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">shiro:user</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--游客--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:guest</span>&gt;</span></span><br><span class="line">                请<span class="tag">&lt;<span class="name">label</span> <span class="attr">style</span>=<span class="string">&quot;color: white;text-decoration: underline&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;javascript:location.href=&#x27;login.html&#x27;&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">shiro:guest</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-side layui-bg-black&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-side-scroll&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 左侧导航区域（可配合layui已有的垂直导航） --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav layui-nav-tree&quot;</span> <span class="attr">lay-filter</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item layui-nav-itemed&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>仓库管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:save&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>入库<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:delete&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>出库<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:update&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>修改库存<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:find&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>查询库存<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>客服管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customer:save&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>新增客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customer:delete&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>删除客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customer:update&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>修改客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customer:find&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>查询客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>订单管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:order:save&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>新增订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:order:delete&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>删除订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:order:update&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>修改订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:order:find&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>查询订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-body&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 内容主体区域 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;padding: 15px;&quot;</span>&gt;</span>内容主体区域。记得修改 layui.css 和 js 的路径<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-footer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 底部固定区域 --&gt;</span></span><br><span class="line">        底部固定区域</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;layui/layui.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入 layui.js --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;script src=&quot;//unpkg.com/layui@2.6.8/dist/layui.js&quot;&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//JavaScript代码区域</span></span></span><br><span class="line"><span class="language-javascript">    layui.<span class="title function_">use</span>(<span class="string">&#x27;element&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> element = layui.<span class="property">element</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8-自定义Realm的配置</title>
      <link href="/article/7640841f.html"/>
      <url>/article/7640841f.html</url>
      
        <content type="html"><![CDATA[<h4 id="改变Realm来源"><a href="#改变Realm来源" class="headerlink" title="改变Realm来源"></a>改变Realm来源</h4><p>​在ShiroConfig类中之前是连接JdbcRealm，JdbcRealm自动封装了认证和授权的SQL，而自定义realm到自己写，并且安全数据源要换成myRealm。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> MyRealm <span class="title function_">getMyRealm</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">MyRealm</span> <span class="variable">myRealm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyRealm</span>();</span><br><span class="line">    <span class="keyword">return</span> myRealm;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title function_">getDefaultWebSecurityManager</span><span class="params">(MyRealm myRealm)</span> &#123;</span><br><span class="line">    <span class="type">DefaultWebSecurityManager</span> <span class="variable">defaultWebSecurityManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultWebSecurityManager</span>();</span><br><span class="line">    defaultWebSecurityManager.setRealm(myRealm);</span><br><span class="line">    <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置MyRealm"><a href="#配置MyRealm" class="headerlink" title="配置MyRealm"></a>配置MyRealm</h4><p>​myRealm主要负责登录和授权，并把查询结果返回给SecurityManager安全管理器。并表示MyRealm类的真实名字。MyRealm类继承AuthorizingRealm类shiro从才认识自定义的realm。并把认证和授权的信息封装成Realm规定的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRealm</span> <span class="keyword">extends</span> <span class="title class_">AuthorizingRealm</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RoleDao roleDao;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PermissionDao permissionDao;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;myRealm&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    *  授权功能：获取用户的角色和权限信息</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthorizationInfo <span class="title function_">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> (String) principalCollection.iterator().next();</span><br><span class="line">        Set&lt;String&gt; roleNames = roleDao.queryRolenameByUsername(username);</span><br><span class="line">        Set&lt;String&gt; permissionCode = permissionDao.queryPermissionCodeByUsername(username);</span><br><span class="line">        <span class="type">SimpleAuthorizationInfo</span> <span class="variable">info</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthorizationInfo</span>();</span><br><span class="line">        info.setRoles(roleNames);</span><br><span class="line">        info.setStringPermissions(permissionCode);</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 认证方法从自定义realm中获取安全数据</span></span><br><span class="line"><span class="comment">     * 因为jdbcRealm会自动认证，只需要subject.login(token)</span></span><br><span class="line"><span class="comment">     * 而自定义realm要查安全数据</span></span><br><span class="line"><span class="comment">     * 并把结果包装成AuthenticationInfo对象</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthenticationInfo <span class="title function_">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> (UsernamePasswordToken) authenticationToken;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> token.getUsername();</span><br><span class="line">        <span class="type">Users</span> <span class="variable">users</span> <span class="operator">=</span> userDao.queryUserByUsername(username);</span><br><span class="line">        <span class="comment">// 用户名，密码，realm名</span></span><br><span class="line">        <span class="type">AuthenticationInfo</span> <span class="variable">info</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthenticationInfo</span>(username,users.getPwd(),getName());</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7-自定义Realm的DAO操作</title>
      <link href="/article/512aa564.html"/>
      <url>/article/512aa564.html</url>
      
        <content type="html"><![CDATA[<h4 id="dao流程的分析"><a href="#dao流程的分析" class="headerlink" title="dao流程的分析"></a>dao流程的分析</h4><p>​由于这次自定义myRealm,而shiro自带JdbcRealm帮我们封装好了，负责认证和授权过程sql查询。所以自定义myRealm也要写这些SQL语句。如下</p><table><thead><tr><th>myRealm也要完成认证和授权的SQL</th></tr></thead><tbody><tr><td>1。 认证（登录时）验证查询</td></tr><tr><td>根据username查询用户信息。简单的单表查询</td></tr><tr><td>2。授权查询</td></tr><tr><td>根据用户名查询该用户的角色信息</td></tr><tr><td>根据用户名查询该用户的权限信息</td></tr><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hbm66x.png" alt="avatar"></td></tr></tbody></table><h4 id="我的SQL"><a href="#我的SQL" class="headerlink" title="我的SQL"></a>我的SQL</h4><h5 id="认证SQL"><a href="#认证SQL" class="headerlink" title="认证SQL"></a>认证SQL</h5><p>​单表查询根据username查询用户信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> u.id <span class="keyword">from</span> users u <span class="keyword">where</span> u.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span>;</span><br></pre></td></tr></table></figure><h5 id="授权SQL"><a href="#授权SQL" class="headerlink" title="授权SQL"></a>授权SQL</h5><p>​  根据用户名查询该用户的角色信息，①先查用户角色表中该用户的角色编号。②再根据role_id联合查询用户表、角色表，并且2个表的角色id一样。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">第一步 </span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">ur.rid <span class="keyword">FROM</span> users_roles ur </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">ur.uid <span class="operator">=</span> (<span class="keyword">SELECT</span>u.id <span class="keyword">FROM</span> users u WHEREu.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span>)</span><br><span class="line"></span><br><span class="line">第二步  </span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">u.username,r.role_name <span class="keyword">FROM</span> roles r, users u </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">r.role_id <span class="keyword">IN</span> (</span><br><span class="line"><span class="keyword">SELECT</span> ur.rid <span class="keyword">FROM</span>users_roles ur </span><br><span class="line">        <span class="keyword">WHERE</span></span><br><span class="line">ur.uid <span class="operator">=</span> ( <span class="keyword">SELECT</span> u.id <span class="keyword">FROM</span> users u <span class="keyword">WHERE</span> u.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span> )) <span class="keyword">AND</span> u.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span>;</span><br></pre></td></tr></table></figure><p>​根据用户名查询权限信息。①先查用户角色表中该用户的角色编号，②再根据rid关联角色权限表、权限表、用户表，并且角色权限表中的rid和①的rid一样，角色权限表中的pid和权限表permission_id一样</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">第一步 </span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">ur.rid <span class="keyword">FROM</span> users_roles ur </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">ur.uid <span class="operator">=</span> (<span class="keyword">SELECT</span>u.id <span class="keyword">FROM</span> users u WHEREu.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span>)</span><br><span class="line">第二步</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span></span><br><span class="line">rp.pid, p.permission_code, p.permission_name, u.username </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">roles_permissions rp, permissions p, users u </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">rp.rid <span class="keyword">IN</span> (</span><br><span class="line"><span class="keyword">SELECT</span> ur.rid <span class="keyword">FROM</span> users_roles ur <span class="keyword">WHERE</span></span><br><span class="line">ur.uid <span class="operator">=</span> ( <span class="keyword">SELECT</span> u.id <span class="keyword">FROM</span> users u <span class="keyword">WHERE</span> u.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span> )) <span class="keyword">AND</span> p.permission_id <span class="operator">=</span> rp.pid <span class="keyword">AND</span> u.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="改进的SQL"><a href="#改进的SQL" class="headerlink" title="改进的SQL"></a>改进的SQL</h4><p>​通过username查询到角色名称。使用连接查询的方法(涉及3张表，users、users_roles、roles)。SQL如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">u.username, r.role_name </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">users u</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> users_roles ur <span class="keyword">ON</span> u.id <span class="operator">=</span> ur.uid</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> roles r <span class="keyword">ON</span> r.role_id <span class="operator">=</span> ur.rid </span><br><span class="line"><span class="keyword">WHERE</span> u.username <span class="operator">=</span> <span class="string">&#x27;zhoudu&#x27;</span>;</span><br></pre></td></tr></table></figure><p>​通过username查询权限信息，关联5张表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> u.username, p.permission_code </span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">users u <span class="keyword">inner</span> <span class="keyword">join</span> users_roles ur <span class="keyword">on</span> u.id<span class="operator">=</span>ur.uid </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> roles r <span class="keyword">on</span> r.role_id<span class="operator">=</span>ur.rid</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> roles_permissions rp <span class="keyword">on</span> rp.rid<span class="operator">=</span>r.role_id</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> permissions p <span class="keyword">on</span> p.permission_id<span class="operator">=</span>rp.pid</span><br><span class="line"><span class="keyword">where</span> u.username<span class="operator">=</span><span class="string">&#x27;zhoudu&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="Dao流程"><a href="#Dao流程" class="headerlink" title="Dao流程"></a>Dao流程</h4><p>​以查询权限为例，先创建PermissionDao和对应的Mapper.xml。因为application.yml中设置mappers和生成beans的路径。所以PermissionMapper.xml必须在resource的mappers包下，而实体类必须在beans包下</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hq7Ndg.png" alt="avatar"></p><p>​并在启动配置类中SpringbootAndShiroApplication类中配置mapper扫描注解。指定dao的SQL语句，而不用在每个dao接口上写@Mapper，所以的SpringbootAndShiroApplication类的上方加上@MapperScan(basePackages &#x3D; “com.example.springbootandshiro.dao”)。有我们只需要权限代码不需要权限的其它信息，所以PermissionMapper.xml的返回值是Set<String>类型。string—&gt;”sys:order:add“等等</p><h5 id="PermissionDao"><a href="#PermissionDao" class="headerlink" title="PermissionDao"></a>PermissionDao</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">PermissionDao</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">queryPermissionCodeByUsername</span><span class="params">(String username)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="PermissionMapper"><a href="#PermissionMapper" class="headerlink" title="PermissionMapper"></a>PermissionMapper</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.example.springbootandshiro.dao.PermissionDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryPermissionCodeByUsername&quot;</span> <span class="attr">resultSets</span>=<span class="string">&quot;java.util.Set&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;string&quot;</span>&gt;</span></span><br><span class="line">        select p.permission_code</span><br><span class="line">        from</span><br><span class="line">            users u inner join users_roles ur on u.id=ur.uid</span><br><span class="line">                    inner join roles r on r.role_id=ur.rid</span><br><span class="line">                    inner join roles_permissions rp on rp.rid=r.role_id</span><br><span class="line">                    inner join permissions p on p.permission_id=rp.pid</span><br><span class="line">        where u.username=#&#123;username&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="PermissionDaoTest"><a href="#PermissionDaoTest" class="headerlink" title="PermissionDaoTest"></a>PermissionDaoTest</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest(classes = SpringBootAndShiroApplication.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PermissionDaoTest</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PermissionDao permissionDao;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">queryRolenameByUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        Set&lt;String&gt; permissionCodes = permissionDao.queryPermissionCodeByUsername(<span class="string">&quot;zhoudu&quot;</span>);</span><br><span class="line">        Iterator&lt;String&gt; it = permissionCodes.iterator();</span><br><span class="line">        <span class="keyword">while</span>(it.hasNext()) &#123;</span><br><span class="line">            System.out.println(it.next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="项目结构与测试结果"><a href="#项目结构与测试结果" class="headerlink" title="项目结构与测试结果"></a>项目结构与测试结果</h5><table><thead><tr><th><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hqLfHK.png" alt="avatar"></th></tr></thead><tbody><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hqOnC4.png" alt="avatar"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6-自定义Realm的数据表设计</title>
      <link href="/article/71ca0547.html"/>
      <url>/article/71ca0547.html</url>
      
        <content type="html"><![CDATA[<h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4><p>​根据RBAC权限设计，至少需要5张表。</p><table><thead><tr><th>解释</th><th>表名</th><th>描述</th></tr></thead><tbody><tr><td>用户表</td><td>users</td><td>自增id,账号，密码，加盐密码</td></tr><tr><td>角色表</td><td>roles</td><td>自增role_id,角色名称</td></tr><tr><td>权限表</td><td>permissions</td><td>自增permission_id,权限代码，权限名称</td></tr><tr><td>用户角色表</td><td>users_roles</td><td>用户id，角色id，</td></tr><tr><td>角色权限表</td><td>roles_permissions</td><td>角色id，权限id</td></tr></tbody></table><h5 id="用户表"><a href="#用户表" class="headerlink" title="用户表"></a>用户表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> users(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">PRIMARY</span> key auto_increment,</span><br><span class="line">username <span class="type">varchar</span>(<span class="number">60</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">unique</span>,</span><br><span class="line">password <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">password_salt <span class="type">varchar</span>(<span class="number">60</span>)</span><br><span class="line">)charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;zhoudu&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;wangtaiwen&#x27;</span>,<span class="string">&#x27;321654&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;tangyifu&#x27;</span>,<span class="string">&#x27;741852&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;yangtian&#x27;</span>,<span class="string">&#x27;963852&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;caiyonghu&#x27;</span>,<span class="string">&#x27;789456&#x27;</span>);</span><br></pre></td></tr></table></figure><h5 id="角色表"><a href="#角色表" class="headerlink" title="角色表"></a>角色表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> roles(</span><br><span class="line">role_id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">role_name <span class="type">varchar</span>(<span class="number">60</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles(role_name) <span class="keyword">values</span>(<span class="string">&#x27;admin&#x27;</span>);  <span class="comment">-- 超级管理员</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles(role_name) <span class="keyword">values</span>(<span class="string">&#x27;HR&#x27;</span>);     <span class="comment">-- 人事 </span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles(role_name) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>); <span class="comment">-- 销售</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles(role_name) <span class="keyword">values</span>(<span class="string">&#x27;repoManager&#x27;</span>); <span class="comment">-- 库管</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles(role_name) <span class="keyword">values</span>(<span class="string">&#x27;planner&#x27;</span>); <span class="comment">-- 策划</span></span><br></pre></td></tr></table></figure><h5 id="权限表"><a href="#权限表" class="headerlink" title="权限表"></a>权限表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> permissions(</span><br><span class="line">permission_id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment, <span class="comment">-- 1</span></span><br><span class="line">permission_code <span class="type">varchar</span>(<span class="number">60</span>) <span class="keyword">not</span> <span class="keyword">null</span>,         <span class="comment">-- sys:repo:find</span></span><br><span class="line">permission_name <span class="type">varchar</span>(<span class="number">60</span>) <span class="comment">-- 库存查询</span></span><br><span class="line">)charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:repo:save&#x27;</span>,<span class="string">&#x27;添加库存&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:repo:delete&#x27;</span>,<span class="string">&#x27;减少库存&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:repo:update&#x27;</span>,<span class="string">&#x27;修改库存&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:repo:find&#x27;</span>,<span class="string">&#x27;查询库存&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:order:save&#x27;</span>,<span class="string">&#x27;添加订单&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:order:delete&#x27;</span>,<span class="string">&#x27;减少订单&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:order:update&#x27;</span>,<span class="string">&#x27;修改订单&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:order:find&#x27;</span>,<span class="string">&#x27;查询订单&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:customer:save&#x27;</span>,<span class="string">&#x27;添加客户&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:customer:delete&#x27;</span>,<span class="string">&#x27;减少客户&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:customer:update&#x27;</span>,<span class="string">&#x27;修改客户&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> permissions (permission_code,permission_name) <span class="keyword">values</span>(<span class="string">&#x27;sys:customer:find&#x27;</span>,<span class="string">&#x27;查询客户&#x27;</span>);</span><br></pre></td></tr></table></figure><h5 id="用户角色表"><a href="#用户角色表" class="headerlink" title="用户角色表"></a>用户角色表</h5><p>​为某个用户分配某个角色，一个用户可以对用多个角色，一个角色也可由对应多个用户。拥有某个角色就等于拥有这个角色的所有信息，比如id&#x3D;1，username&#x3D;zhoudu是超级管理员，就给zhoudu分配所有角色，有HR、seller、repoManager、planner。除了id&#x3D;1，其它id要和角色表role_id对应。比如id&#x3D;2的wangtaiwen对应人事HR，id&#x3D;3的tangyifu对应销售。等等</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> users_roles(</span><br><span class="line">uid <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">rid <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="comment">-- primary key(uid,rid),</span></span><br><span class="line"><span class="comment">-- constraint FK_user foreign key(uid) references users(id);</span></span><br><span class="line"><span class="comment">-- constraint FK_roles foreign key(rid) references roles(role_id);</span></span><br><span class="line">)charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">5</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">4</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> users_roles(uid,rid) <span class="keyword">values</span>(<span class="number">5</span>,<span class="number">5</span>);</span><br></pre></td></tr></table></figure><h5 id="角色权限表"><a href="#角色权限表" class="headerlink" title="角色权限表"></a>角色权限表</h5><p>​为某个角色分配一些权限，一些功能。某个角色可以有多个权限也可以有一个权限。先规定库管有库存的增删改查；销售人员有订单的增删改查和客户的增删改查和添加库存功能。人事HR有修改客户和查询客户。为从策划planner分配存库、订单、客户的查询。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> roles_permissions(</span><br><span class="line">rid <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">pid <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> roles_permissions;</span><br><span class="line"><span class="comment">-- 为库管rid=4 设置权限</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">4</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">4</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">4</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">4</span>,<span class="number">4</span>);</span><br><span class="line"><span class="comment">-- 为销售rid=3 设置权限</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">5</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">6</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">7</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">8</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">9</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">11</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">12</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="comment">-- 为HR rid=2 设置权限</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">2</span>,<span class="number">11</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">2</span>,<span class="number">12</span>);</span><br><span class="line"><span class="comment">-- 为策划 rid=5 设置权限</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">5</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">5</span>,<span class="number">8</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(rid,pid) <span class="keyword">values</span>(<span class="number">5</span>,<span class="number">12</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5-Shiro标签导入</title>
      <link href="/article/77d38079.html"/>
      <url>/article/77d38079.html</url>
      
        <content type="html"><![CDATA[<h4 id="导入方式"><a href="#导入方式" class="headerlink" title="导入方式"></a>导入方式</h4><p>​在认证成功进入index页面后，需要看到用户信息，和相关的权限信息。Shiro就提供一套类似jstl的标签使用。shiro标签可以在jsp中也可以在ThemeLeaf中使用。导入后就能使用shiro的标签库。</p><table><thead><tr><th>引入方式</th></tr></thead><tbody><tr><td>1。 jsp中&#x3D;&#x3D;&#x3D;&gt;   &lt;%@ taglib prefix&#x3D;”shiro”  uri&#x3D;”hhtp:&#x2F;&#x2F;shiro.apache.org&#x2F;tags” %&gt;</td></tr><tr><td>2。 ThemeLeaf中&#x3D;&#x3D;&#x3D;&gt;  <br /><html xmlns:th="http://www.thymeleaf.org"     xmlns:shiro="http://pollix.at/themeleaf/shiro"></td></tr><tr><td></td></tr></tbody></table><h4 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h4><p>​要引入shiro对ThemeLeaf模板标签的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.theborakompanioni<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-shiro<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​设置ShiroConfig类中shiro自定义tags</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注册这个bean目的就是为了在thymeleaf中使用shiro的自定义tag。</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> ShiroDialect <span class="title function_">shiroDialect</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ShiroDialect</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="shiro的常用标签"><a href="#shiro的常用标签" class="headerlink" title="shiro的常用标签"></a>shiro的常用标签</h4><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><a href="shiro:guest">shiro:guest</a></td><td>游客身份访问页面展示的内容</td></tr><tr><td><a href="shiro:user">shiro:user</a></td><td>登录后用户在页面上看到的内容</td></tr><tr><td><a href="shiro:principal">shiro:principal</a></td><td>显示用户名</td></tr><tr><td><a href="shiro:hasRole">shiro:hasRole</a></td><td>判断用户是否有某个角色</td></tr></tbody></table><h4 id="登录成功后index页面"><a href="#登录成功后index页面" class="headerlink" title="登录成功后index页面"></a>登录成功后index页面</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:shiro</span>=<span class="string">&quot;http://pollix.at/themeleaf/shiro&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    index登录成功后/////////</span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">shiro:guest</span>&gt;</span></span><br><span class="line">        游客访问状态，<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/login.html&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">shiro:guest</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">shiro:user</span>&gt;</span></span><br><span class="line">        用户<span class="tag">&lt;<span class="name">shiro:principal</span>/&gt;</span>欢迎你</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        当前用户职位是</span><br><span class="line">        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;admin&quot;</span>&gt;</span>超级管理员<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;repairman&quot;</span>&gt;</span>维修工<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;seller&quot;</span>&gt;</span>销售<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;repoManager&quot;</span>&gt;</span>库管<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;customerstaff&quot;</span>&gt;</span>客服<span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        你有一下权限<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        仓库管理权限</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:save&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>入库<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:delete&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>出库<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:update&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>修改库存<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:repo:find&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>查询库存<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        订单管理权限</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:seller:save&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>增加订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:seller:delete&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>删除订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:seller:update&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>修改订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:seller:find&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>查找订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        客服管理权限</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customerstaff:save&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>增加客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customerstaff:delete&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>删除客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customerstaff:update&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>修改客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">shiro:hasPermission</span> <span class="attr">name</span>=<span class="string">&quot;sys:customerstaff:find&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>查找客户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">shiro:hasPermission</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">shiro:user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4-Shiro的JdbcRealm介绍和表结构</title>
      <link href="/article/587aecf6.html"/>
      <url>/article/587aecf6.html</url>
      
        <content type="html"><![CDATA[<h4 id="JdbcRealm简介"><a href="#JdbcRealm简介" class="headerlink" title="JdbcRealm简介"></a>JdbcRealm简介</h4><p>​JdbcRealm是shiro框架内置的安全数据源，需要连接数据库才能使用。连接的数据库的表结构必须遵循某种规范。</p><h4 id="jdbcRealm表结构规范"><a href="#jdbcRealm表结构规范" class="headerlink" title="jdbcRealm表结构规范"></a>jdbcRealm表结构规范</h4><p>​至少包含三张表，并且表名和字段名都是固定的。如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> users (</span><br><span class="line">  id <span class="type">bigint</span> auto_increment,</span><br><span class="line">  username <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  password <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  password_salt <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  <span class="keyword">constraint</span> pk_users <span class="keyword">primary</span> key(id)</span><br><span class="line">) charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index idx_users_username <span class="keyword">on</span> users(username);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user_roles(</span><br><span class="line">  id <span class="type">bigint</span> auto_increment,</span><br><span class="line">  username <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  role_name <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  <span class="keyword">constraint</span> pk_user_roles <span class="keyword">primary</span> key(id)</span><br><span class="line">) charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index idx_user_roles <span class="keyword">on</span> user_roles(username, role_name);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> roles_permissions(</span><br><span class="line">  id <span class="type">bigint</span> auto_increment,</span><br><span class="line">  role_name <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  permission <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  <span class="keyword">constraint</span> pk_roles_permissions <span class="keyword">primary</span> key(id)</span><br><span class="line">) charset<span class="operator">=</span>utf8 ENGINE<span class="operator">=</span>InnoDB;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index idx_roles_permissions <span class="keyword">on</span> roles_permissions(role_name, permission);</span><br></pre></td></tr></table></figure><h4 id="初始化表数据"><a href="#初始化表数据" class="headerlink" title="初始化表数据"></a>初始化表数据</h4><h5 id="用户信息表users"><a href="#用户信息表users" class="headerlink" title="用户信息表users"></a>用户信息表users</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;zhangsan&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;lisi&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;wangwu&#x27;</span>,<span class="string">&#x27;55555&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;zhaoliu&#x27;</span>,<span class="string">&#x27;666666&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> users(username,password) <span class="keyword">values</span>(<span class="string">&#x27;chengqi&#x27;</span>,<span class="string">&#x27;77777&#x27;</span>);</span><br></pre></td></tr></table></figure><h5 id="用户角色表user-roles"><a href="#用户角色表user-roles" class="headerlink" title="用户角色表user_roles"></a>用户角色表user_roles</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- admin 超级管理员；seller销售员；repoManager仓库管理员 ；customerstaff 客服；repairman 维修工</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> user_roles(username,role_name) <span class="keyword">values</span>(<span class="string">&#x27;zhangsan&#x27;</span>,<span class="string">&#x27;admin&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> user_roles(username,role_name) <span class="keyword">values</span>(<span class="string">&#x27;lisi&#x27;</span>,<span class="string">&#x27;seller&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> user_roles(username,role_name) <span class="keyword">values</span>(<span class="string">&#x27;wangwu&#x27;</span>,<span class="string">&#x27;repoManager&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> user_roles(username,role_name) <span class="keyword">values</span>(<span class="string">&#x27;zhaoliu&#x27;</span>,<span class="string">&#x27;customerstaff&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> user_roles(username,role_name) <span class="keyword">values</span>(<span class="string">&#x27;chengqi&#x27;</span>,<span class="string">&#x27;repairman&#x27;</span>);</span><br></pre></td></tr></table></figure><h5 id="角色权限表roles-permissions"><a href="#角色权限表roles-permissions" class="headerlink" title="角色权限表roles_permissions"></a>角色权限表roles_permissions</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 管理员有所有权限</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 库管员有仓库的增删改查</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;repoManager&#x27;</span>,<span class="string">&#x27;sys:repo:save&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;repoManager&#x27;</span>,<span class="string">&#x27;sys:repo:delete&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;repoManager&#x27;</span>,<span class="string">&#x27;sys:repo:update&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;repoManager&#x27;</span>,<span class="string">&#x27;sys:repo:find&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 销售员有销售订单的增删改查和客服人员的增删改查和 仓库的查询</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:seller:save&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:seller:delete&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:seller:update&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:seller:find&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:repo:find&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:customerstaff:save&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:customerstaff:delete&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:customerstaff:update&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;seller&#x27;</span>,<span class="string">&#x27;sys:customerstaff:find&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 客服有客户的查询和修改</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;customerstaff&#x27;</span>,<span class="string">&#x27;sys:customerstaff:find&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;customerstaff&#x27;</span>,<span class="string">&#x27;sys:customerstaff:update&#x27;</span>);</span><br><span class="line"><span class="comment">-- 修理工有所有的查询权限</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> roles_permissions(role_name,permission) <span class="keyword">values</span>(<span class="string">&#x27;repairman&#x27;</span>,<span class="string">&#x27;sys:*:find&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3-SpringBoot整合Shiro</title>
      <link href="/article/7eb6cafb.html"/>
      <url>/article/7eb6cafb.html</url>
      
        <content type="html"><![CDATA[<h4 id="shiro的应用场景"><a href="#shiro的应用场景" class="headerlink" title="shiro的应用场景"></a>shiro的应用场景</h4><p>​可以在javaSE应用的中的使用；也可以在web应用中的使用；SSM整合（配置多，用的少）。springboot主流</p><h4 id="创建SpringBoot项目的过程"><a href="#创建SpringBoot项目的过程" class="headerlink" title="创建SpringBoot项目的过程"></a>创建SpringBoot项目的过程</h4><p>​使用SpringInitializr快速创建springboot项目，需要集成themeleaf、springboot-web、lombok。使用druid和mybatis当做安全数据传递给realm组件，而且需要连接MySQL。导入以下依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          </span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​还需要配置springboot的启动配置文件application.yml。配置数据库连接池和mybatis的参数</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/ShiroDB?characterEncoding=utf8&amp;amp;serverTimezone=UTC</span></span><br><span class="line">      <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">initial-size:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mybaits/*Mapper.xml</span> <span class="comment">#指定全局配置文件位置</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.example.shirospringboot.beans</span></span><br></pre></td></tr></table></figure><h4 id="整合shiro"><a href="#整合shiro" class="headerlink" title="整合shiro"></a>整合shiro</h4><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hfxBse.png" alt="avatar"></p><table><thead><tr><th>整合流程</th></tr></thead><tbody><tr><td>1。引入shiro依赖，shiro-spring（包含shiro-web和shiro-core）</td></tr><tr><td>2。配置shiro的过滤器，拦截认证Authentication和授权Authorization请求，若是登录login请求就不拦截</td></tr><tr><td>3。配置SecurityManager到spring中</td></tr><tr><td>4。配置SecurityManager中的安全数据Realm</td></tr><tr><td>5。realm从哪来？可以是shiro.ini或者druid或自定义等等。</td></tr></tbody></table><p>​SpringBoot没有对shiro安全框架没有自动配置（SpringInitializr中没有shiro选项）是因为spring家族有自己的安全框架SpringSecurity。</p><h5 id="ShiroConfig配置类-用java类而不是xml"><a href="#ShiroConfig配置类-用java类而不是xml" class="headerlink" title="ShiroConfig配置类(用java类而不是xml)"></a>ShiroConfig配置类(用java类而不是xml)</h5><p>​此类配置了shiroFilter（ShiroFilterFactoryBean），SecurityManager和IniRealm。并设置了过滤器的过滤规则</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShiroConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> IniRealm <span class="title function_">getIniRealm</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">IniRealm</span> <span class="variable">iniRealm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IniRealm</span>(<span class="string">&quot;classpath:shiro.ini&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> iniRealm;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DefaultWebSecurityManager <span class="title function_">getDefaultWebSecurityManager</span><span class="params">(IniRealm iniRealm)</span>&#123;</span><br><span class="line">        <span class="type">DefaultWebSecurityManager</span> <span class="variable">defaultWebSecurityManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultWebSecurityManager</span>();</span><br><span class="line">        <span class="comment">// SecurityManager需要安全数据</span></span><br><span class="line">        defaultWebSecurityManager.setRealm(iniRealm);</span><br><span class="line">        <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ShiroFilterFactoryBean <span class="title function_">shiroFilter</span><span class="params">(DefaultWebSecurityManager defaultWebSecurityManager)</span>&#123;</span><br><span class="line">        <span class="type">ShiroFilterFactoryBean</span> <span class="variable">filter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ShiroFilterFactoryBean</span>();</span><br><span class="line">        <span class="comment">// 过滤器需要连接SecurityManager</span></span><br><span class="line">        filter.setSecurityManager(defaultWebSecurityManager);</span><br><span class="line">        <span class="comment">// 设置filter的过滤规则</span></span><br><span class="line">        Map&lt;String,String&gt; filterMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        filterMap.put(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/login.html&quot;</span>,<span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/register.html&quot;</span>,<span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/user/login&quot;</span>,<span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/user/register&quot;</span>,<span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/static/**&quot;</span>,<span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/**&quot;</span>,<span class="string">&quot;authc&quot;</span>);</span><br><span class="line">        filter.setFilterChainDefinitionMap(filterMap);</span><br><span class="line">        filter.setLoginUrl(<span class="string">&quot;/login.html&quot;</span>);</span><br><span class="line">        filter.setUnauthorizedUrl(<span class="string">&quot;/login/html&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> filter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="shiro的安全数据源"><a href="#shiro的安全数据源" class="headerlink" title="shiro的安全数据源"></a>shiro的安全数据源</h5><p>​来自shiro.ini文件，配置在resource目录下，规定了用户的账号、密码、角色等等。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[users]</span></span><br><span class="line"><span class="attr">zhangsan</span>=<span class="number">123456</span>,seller</span><br><span class="line"><span class="attr">laowang</span>=<span class="number">654123</span>,stockManager</span><br><span class="line"><span class="attr">admin</span>=<span class="number">147258</span>,admin</span><br><span class="line"><span class="section">[roles]</span></span><br><span class="line"><span class="attr">admin</span>=*</span><br><span class="line"><span class="attr">seller</span>=order-add,order-del,order-list</span><br><span class="line"><span class="attr">stockManager</span>=stock-add,stock-del,stock-list</span><br></pre></td></tr></table></figure><h5 id="业务流程"><a href="#业务流程" class="headerlink" title="业务流程"></a>业务流程</h5><p>​先配置入口请求，在PageController中，访问localhost:8080进入登录页面login.html。填写form表单中账号，密码后发送“&#x2F;user&#x2F;login”请求。在UserController中接收到此请求，调用userService认证是否登录成功。若成功跳转index.html页面，否则跳转login.html页面。(index和login页面都在templates目录下)。userService的认证流程是把username和pwd存入subject（就是UsernamPasswordToekn），再subject.login()认证，若失败则抛出异常。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkLogin</span><span class="params">(String username, String pwd)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordToken</span>(username, pwd);</span><br><span class="line">        <span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> SecurityUtils.getSubject();</span><br><span class="line">        subject.login(token);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/login.html&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">login1</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/index.html&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserServiceImpl userService;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">loginToIndex</span><span class="params">(String username, String pwd)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            userService.checkLogin(username, pwd);</span><br><span class="line">            System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;shibai&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/register&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">registerToIndex</span><span class="params">(String username1, String pwd1)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            userService.checkLogin(username1, pwd1);</span><br><span class="line">            System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">&quot;shibai&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    login</span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/user/login&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>账号<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    index登陆成功后</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2-Shiro安全框架简介</title>
      <link href="/article/dea21fd2.html"/>
      <url>/article/dea21fd2.html</url>
      
        <content type="html"><![CDATA[<h4 id="认证授权流程"><a href="#认证授权流程" class="headerlink" title="认证授权流程"></a>认证授权流程</h4><p>​认证：对用户信息身份检查（登录认证）</p><p>​授权：对用户权限检查（是否有对应的操作权限）</p><p>​流程图如下：</p><p><img src="https://z3.ax1x.com/2021/09/04/hgm81I.png" alt="avatar"></p><h4 id="安全框架"><a href="#安全框架" class="headerlink" title="安全框架"></a>安全框架</h4><p>​安全框架相当于保安，对应请求完成认证（有没资格登录）和授权（有没有资格获取对应的权限）的工作。</p><h5 id="常用的安全框架有"><a href="#常用的安全框架有" class="headerlink" title="常用的安全框架有"></a>常用的安全框架有</h5><table><thead><tr><th>shiro：</th><th>Apache组织的一种开源java安全框架（小而简单）</th></tr></thead><tbody><tr><td>SpringSecurity</td><td>对spring有依赖性</td></tr><tr><td>OAuth2：</td><td>第三方授权登录框架（比如王者荣耀可以用微信、QQ账号、微博等等账号登录）</td></tr></tbody></table><h4 id="Shrio简介"><a href="#Shrio简介" class="headerlink" title="Shrio简介"></a>Shrio简介</h4><p>​可以完成用户认证、授权、密码和会话管理。可以引用任何应用系统（主要针对单体项目的权限管理）。</p><h4 id="Shiro工作原理"><a href="#Shiro工作原理" class="headerlink" title="Shiro工作原理"></a>Shiro工作原理</h4><p>​Shiro框架主要有四大功能。</p><p><img src="https://z3.ax1x.com/2021/09/04/hguYTS.png" alt="avatar"></p><p>​Authentication:身份认证 &#x2F; 登录，验证用户是不是拥有相应的身份；</p><p>​Authorization：授权，即权限验证，验证某个已认证的用户是否拥有某个权限或某个角色；</p><p>​Session Management：会话管理，即用户登录后就是一次会话，在没有退出之前，它的所有信息都在会话中；会话可以是普通 JavaSE 环境的，也可以是如 Web 环境的；</p><p>​Cryptography：对敏感信息加密，保护数据的安全性，如密码加密存储到数据库，而不是明文存储；</p><h4 id="Shiro的核心组件"><a href="#Shiro的核心组件" class="headerlink" title="Shiro的核心组件"></a>Shiro的核心组件</h4><p><img src="https://z3.ax1x.com/2021/09/04/hgws2t.png" alt="avatar"></p><ul><li><strong>Subject</strong>：主体，可以看到主体可以是任何可以与应用交互的 “用户”；subject中包含用户的账号和密码，角色权限，是否登录状态等等一切信息，shiro只接收subject。web页面from表单传递username和pwd—-&gt;controller—–&gt;service—-&gt;shiro；</li><li><strong>SecurityManager</strong>：相当于 SpringMVC 中的 DispatcherServlet 或者 Struts2 中的 FilterDispatcher；是 Shiro 的心脏；所有具体的交互都通过 SecurityManager 进行控制；它管理着所有 Subject、且负责进行认证和授权、及会话、缓存的管理。</li><li><strong>Realm</strong>：可以有 1 个或多个 Realm（dataSource），可以认为是shiro安全实体数据源，即用于获取安全实体的；是shiro和数据之间桥梁。</li><li>Shrio的工作流程</li></ul><p><img src="https://z3.ax1x.com/2021/09/04/h2SwjJ.png" alt="avatar"></p><p><img src="https://z3.ax1x.com/2021/09/04/h2svl9.png" alt="avatar"></p>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1-Shiro框架学习之权限设计</title>
      <link href="/article/de409f59.html"/>
      <url>/article/de409f59.html</url>
      
        <content type="html"><![CDATA[<h4 id="权限管理的场景描述"><a href="#权限管理的场景描述" class="headerlink" title="权限管理的场景描述"></a>权限管理的场景描述</h4><p>​假如为一个服装公司设计一套有服装销售，客户信息采集，人员调动等等功能的智能管理系统。需要很多模块和功能。若此系统主要有库存管理、销售管理、客户管理、行政管理、系统管理等等功能。此表格第一行是权限分类名称和缩写代号。第二行到最后一行是权限名称和编号。</p><table><thead><tr><th>库存管理c</th><th>销售管理x</th><th>客户管理k</th><th>行政管理z</th><th>系统管理s</th></tr></thead><tbody><tr><td>入库 1001</td><td>新增订单1005</td><td>新增客户1009</td><td>卫生1013</td><td>员工管理1015</td></tr><tr><td>出库 1002</td><td>取消订单1006</td><td>查询客户1010</td><td>开关门1014</td><td>权限分配1016</td></tr><tr><td>查询 1003</td><td>订单查询1007</td><td>修改客户1011</td><td></td><td></td></tr><tr><td>修改 1004</td><td>修改订单1008</td><td>删除客户1012</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>​现在有张三、李四分别是公司的销售人员和仓管人员，他们的职责如下表</p><table><thead><tr><th>姓名</th><th>职业</th><th>权限</th></tr></thead><tbody><tr><td>张三</td><td>销售</td><td>1003、1005~~~~1012</td></tr><tr><td>李四</td><td>仓管</td><td>1001~~~~1004、1005、1009</td></tr></tbody></table><p>​此时ta们要进入公司的一体化管理系统，由于ta们职位不同，所以看到的菜单也不一样。这个系统登录需要账号密码，怎么通过账号来判断该员工是什么职位呢？创建一个用户表存储员工的信息并加上职位id。</p><table><thead><tr><th align="left">staff_id</th><th>staff_name</th><th>staff_password</th><th>position</th></tr></thead><tbody><tr><td align="left">1</td><td>zhangsan</td><td>123456</td><td>1(销售)</td></tr><tr><td align="left">2</td><td>lisi</td><td>444444</td><td>2（仓管）</td></tr></tbody></table><p>​每次新来一个员工就在上方表格里增加一行数据。每个员工登录时系统会判断ta的职位position，登录后就可以看到不同菜单和按钮。</p><h5 id="基于主页的权限管理系统"><a href="#基于主页的权限管理系统" class="headerlink" title="基于主页的权限管理系统"></a>基于主页的权限管理系统</h5><p>​这种是基于主页的权限管理系统（不同的用户看到不同的主页），但是这种权限管理不方便想要动态增加某个员工新功能，如果职位position很多就要写很多html页面。如下图所示。</p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hcIMiq.png" alt="avatar"></p><h5 id="基于用户和权限的权限管理"><a href="#基于用户和权限的权限管理" class="headerlink" title="基于用户和权限的权限管理"></a>基于用户和权限的权限管理</h5><p>​由于基于主页的访问方式不灵活，有局限性。所以可以让功能分配的更细一些。有员工表、权限表、员工权限中间表。这种方式基本能实现权限管理。如下图所示。</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hc7qTH.png" alt="avatar"></td></tr></tbody></table><p>​这种方式很方便新增用户，比如新增一个user-id&#x3D;3，叫王五的hr。他属于行政管理。只需要在权限表中添加</p><table><thead><tr><th>权限id</th><th>权限代号 mark</th><th>描述description</th></tr></thead><tbody><tr><td>1015</td><td>sys:z:cleanUp</td><td>做卫生</td></tr><tr><td>1016</td><td>sys:z:door</td><td>开关门</td></tr></tbody></table><p>​然后在用户权限表中添加3–&gt;1015；3–&gt;1016。若叫liucheng的用户要增加开关门的权限就可以再用户权限表中添加1—&gt;1014。若有个叫tangsan的销售新人加入公司user_id&#x3D;4。则要在用户权限表里添加4—&gt;1003,4—&gt;1005~~~~1012。又要增加一些重复的数据。如果公司有100个销售人员那种用户权限表中的重复数据越来越多。其中权限id不变，变化的是user_id。</p><h5 id="RBAC-Role-Base-Access-Control-基于角色的权限控制"><a href="#RBAC-Role-Base-Access-Control-基于角色的权限控制" class="headerlink" title="RBAC(Role Base Access Control):基于角色的权限控制"></a><strong>RBAC</strong>(Role Base Access Control):基于角色的权限控制</h5><p>​上面的建表方式可行但是不灵活。需要在用户表和权限表中增加一个角色表（职位表）。这样就有3个单独的表。再加上用户-角色表；角色-权限表这2个中间表串联起来。就可以灵活的为某个用户设置某个职位，为某个职位设计某个权限。如图</p><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/hcXwY4.png" alt="avatar"></td></tr></tbody></table><p>​此时公司新入职laowang相当仓管人员，只需要在用户角色表中添加 8—&gt;r002</p>]]></content>
      
      
      <categories>
          
          <category> shiro权限框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>找到所有数组中消失的数字</title>
      <link href="/article/b4961b2d.html"/>
      <url>/article/b4961b2d.html</url>
      
        <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>​题目url：<a href="https://leetcode-cn.com/problems/find-all-numbers-disappeared-in-an-array/">https://leetcode-cn.com/problems/find-all-numbers-disappeared-in-an-array/</a></p><p>​给你一个含 n 个整数的数组 nums ，其中 nums[i] 在区间 [1, n] 内。请你找出所有在 [1, n] 范围内但没有出现在 nums 中的数字，并以数组的形式返回结果。</p><p>示例 1：</p><p>输入：nums &#x3D; [4,3,2,7,8,2,3,1]    输出：[5,6] 。</p><p>解释：数组nums的长度是8，正常情况nums中的元素是1~8,而nums中缺少了5,6两个数。</p><p>示例 2：</p><p>输入：nums &#x3D; [1,1]   输出：[2]</p><p>解释：nums数组只有两个2，正常范围是1~2，缺少2</p><hr><h4 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h4><p>​创建一个新数组newArr,其长度和就数组nums一样。从旧数组第一个元素开始取出元素值numVal&#x3D;nums[i]（i从0开始）。再把新数组newArr重点第numVal个的元素值赋值为1。一轮循环后新数组的第j个元素是0，就代表这个j是旧数组中缺少的。</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">             旧数组 nums = [4,3,2,7,8,2,3,1]   新数组 newArr = [0,0,0,0,0,0,0,0]</span><br><span class="line">for循环nums中第一个元素  nums[0] = 4 </span><br><span class="line">把newArr中第4个元素赋值为1    -----&gt;    newArr = [0,0,0,1,0,0,0,0]</span><br><span class="line"></span><br><span class="line">for循环nums中第二个元素  nums[1] = 3 </span><br><span class="line">把newArr中第3个元素赋值为1    -----&gt;    newArr = [0,0,1,1,0,0,0,0]</span><br><span class="line"></span><br><span class="line">for循环nums中第三个元素  nums[2] = 2 </span><br><span class="line">把newArr中第2个元素赋值为1    -----&gt;    newArr = [0,1,1,1,0,0,0,0]</span><br><span class="line"></span><br><span class="line">for循环nums中第四个元素  nums[3] = 7 </span><br><span class="line">把newArr中第7个元素赋值为1    -----&gt;    newArr = [0,1,1,1,0,0,1,0]</span><br><span class="line"></span><br><span class="line">for循环nums中第五个元素  nums[4] = 8 </span><br><span class="line">把newArr中第8个元素赋值为1   把newArr中第2个元素赋值为1</span><br><span class="line"></span><br><span class="line">for循环nums中第六个元素  nums[5] = 2 </span><br><span class="line">把newArr中第2个元素赋值为1，此时newArr的第二个已经赋值，2是nums中重复的元素，newArr不变</span><br><span class="line">   -----&gt;    newArr = [0,1,1,1,0,0,1,1]</span><br><span class="line">   </span><br><span class="line">for循环nums中第七个元素  nums[6] = 3   </span><br><span class="line">把newArr中第3个元素赋值为1，此时newArr的第三个已经赋值，2是nums中重复的元素，newArr不变   -----&gt;    newArr = [0,1,1,1,0,0,1,1]</span><br><span class="line"></span><br><span class="line">for循环nums中第八个元素  nums[7] = 1</span><br><span class="line">把newArr中第1个元素赋值为1     -----&gt;    newArr = [1,1,1,1,0,0,1,1]</span><br><span class="line">循环结束后，newArr中第x个位置上元素是0，则x就是旧数组nums中缺失的元素。是第5个和第6个缺失</span><br></pre></td></tr></table></figure><hr><h4 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Integer&gt;  <span class="title function_">findDisappearedNumber1</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123; </span><br><span class="line">ArrayList&lt;Integer&gt; listResult= <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">       <span class="type">int</span>[] newArr = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];</span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">           newArr[nums[i] -<span class="number">1</span>] = <span class="number">1</span>; <span class="comment">//newArr中第nums[i]个元素对应的下标是nums[i]-1</span></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span><span class="number">0</span>; j &lt; newArr.length; j++) &#123;</span><br><span class="line">           <span class="keyword">if</span>(newArr[j] == <span class="number">0</span>) &#123;</span><br><span class="line">               listResult.add(j+<span class="number">1</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> listResult;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考答案"><a href="#参考答案" class="headerlink" title="参考答案"></a>参考答案</h4><p>​思路是从0开始遍历数组nums，下标i的范围是[0，nums.length-1]。找出nums[i]在 在区间 【1，n】 内对应下标。比如nums[i]&#x3D;4—&gt;4对应的下标是3.让3号下标的元素变成负数。代表nums[i]出现过一次。for循环结束nums中哪个位置x元素&gt;0,说明x+1是缺失的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 原数组    [<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>]</span><br><span class="line">* 理想数组   [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]     </span><br><span class="line">* 找出nums[i]在理想数组中的下标index</span><br><span class="line">* 再原数组下标是index的元素变成负数    </span><br><span class="line">* 那么元素和其小标有关系   nums[i]=i+<span class="number">1</span></span><br><span class="line">*  元素        对应的索引                                 新数组</span><br><span class="line">*    <span class="number">4</span>       <span class="number">3</span>: 把<span class="number">3</span>号索引的元素改成负数(<span class="number">7</span>---&gt;-<span class="number">7</span>)     &#123;<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,-<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>&#125;</span><br><span class="line">*    <span class="number">3</span>       <span class="number">2</span>: 把<span class="number">2</span>号索引的元素改成负数(<span class="number">2</span>---&gt;-<span class="number">2</span>)     &#123;<span class="number">4</span>,<span class="number">3</span>,-<span class="number">2</span>,-<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>&#125;</span><br><span class="line">*    <span class="number">2</span>       <span class="number">1</span>: 把<span class="number">1</span>号索引的元素改成负数(<span class="number">3</span>---&gt;-<span class="number">3</span>)     &#123;<span class="number">4</span>,-<span class="number">3</span>,-<span class="number">2</span>,-<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>&#125;</span><br><span class="line">*    <span class="number">7</span>       <span class="number">6</span>: 把<span class="number">6</span>号索引的元素改成负数(<span class="number">3</span>---&gt;-<span class="number">3</span>)     &#123;<span class="number">4</span>,-<span class="number">3</span>,-<span class="number">2</span>,-<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,-<span class="number">3</span>,<span class="number">1</span>&#125;</span><br><span class="line">*    <span class="number">8</span>       <span class="number">7</span>: 把<span class="number">7</span>号索引的元素改成负数(<span class="number">1</span>---&gt;-<span class="number">1</span>)     &#123;<span class="number">4</span>,-<span class="number">3</span>,-<span class="number">2</span>,-<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,-<span class="number">3</span>,-<span class="number">1</span>&#125;</span><br><span class="line">*    <span class="number">2</span>       <span class="number">1</span>: 此时 nums[<span class="number">1</span>]=-<span class="number">3</span>; 又因为num取了绝对值，又变成+<span class="number">3</span>，在变成-<span class="number">3</span></span><br><span class="line">*    <span class="number">3</span>       <span class="number">2</span>: 已经改过</span><br><span class="line">*    <span class="number">1</span>       <span class="number">0</span>: 把<span class="number">0</span>号索引的值改为负数(<span class="number">4</span>---&gt;-<span class="number">4</span>)       &#123;-<span class="number">4</span>,-<span class="number">3</span>,-<span class="number">2</span>,-<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,-<span class="number">3</span>,-<span class="number">1</span>&#125;</span><br><span class="line">*    此时没有变成负数的索引是<span class="number">4</span>、<span class="number">5</span>，对应的值是<span class="number">5</span>，<span class="number">6</span>。</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">findDisappearedNumber2</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; missList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="type">int</span> num=Math.abs(nums[i]);</span><br><span class="line">            <span class="type">int</span> index=num-<span class="number">1</span>; <span class="comment">//元素对应的索引  4---&gt;3</span></span><br><span class="line">            <span class="keyword">if</span>(nums[index]&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                nums[index] = -nums[index];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                missList.add(i+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> missList;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><hr><h4 id="参考答案图解"><a href="#参考答案图解" class="headerlink" title="参考答案图解"></a>参考答案图解</h4><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/27f967e5b44249bc.png" alt="avatar"></p><p><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/e5a3ed298be5de37.png" alt="avatar"></p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/7abb04523ef7e1da.png" alt="avatar"></h2><h4 id="对比总结"><a href="#对比总结" class="headerlink" title="对比总结"></a>对比总结</h4><p>​我的想法是用一个新的数组newArr【newArr的长度与旧数组相同】，在newArr中记录原数组的某个元素是否出现过，若出现让newArr对应下标的元素变成1.【比如 4在newArr中对应下标是3，就让newArr[3] &#x3D;1 】。和参考代码相比我多创建了一个数组，多占用了一些栈内存。而参考答案只用了最原始的数组nums[],在nums[]中标记为负数。理想的数组ideaNums是不存在的【ideaNums的特点是从1到n的递增数列，每次+1】就可以用一个变量表示，节省了栈空间但是增加了逻辑复杂度。</p>]]></content>
      
      
      <categories>
          
          <category> 算法与数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内功心法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最长公共前缀</title>
      <link href="/article/f4605f37.html"/>
      <url>/article/f4605f37.html</url>
      
        <content type="html"><![CDATA[<h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>编写一个函数来查找字符串数组中的最长公共前缀。如果不存在公共前缀，返回空字符串 “”。</p><p>示例 1：输入：strs &#x3D; [“flower”,”flow”,”flight”]<br>输出：”fl”</p><p>示例 2：输入：strs &#x3D; [“dog”,”racecar”,”car”]<br>输出：””<br>解释：输入不存在公共前缀。</p><h4 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h4><p>​我的思路 for循环取出每个字符串</p><p>​找出这些字符串中长度最小的一个 minLen，取出每个字符串的首字母 比较  。比较minLen次， 难点在于我不知道strs中有多少个字符串str，即使知道了也不能一次性把每个字符串str的首字母取出来比较。比如我有hashMap存储strs字符串数组，key—&gt;是字符串str的下标strIndex，value—&gt;char[]的，方便取出每个str的首字符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HashMap &lt;Integer,<span class="type">char</span>[]&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">  <span class="type">int</span> <span class="variable">chhh</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> <span class="variable">strsLen</span> <span class="operator">=</span> strs.length;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;strsLen;j++)&#123;</span><br><span class="line">    <span class="type">char</span>[] ch1 = map.get(j);</span><br><span class="line">          chhh = Integer.valueOf(ch1[<span class="number">0</span>]); </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>​关键是这个chhh每次遍历一遍字符串数组strs就有strLen个，而且这么多个chhh名字相同而值不同。</p><p>​要是能让这些chhh带上标记（标记出这chhh是属于哪个字符串strs[j]的首字母），把每个str的chhh取出来，亦或。若每个chhh异或后&#x3D;0，说明这个chhh是公共值。</p><p>​在把每个str的第二个元素取出来chhh2，异或每个chhh2若chhh2&#x3D;0,说明是公共值。一直循环minLen次。chhhh[i] ^&#x3D; chhhh[i+1];若循环每个str的首字母chhh后，chhh&#x3D;0 说明chhh是公共前缀。代码太复杂不会写了。wuwuwu</p><h4 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">longestCommonPrefix</span><span class="params">(String[] strs)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] lenthS = <span class="keyword">new</span> <span class="title class_">int</span>[strs.length];</span><br><span class="line">        HashMap&lt;Integer, <span class="type">char</span>[]&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span> ; i&lt;strs.length; i++) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> strs[i];</span><br><span class="line">            map.put(i,s1.toCharArray());</span><br><span class="line">            lenthS[i]=s1.length();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> Integer.MAX_VALUE; <span class="comment">// min是所有字符串中长度最小的一个</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;lenthS.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(lenthS[i] &lt;min) &#123;</span><br><span class="line">                min=lenthS[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> chhh;</span><br><span class="line">        <span class="type">int</span> <span class="variable">strLen</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;strs.length; j++) &#123; <span class="comment">//取出每个字符串的</span></span><br><span class="line">                <span class="type">char</span>[] ch1 = map.get(j);</span><br><span class="line">                chhh = Integer.valueOf(ch1[<span class="number">0</span>]); <span class="comment">//这是每个字符串的首字母</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">// 然后取出每个str的首字母 chhh</span></span><br><span class="line">    <span class="comment">// 每个chhh异或，若chhh==0，chhh是公共值</span></span><br><span class="line">    <span class="comment">// 循环minLen次就能找出最长的公共前缀</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="参考答案"><a href="#参考答案" class="headerlink" title="参考答案"></a>参考答案</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">longestCommonPrefix</span><span class="params">(String[] strs)</span> &#123;</span><br><span class="line">       <span class="keyword">if</span>(strs.length == <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="type">String</span> <span class="variable">ans</span> <span class="operator">=</span> strs[<span class="number">0</span>];</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">1</span>;i&lt;strs.length;i++) &#123;</span><br><span class="line">           <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">           <span class="keyword">for</span>(;j&lt;ans.length() &amp;&amp; j &lt; strs[i].length();j++) &#123; </span><br><span class="line">               <span class="comment">// j表示每个字符串中当前元素的下标</span></span><br><span class="line">               <span class="comment">// j要小于第一个字符串长度并且小于后面一个字符串的长度</span></span><br><span class="line">               <span class="comment">// j的最大值是----&gt;当前字符串ans长度和下一个字符串strs[i]长度的较小哪个</span></span><br><span class="line">               <span class="keyword">if</span>(ans.charAt(j) != strs[i].charAt(j))&#123;</span><br><span class="line">                   <span class="comment">// 若在j位 两个字符串的对应char值不一样</span></span><br><span class="line">                   <span class="comment">// 标记出出现差异的下标，退出内层循环</span></span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           ans = ans.substring(<span class="number">0</span>, j); <span class="comment">// 截取第0个~第j个字符</span></span><br><span class="line">           <span class="keyword">if</span>(ans.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">               <span class="keyword">return</span> ans;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> ans;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="参考代码的图解如下"><a href="#参考代码的图解如下" class="headerlink" title="参考代码的图解如下"></a>参考代码的图解如下</h4><ul><li><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/610fe4fc6f5d9.jpg" alt="avatar"></li></ul><h4 id="对比总结"><a href="#对比总结" class="headerlink" title="对比总结"></a>对比总结</h4><p>​我的想法很直接，是取出strs中每个字符串的首字母，在把这些首字母异或。若异或的结果等于0，就表明这是公共元素。首先这种做法不合理。因为不能一次性把每个字符串的首字符取出来一起比较。只能两个字符串的同一个下标索引的值比较。</p><p>​在看了参考代码后，我发现能用整体的思维比较【以每个字符串为单位,比较ans和strs[i]，用j为下标记录2个字符串间第一次有差异的位置，截取下标j之间的公共部分，让ans重新指向这个公共部分。而strs[i]也同样指向下一个字符串。这样淘汰的是整个长度较大字符串】。而不是以每个字符为单位。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 发现参考答案的</span></span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">1</span>;i&lt;strs.length;i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;ans.length() &amp;&amp; j &lt; strs[i].length();j++) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 这段代码能代替我的</span></span><br><span class="line"><span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> Integer.MAX_VALUE; <span class="comment">// min是所有字符串中长度最小的一个</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;lenthS.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(lenthS[i] &lt;min) &#123;</span><br><span class="line">            min=lenthS[i];</span><br><span class="line">         &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> <span class="comment">//同样是标记出所有字符串中长度最小的。只不过我一次性找出来，而参考答案是多次找出来。</span></span><br><span class="line"> <span class="comment">//就是分成多次操作才好用substring()方法截取公共部分，还有空间刷新ans和strs[i] !!!</span></span><br><span class="line"> <span class="comment">//我一开始没有想到用substring()而是以一个字符为单位，找出来而然后存入string[]中</span></span><br><span class="line"> <span class="comment">//这样不仅增加每个字符对比的难度还增加了数组拆分和组装的时间</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法与数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内功心法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>申请历史表归历史操作</title>
      <link href="/article/bc4f6b3b.html"/>
      <url>/article/bc4f6b3b.html</url>
      
        <content type="html"><![CDATA[<h4 id="历史表的增加"><a href="#历史表的增加" class="headerlink" title="历史表的增加"></a>历史表的增加</h4><p>​使用oracle的语法来判断某个历史表是否存在。首先申明一个Integer变量 ，查询这张表是否存在，并把存在的结果复制给一个Integer变量、integer&#x3D;0就创建表，主表的DDL语句在svn的中有，只不过修改的时候要改变表名，数据库名，索引名，这些名前面都拼接his_。</p><h4 id="归历史操作"><a href="#归历史操作" class="headerlink" title="归历史操作"></a>归历史操作</h4><p>​定义一个number类型的v_rowcount变量，把查询语句的结果复制给v_row</p><p>count,v_rowcount&#x3D;0 表明查询的表没有记录归历史条件，否则存在归历史记录但是要修改数据，<code>curr_datetime &lt; to_date($data_date$,&#39;&#39;YYYYMMDD&#39;&#39;)</code></p>]]></content>
      
      
      <categories>
          
          <category> 工作总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内功心法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么搭建博客</title>
      <link href="/article/10fcad99.html"/>
      <url>/article/10fcad99.html</url>
      
        <content type="html"><![CDATA[<hr><blockquote><h3 id="I-Like"><a href="#I-Like" class="headerlink" title="I Like"></a>I Like</h3><h4 id="学习新东西"><a href="#学习新东西" class="headerlink" title="学习新东西"></a>学习新东西</h4><ul><li>创建个人博客感觉很酷，就像一个小型的qq空间一样的个人主页。创建博客的过程很有趣能学到很多新东西，比如对npm多了一些了解。更熟悉yml文件配置的格式规范。Linux上安装软件，nginx配置等等。学习应用新的hexo博客框架并展示出来挺有成就感的。</li></ul><h4 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h4><ul><li>留个爪印，能在信息如海的互联网世界里。有一片自己的小站。记录发表学习过程和想法就很酷。而且写博客的过程很治愈就想自己和自己讲话一样。</li></ul><h4 id="偶然"><a href="#偶然" class="headerlink" title="偶然"></a>偶然</h4><ul><li>你自己在查阅资料的时候无意间点开了别人博客网站，就立马被博主的页面吸引了。不仅技术点讲解的好，而且页面布局也漂亮。</li></ul><p>​</p></blockquote><p>​                                                                                                    </p><p>​ —— 一个刚入职两个月的菜鸟程序猿</p>]]></content>
      
      
      
        <tags>
            
            <tag> 初来乍到 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tomcat启动报错</title>
      <link href="/article/296cd28.html"/>
      <url>/article/296cd28.html</url>
      
        <content type="html"><![CDATA[<h3 id="报错场景"><a href="#报错场景" class="headerlink" title="报错场景"></a>报错场景</h3><p>​在写好一个简单的登录页面，login.html和一个servlet类后。启动tomcat就报如下错误。</p><table><thead><tr><th><img src="https://zdblogimg.oss-cn-hangzhou.aliyuncs.com/image-20211205120621813.png" alt="image-20211205120621813"></th></tr></thead></table><p>大概意思无法启动组件LifecycleException。</p><h3 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a>代码如下</h3><p>login.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/httpExam/login&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span> 提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>LoginServlet.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;asdrwq&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;doget&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="找错过程"><a href="#找错过程" class="headerlink" title="找错过程"></a>找错过程</h3><p>​于是我开始怀疑①是不是servlet相关的类没有引入，发现HttpServlet类可以点进去。就排除了①的可能。</p><p>​第②种可能是我login.html的form里的action请求写错了或LoginServlet.java的接收路径写错。编译时报错说明tomcat在初始化的时候有问题，于是就百度发现是我在LoginServlet里的@WebServlet注解没有给参数前面加【&#x2F;】。我没有用SpringMVC中的@RequestMapping注解，我发现以前写的所有关于处理请求的注解@RequestMapping，@GetMapping@PostMapping等url前面都加了&#x2F;。为什么要加url前面加&#x2F;呢，我不知道哈哈只知道这样写就对了。</p><p>所以正确的写法是 @WebServlet(“&#x2F;login”)</p><p>参考资料<a href="https://blog.csdn.net/xieminglu/article/details/102865450">https://blog.csdn.net/xieminglu/article/details/102865450</a></p>]]></content>
      
      
      <categories>
          
          <category> 踩坑记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web应用服务器 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
